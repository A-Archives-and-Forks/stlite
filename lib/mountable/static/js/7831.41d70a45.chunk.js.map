{"version":3,"file":"static/js/7831.41d70a45.chunk.js","mappings":"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","sources":["../../../streamlit/frontend/lib/src/hooks/useWidgetManagerElementState.tsx","../../../streamlit/frontend/lib/src/hooks/useDownloadUrl.ts","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/NoMicPermissions.tsx","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/Placeholder.tsx","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/constants.ts","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/formatTime.ts","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/AudioInputActionButtons.tsx","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/convertAudioToWav.ts","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/AudioInputErrorState.tsx","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/AudioInput.tsx","../../../streamlit/frontend/lib/src/util/uploadFiles.ts","../../../streamlit/frontend/lib/src/util/Hooks.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useCallback, useEffect, useMemo, useState } from \"react\"\n\nimport { useFormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport {\n  isNullOrUndefined,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\n\n/**\n * Think of useState, but the state is also persisted in the widget manager.\n * This allows you to have the state be persisted between mounting and unmounting of the component.\n * @param widgetMgr - The widget manager instance to use\n * @param id - The id of the widget to store the state for\n * @param key - The key of the state to store\n * @param defaultValue - The default value to use if the state is not set in the widget manager\n * @returns A tuple containing the current state and a function to set the state\n */\nconst useWidgetManagerElementState = <T,>({\n  widgetMgr,\n  id,\n  formId,\n  key,\n  defaultValue,\n}: {\n  widgetMgr: WidgetStateManager\n  id: string\n  formId?: string\n  key: string\n  defaultValue: T\n}): [T, (value: T) => void] => {\n  useEffect(() => {\n    const existingValue = widgetMgr.getElementState(id, key)\n    if (isNullOrUndefined(existingValue) && notNullOrUndefined(defaultValue)) {\n      widgetMgr.setElementState(id, key, defaultValue)\n    }\n  }, [widgetMgr, id, key, defaultValue])\n\n  const [state, setStateInternal] = useState<T>(\n    widgetMgr.getElementState(id, key) ?? defaultValue\n  )\n\n  const setState = useCallback(\n    (value: T) => {\n      widgetMgr.setElementState(id, key, value)\n      setStateInternal(value)\n    },\n    [widgetMgr, id, key]\n  )\n\n  const element = useMemo(() => ({ formId: formId || \"\" }), [formId])\n  const onFormCleared = useCallback(\n    () => setState(defaultValue),\n    [defaultValue, setState]\n  )\n\n  useFormClearHelper({\n    element,\n    widgetMgr,\n    onFormCleared,\n  })\n\n  return [state, setState]\n}\n\nexport default useWidgetManagerElementState\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useCallback } from \"react\"\n\nimport { LibContext } from \"@streamlit/lib/src/components/core/LibContext\"\nimport createDownloadLinkElement from \"@streamlit/lib/src/util/createDownloadLinkElement\"\n\nconst useDownloadUrl = (\n  url: string | null,\n  filename: string\n): (() => void) => {\n  const {\n    libConfig: { enforceDownloadInNewTab = false }, // Default to false, if no libConfig, e.g. for tests\n  } = React.useContext(LibContext)\n\n  const downloadUrl = useCallback(() => {\n    if (!url) return\n\n    const link = createDownloadLinkElement({\n      enforceDownloadInNewTab,\n      url,\n      filename,\n    })\n\n    link.style.display = \"none\"\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }, [url, enforceDownloadInNewTab, filename])\n\n  return downloadUrl\n}\n\nexport default useDownloadUrl\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\nimport { Spinner } from \"baseui/spinner\"\n\nexport const StyledAudioInputContainerDiv = styled.div()\n\nexport const StyledWaveformContainerDiv = styled.div(({ theme }) => ({\n  height: theme.sizes.largestElementHeight,\n  width: \"100%\",\n  background: theme.colors.secondaryBg,\n  borderRadius: theme.radii.default,\n  marginBottom: theme.spacing.twoXS,\n  display: \"flex\",\n  alignItems: \"center\",\n  position: \"relative\",\n  paddingLeft: theme.spacing.xs,\n  paddingRight: theme.spacing.sm,\n}))\n\nexport const StyledWaveformInnerDiv = styled.div({\n  flex: 1,\n})\n\nexport const StyledWaveSurferDiv = styled.div<{ show: boolean }>(\n  ({ show }) => ({\n    display: show ? \"block\" : \"none\",\n  })\n)\n\nexport const StyledWaveformTimeCode = styled.span<{\n  isPlayingOrRecording: boolean\n}>(({ theme, isPlayingOrRecording }) => ({\n  margin: theme.spacing.sm,\n  fontFamily: theme.fonts.monospace,\n  color: isPlayingOrRecording\n    ? theme.colors.bodyText\n    : theme.colors.fadedText60,\n  backgroundColor: theme.colors.secondaryBg,\n  fontSize: theme.fontSizes.sm,\n}))\n\nexport const StyledErrorContainerDiv = styled.div({\n  width: \"100%\",\n  textAlign: \"center\",\n  overflow: \"hidden\",\n})\n\nexport const StyledErrorTextSpan = styled.span(({ theme }) => ({\n  color: theme.colors.bodyText,\n}))\n\nexport const StyledNoMicInputLearnMoreLink = styled.a()\n\n// Placeholder\nexport const StyledPlaceholderContainerDiv = styled.div(({ theme }) => ({\n  height: theme.sizes.largestElementHeight,\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}))\n\nexport const StyledPlaceholderDotsDiv = styled.div(({ theme }) => {\n  const dotSize = \"0.625em\"\n  return {\n    opacity: 0.2,\n    width: \"100%\",\n    height: dotSize,\n    backgroundSize: dotSize,\n    backgroundImage: `radial-gradient(${theme.colors.fadedText10} 40%, transparent 40%)`,\n    backgroundRepeat: \"repeat\",\n  }\n})\n\nexport const StyledActionButtonStopRecordingDiv = styled.span(({ theme }) => ({\n  \"& > button\": {\n    color: theme.colors.primary,\n    padding: theme.spacing.threeXS,\n  },\n  \"& > button:hover, & > button:focus\": {\n    color: theme.colors.red,\n  },\n}))\n\nexport const StyledActionButtonStartRecordingDiv = styled.span(\n  ({ theme }) => ({\n    \"& > button\": {\n      padding: theme.spacing.threeXS,\n      color: theme.colors.fadedText40,\n    },\n    \"& > button:hover, & > button:focus\": {\n      color: theme.colors.primary,\n    },\n  })\n)\n\nexport const StyledActionButtonPlayPauseDiv = styled.span(({ theme }) => ({\n  \"& > button\": {\n    padding: theme.spacing.threeXS,\n    color: theme.colors.fadedText60,\n  },\n  \"& > button:hover, & > button:focus\": {\n    color: theme.colors.bodyText,\n  },\n}))\n\nexport const StyledActionButtonContainerDiv = styled.div(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexGrow: 0,\n  flexShrink: 1,\n  padding: theme.spacing.xs,\n  gap: theme.spacing.twoXS,\n  marginRight: theme.spacing.twoXS,\n}))\n\nexport const StyledWidgetLabelHelp = styled.div(({ theme }) => ({\n  marginLeft: theme.spacing.sm,\n}))\n\nexport const StyledSpinner = styled(Spinner)(({ theme }) => {\n  return {\n    fontSize: theme.fontSizes.sm,\n    width: theme.sizes.spinnerSize,\n    height: theme.sizes.spinnerSize,\n    borderWidth: theme.sizes.spinnerThickness,\n    radius: theme.radii.md,\n    justifyContents: \"center\",\n    padding: theme.spacing.none,\n    margin: theme.spacing.none,\n    borderColor: theme.colors.borderColor,\n    borderTopColor: theme.colors.primary,\n    flexGrow: 0,\n    flexShrink: 0,\n  }\n})\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { ENABLE_PERIPHERALS_DOCS_URL } from \"@streamlit/lib/src/urls\"\n\nimport {\n  StyledErrorContainerDiv,\n  StyledErrorTextSpan,\n  StyledNoMicInputLearnMoreLink,\n} from \"./styled-components\"\n\nconst NoMicPermissions = (): ReactElement => {\n  return (\n    <StyledErrorContainerDiv>\n      <StyledErrorTextSpan>\n        This app would like to use your microphone.\n      </StyledErrorTextSpan>{\" \"}\n      <StyledNoMicInputLearnMoreLink href={ENABLE_PERIPHERALS_DOCS_URL}>\n        Learn how to allow access.\n      </StyledNoMicInputLearnMoreLink>\n    </StyledErrorContainerDiv>\n  )\n}\n\nexport default NoMicPermissions\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport {\n  StyledPlaceholderContainerDiv,\n  StyledPlaceholderDotsDiv,\n} from \"./styled-components\"\n\nconst Placeholder = (): ReactElement => {\n  return (\n    <StyledPlaceholderContainerDiv>\n      <StyledPlaceholderDotsDiv />\n    </StyledPlaceholderContainerDiv>\n  )\n}\n\nexport default Placeholder\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const WAVEFORM_PADDING = 4\nexport const BAR_WIDTH = 4\nexport const BAR_GAP = 4\nexport const BAR_RADIUS = 8\nexport const CURSOR_WIDTH = 0\n\nexport const STARTING_TIME_STRING = \"00:00\"\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst formatTime = (timeMs: number): string => {\n  const date = new Date(timeMs)\n\n  return date.toLocaleTimeString(undefined, {\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    timeZone: \"UTC\",\n  })\n}\n\nexport default formatTime\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport { Mic } from \"@emotion-icons/material-outlined\"\nimport {\n  Pause,\n  PlayArrow,\n  Refresh,\n  StopCircle,\n} from \"@emotion-icons/material-rounded\"\nimport { EmotionIcon } from \"@emotion-icons/emotion-icon\"\n\nimport BaseButton, {\n  BaseButtonKind,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\n\nimport {\n  StyledActionButtonContainerDiv,\n  StyledActionButtonPlayPauseDiv,\n  StyledActionButtonStartRecordingDiv,\n  StyledActionButtonStopRecordingDiv,\n  StyledSpinner,\n} from \"./styled-components\"\n\ninterface BaseActionButtonProps {\n  onClick: () => void\n  disabled: boolean\n  ariaLabel: string\n  iconContent: EmotionIcon\n}\n\nconst ActionButton: React.FC<BaseActionButtonProps> = ({\n  onClick,\n  disabled,\n  ariaLabel,\n  iconContent,\n}) => (\n  <BaseButton\n    kind={BaseButtonKind.BORDERLESS_ICON}\n    onClick={onClick}\n    disabled={disabled}\n    aria-label={ariaLabel}\n    fluidWidth\n    data-testid=\"stAudioInputActionButton\"\n  >\n    <Icon content={iconContent} size=\"lg\" color=\"inherit\" />\n  </BaseButton>\n)\n\nexport interface AudioInputActionButtonProps {\n  disabled: boolean\n  isRecording: boolean\n  isPlaying: boolean\n  isUploading: boolean\n  isError: boolean\n  recordingUrlExists: boolean\n  startRecording(): void\n  stopRecording(): void\n  onClickPlayPause(): void\n  onClear(): void\n}\n\ninterface AudioInputStopRecordingButtonProps {\n  disabled: boolean\n  stopRecording(): void\n}\n\ninterface AudioInputPlayPauseButtonProps {\n  disabled: boolean\n  isPlaying: boolean\n  onClickPlayPause(): void\n}\n\ninterface AudioInputStartRecordingButtonProps {\n  disabled: boolean\n  startRecording(): void\n}\n\ninterface AudioInputResetButtonProps {\n  onClick(): void\n}\n\nexport const AudioInputStopRecordingButton: React.FC<\n  AudioInputStopRecordingButtonProps\n> = ({ disabled, stopRecording }) => (\n  <StyledActionButtonStopRecordingDiv>\n    <ActionButton\n      onClick={stopRecording}\n      disabled={disabled}\n      ariaLabel=\"Stop recording\"\n      iconContent={StopCircle}\n    />\n  </StyledActionButtonStopRecordingDiv>\n)\n\nexport const AudioInputPlayPauseButton: React.FC<\n  AudioInputPlayPauseButtonProps\n> = ({ disabled, isPlaying, onClickPlayPause }) => {\n  return (\n    <StyledActionButtonPlayPauseDiv>\n      {isPlaying ? (\n        <ActionButton\n          onClick={onClickPlayPause}\n          disabled={disabled}\n          ariaLabel=\"Pause\"\n          iconContent={Pause}\n        />\n      ) : (\n        <ActionButton\n          onClick={onClickPlayPause}\n          disabled={disabled}\n          ariaLabel=\"Play\"\n          iconContent={PlayArrow}\n        />\n      )}\n    </StyledActionButtonPlayPauseDiv>\n  )\n}\n\nexport const AudioInputStartRecordingButton: React.FC<\n  AudioInputStartRecordingButtonProps\n> = ({ disabled, startRecording }) => (\n  <StyledActionButtonStartRecordingDiv>\n    <ActionButton\n      onClick={startRecording}\n      disabled={disabled}\n      ariaLabel=\"Record\"\n      iconContent={Mic}\n    />\n  </StyledActionButtonStartRecordingDiv>\n)\n\nexport const AudioInputResetButton: React.FC<AudioInputResetButtonProps> = ({\n  onClick,\n}) => (\n  <StyledActionButtonPlayPauseDiv>\n    <ActionButton\n      disabled={false}\n      onClick={onClick}\n      ariaLabel=\"Reset\"\n      iconContent={Refresh}\n    />\n  </StyledActionButtonPlayPauseDiv>\n)\n\nconst AudioInputActionButtons: React.FC<AudioInputActionButtonProps> = ({\n  disabled,\n  isRecording,\n  isPlaying,\n  isUploading,\n  isError,\n  recordingUrlExists,\n  startRecording,\n  stopRecording,\n  onClickPlayPause,\n  onClear,\n}) => {\n  if (isError) {\n    return (\n      <StyledActionButtonContainerDiv>\n        <AudioInputResetButton onClick={onClear} />\n      </StyledActionButtonContainerDiv>\n    )\n  }\n\n  if (isUploading) {\n    return (\n      <StyledActionButtonContainerDiv>\n        <StyledSpinner aria-label=\"Uploading\" />\n      </StyledActionButtonContainerDiv>\n    )\n  }\n\n  return (\n    <StyledActionButtonContainerDiv>\n      {isRecording ? (\n        <AudioInputStopRecordingButton\n          disabled={disabled}\n          stopRecording={stopRecording}\n        />\n      ) : (\n        <AudioInputStartRecordingButton\n          disabled={disabled}\n          startRecording={startRecording}\n        />\n      )}\n      {recordingUrlExists && (\n        <AudioInputPlayPauseButton\n          disabled={disabled}\n          isPlaying={isPlaying}\n          onClickPlayPause={onClickPlayPause}\n        />\n      )}\n    </StyledActionButtonContainerDiv>\n  )\n}\n\nexport default memo(AudioInputActionButtons)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// code in this file was adapted from recorder.js library\n\nimport { logError } from \"@streamlit/lib/src/util/log\"\n\n/**\n * Converts a file Blob (audio/video) to a WAV Blob.\n * @param fileBlob - The input file as a Blob.\n * @returns - A Promise resolving with the WAV file as a Blob.\n */\nasync function convertFileToWav(fileBlob: Blob): Promise<Blob | undefined> {\n  const audioContext = new window.AudioContext()\n  const arrayBuffer = await fileBlob.arrayBuffer()\n\n  let audioBuffer: AudioBuffer\n  try {\n    audioBuffer = await audioContext.decodeAudioData(arrayBuffer)\n  } catch (error) {\n    logError(error)\n    return undefined // Return undefined if decoding fails\n  }\n\n  const numOfChan = audioBuffer.numberOfChannels\n  const sampleRate = audioBuffer.sampleRate\n  const length = audioBuffer.length * numOfChan * 2 + 44\n  const buffer = new ArrayBuffer(length)\n  const view = new DataView(buffer)\n\n  // WAV header metadata\n  const wavHeader = {\n    0: { type: \"string\", value: \"RIFF\" },\n    4: { type: \"uint32\", value: 36 + audioBuffer.length * 2 * numOfChan },\n    8: { type: \"string\", value: \"WAVE\" },\n    12: { type: \"string\", value: \"fmt \" },\n    16: { type: \"uint32\", value: 16 }, // PCM format\n    20: { type: \"uint16\", value: 1 }, // PCM format code\n    22: { type: \"uint16\", value: numOfChan }, // Number of channels\n    24: { type: \"uint32\", value: sampleRate }, // Sample rate\n    28: { type: \"uint32\", value: sampleRate * numOfChan * 2 }, // Byte rate\n    32: { type: \"uint16\", value: numOfChan * 2 }, // Block align\n    34: { type: \"uint16\", value: 16 }, // Bits per sample (16-bit)\n    36: { type: \"string\", value: \"data\" },\n    40: { type: \"uint32\", value: audioBuffer.length * numOfChan * 2 }, // Data chunk length\n  }\n\n  // Write WAV header from the dictionary using Object.entries\n  Object.entries(wavHeader).forEach(([offset, { type, value }]) => {\n    const intOffset = parseInt(offset, 10)\n    if (type === \"string\") {\n      writeString(view, intOffset, value as string)\n    } else if (type === \"uint32\") {\n      view.setUint32(intOffset, value as number, true)\n    } else if (type === \"uint16\") {\n      view.setUint16(intOffset, value as number, true)\n    }\n  })\n\n  // Write PCM data\n  for (let channel = 0; channel < numOfChan; channel++) {\n    floatTo16BitPCM(\n      view,\n      44 + channel * audioBuffer.length * 2,\n      audioBuffer.getChannelData(channel)\n    )\n  }\n\n  const wavArray = new Uint8Array(buffer)\n  return new Blob([wavArray], { type: \"audio/wav\" })\n}\n\n/**\n * Converts a floating-point sample array into 16-bit PCM format.\n * @param output - The DataView to write to.\n * @param offset - The starting offset in the DataView.\n * @param input - The Float32Array with the input samples.\n */\nfunction floatTo16BitPCM(\n  output: DataView,\n  offset: number,\n  input: Float32Array\n): void {\n  for (let i = 0; i < input.length; i++, offset += 2) {\n    const s = Math.max(-1, Math.min(1, input[i]))\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true)\n  }\n}\n\n/**\n * Writes a string to a DataView at the specified offset.\n * @param view - The DataView to write to.\n * @param offset - The starting offset in the DataView.\n * @param string - The string to write.\n */\nfunction writeString(view: DataView, offset: number, string: string): void {\n  for (let i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i))\n  }\n}\n\nexport default convertFileToWav\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport {\n  StyledErrorContainerDiv,\n  StyledErrorTextSpan,\n} from \"./styled-components\"\n\nconst AudioInputErrorState = (): ReactElement => {\n  return (\n    <StyledErrorContainerDiv>\n      <StyledErrorTextSpan>\n        An error has occurred, please try again.\n      </StyledErrorTextSpan>\n    </StyledErrorContainerDiv>\n  )\n}\n\nexport default AudioInputErrorState\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  memo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\"\n\nimport { useTheme } from \"@emotion/react\"\nimport WaveSurfer from \"wavesurfer.js\"\nimport RecordPlugin from \"wavesurfer.js/dist/plugins/record\"\nimport { Delete, FileDownload } from \"@emotion-icons/material-outlined\"\nimport isEqual from \"lodash/isEqual\"\n\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport { FileUploadClient } from \"@streamlit/lib/src/FileUploadClient\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport { AudioInput as AudioInputProto } from \"@streamlit/lib/src/proto\"\nimport Toolbar, {\n  ToolbarAction,\n} from \"@streamlit/lib/src/components/shared/Toolbar\"\nimport {\n  isNullOrUndefined,\n  labelVisibilityProtoValueToEnum,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\nimport { blend, convertRemToPx } from \"@streamlit/lib/src/theme/utils\"\nimport { uploadFiles } from \"@streamlit/lib/src/util/uploadFiles\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport { WidgetLabel } from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport { usePrevious } from \"@streamlit/lib/src/util/Hooks\"\nimport useWidgetManagerElementState from \"@streamlit/lib/src/hooks/useWidgetManagerElementState\"\nimport useDownloadUrl from \"@streamlit/lib/src/hooks/useDownloadUrl\"\n\nimport {\n  StyledAudioInputContainerDiv,\n  StyledWaveformContainerDiv,\n  StyledWaveformInnerDiv,\n  StyledWaveformTimeCode,\n  StyledWaveSurferDiv,\n  StyledWidgetLabelHelp,\n} from \"./styled-components\"\nimport NoMicPermissions from \"./NoMicPermissions\"\nimport Placeholder from \"./Placeholder\"\nimport {\n  BAR_GAP,\n  BAR_RADIUS,\n  BAR_WIDTH,\n  CURSOR_WIDTH,\n  STARTING_TIME_STRING,\n  WAVEFORM_PADDING,\n} from \"./constants\"\nimport formatTime from \"./formatTime\"\nimport AudioInputActionButtons from \"./AudioInputActionButtons\"\nimport convertAudioToWav from \"./convertAudioToWav\"\nimport AudioInputErrorState from \"./AudioInputErrorState\"\n\nexport interface Props {\n  element: AudioInputProto\n  uploadClient: FileUploadClient\n  widgetMgr: WidgetStateManager\n  fragmentId?: string\n  disabled: boolean\n}\n\nconst AudioInput: React.FC<Props> = ({\n  element,\n  uploadClient,\n  widgetMgr,\n  fragmentId,\n  disabled,\n}): ReactElement => {\n  const theme = useTheme()\n  const previousTheme = usePrevious(theme)\n  const [wavesurfer, setWavesurfer] = useState<WaveSurfer | null>(null)\n  const waveSurferRef = React.useRef<HTMLDivElement | null>(null)\n  const [deleteFileUrl, setDeleteFileUrl] = useWidgetManagerElementState<\n    string | null\n  >({\n    widgetMgr,\n    id: element.id,\n    key: \"deleteFileUrl\",\n    defaultValue: null,\n  })\n  const [recordPlugin, setRecordPlugin] = useState<RecordPlugin | null>(null)\n  // to eventually show the user the available audio devices\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [availableAudioDevices, setAvailableAudioDevices] = useState<\n    MediaDeviceInfo[]\n  >([])\n  const [activeAudioDeviceId, setActiveAudioDeviceId] = useState<\n    string | null\n  >(null)\n\n  const [recordingUrl, setRecordingUrl] = useWidgetManagerElementState<\n    string | null\n  >({\n    widgetMgr,\n    id: element.id,\n    key: \"recordingUrl\",\n    defaultValue: null,\n  })\n  const [, setRerender] = useState(0)\n  const forceRerender = (): void => {\n    setRerender(prev => prev + 1)\n  }\n  const [progressTime, setProgressTime] = useState(STARTING_TIME_STRING)\n\n  const [recordingTime, setRecordingTime] =\n    useWidgetManagerElementState<string>({\n      widgetMgr,\n      id: element.id,\n      formId: element.formId,\n      key: \"recordingTime\",\n      defaultValue: STARTING_TIME_STRING,\n    })\n\n  const [shouldUpdatePlaybackTime, setShouldUpdatePlaybackTime] =\n    useState(false)\n  const [hasNoMicPermissions, setHasNoMicPermissions] = useState(false)\n  const [hasRequestedMicPermissions, setHasRequestedMicPermissions] =\n    useState(false)\n  const [isUploading, setIsUploading] = useState(false)\n  const [isError, setIsError] = useState(false)\n\n  const widgetId = element.id\n  const widgetFormId = element.formId\n\n  const transcodeAndUploadFile = useCallback(\n    async (blob: Blob) => {\n      setIsUploading(true)\n      if (notNullOrUndefined(widgetFormId))\n        widgetMgr.setFormsWithUploadsInProgress(new Set([widgetFormId]))\n\n      let wavBlob: Blob | undefined = undefined\n\n      if (blob.type === \"audio/wav\") {\n        wavBlob = blob\n      } else {\n        wavBlob = await convertAudioToWav(blob)\n      }\n\n      if (!wavBlob) {\n        setIsError(true)\n        return\n      }\n\n      const url = URL.createObjectURL(wavBlob)\n      const file = new File([wavBlob], \"audio.wav\", { type: wavBlob.type })\n\n      setRecordingUrl(url)\n\n      uploadFiles({\n        files: [file],\n        uploadClient,\n        widgetMgr,\n        widgetInfo: { id: widgetId, formId: widgetFormId },\n        fragmentId,\n      })\n        .then(({ successfulUploads, failedUploads }) => {\n          if (failedUploads.length > 0) {\n            setIsError(true)\n            return\n          }\n          const upload = successfulUploads[0]\n          if (upload && upload.fileUrl.deleteUrl) {\n            setDeleteFileUrl(upload.fileUrl.deleteUrl)\n          }\n        })\n        .finally(() => {\n          if (notNullOrUndefined(widgetFormId))\n            widgetMgr.setFormsWithUploadsInProgress(new Set())\n\n          setIsUploading(false)\n        })\n    },\n    [\n      setRecordingUrl,\n      uploadClient,\n      widgetMgr,\n      widgetId,\n      widgetFormId,\n      fragmentId,\n      setDeleteFileUrl,\n    ]\n  )\n\n  const handleClear = useCallback(\n    ({ updateWidgetManager }: { updateWidgetManager?: boolean }) => {\n      if (isNullOrUndefined(wavesurfer) || isNullOrUndefined(deleteFileUrl)) {\n        return\n      }\n      setRecordingUrl(null)\n      wavesurfer.empty()\n      uploadClient.deleteFile(deleteFileUrl)\n      setProgressTime(STARTING_TIME_STRING)\n      setRecordingTime(STARTING_TIME_STRING)\n      setDeleteFileUrl(null)\n      if (updateWidgetManager) {\n        widgetMgr.setFileUploaderStateValue(\n          element,\n          {},\n          { fromUi: true },\n          fragmentId\n        )\n      }\n      setShouldUpdatePlaybackTime(false)\n      if (notNullOrUndefined(recordingUrl)) {\n        URL.revokeObjectURL(recordingUrl)\n      }\n    },\n    [\n      deleteFileUrl,\n      recordingUrl,\n      uploadClient,\n      wavesurfer,\n      element,\n      widgetMgr,\n      fragmentId,\n      setRecordingTime,\n      setRecordingUrl,\n      setDeleteFileUrl,\n    ]\n  )\n\n  useEffect(() => {\n    if (isNullOrUndefined(widgetFormId)) return\n\n    const formClearHelper = new FormClearHelper()\n    formClearHelper.manageFormClearListener(widgetMgr, widgetFormId, () => {\n      handleClear({ updateWidgetManager: true })\n    })\n\n    return () => formClearHelper.disconnect()\n  }, [widgetFormId, handleClear, widgetMgr])\n\n  const initializeWaveSurfer = useCallback(() => {\n    if (waveSurferRef.current === null) return\n\n    const ws = WaveSurfer.create({\n      container: waveSurferRef.current,\n      waveColor: recordingUrl\n        ? blend(theme.colors.fadedText40, theme.colors.secondaryBg)\n        : theme.colors.primary,\n      progressColor: theme.colors.bodyText,\n      height:\n        convertRemToPx(theme.sizes.largestElementHeight) -\n        2 * WAVEFORM_PADDING,\n      barWidth: BAR_WIDTH,\n      barGap: BAR_GAP,\n      barRadius: BAR_RADIUS,\n      cursorWidth: CURSOR_WIDTH,\n      url: recordingUrl ?? undefined,\n    })\n\n    ws.on(\"timeupdate\", time => {\n      setProgressTime(formatTime(time * 1000)) // get from seconds to milliseconds\n    })\n\n    ws.on(\"pause\", () => {\n      forceRerender()\n    })\n\n    const rp = ws.registerPlugin(\n      RecordPlugin.create({\n        scrollingWaveform: false,\n        renderRecordedAudio: true,\n      })\n    )\n\n    rp.on(\"record-end\", async blob => {\n      transcodeAndUploadFile(blob)\n    })\n\n    rp.on(\"record-progress\", time => {\n      setRecordingTime(formatTime(time))\n    })\n\n    setWavesurfer(ws)\n    setRecordPlugin(rp)\n\n    return () => {\n      if (ws) ws.destroy()\n      if (rp) rp.destroy()\n    }\n    // note: intentionally excluding theme so that we don't have to recreate the wavesurfer instance\n    // and colors will be updated separately\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [transcodeAndUploadFile])\n\n  useEffect(() => initializeWaveSurfer(), [initializeWaveSurfer])\n\n  useEffect(() => {\n    if (!isEqual(previousTheme, theme)) {\n      wavesurfer?.setOptions({\n        waveColor: recordingUrl\n          ? blend(theme.colors.fadedText40, theme.colors.secondaryBg)\n          : theme.colors.primary,\n        progressColor: theme.colors.bodyText,\n      })\n    }\n  }, [theme, previousTheme, recordingUrl, wavesurfer])\n\n  const onClickPlayPause = useCallback(() => {\n    if (wavesurfer) {\n      wavesurfer.playPause()\n      // This is because we want the time to be the duration of the audio when they stop recording,\n      // but once they start playing it, we want it to be the current time. So, once they start playing it\n      // we'll start keeping track of the playback time from that point onwards (until re-recording).\n      setShouldUpdatePlaybackTime(true)\n      // despite the state change above, this is still needed to force a rerender and make the time styling work\n      forceRerender()\n    }\n  }, [wavesurfer])\n\n  const startRecording = useCallback(async () => {\n    let audioDeviceId = activeAudioDeviceId\n\n    if (!hasRequestedMicPermissions) {\n      // this first part is to ensure we prompt for getting the user's media devices\n      await navigator.mediaDevices\n        .getUserMedia({ audio: true })\n        .then(() =>\n          RecordPlugin.getAvailableAudioDevices().then(devices => {\n            setAvailableAudioDevices(devices)\n            if (devices.length > 0) {\n              const { deviceId } = devices[0]\n              setActiveAudioDeviceId(deviceId)\n              audioDeviceId = deviceId\n            }\n          })\n        )\n        .catch(_err => {\n          setHasNoMicPermissions(true)\n        })\n      setHasRequestedMicPermissions(true)\n    }\n\n    if (!recordPlugin || !audioDeviceId || !wavesurfer) {\n      return\n    }\n\n    wavesurfer.setOptions({\n      waveColor: theme.colors.primary,\n    })\n\n    if (recordingUrl) {\n      handleClear({ updateWidgetManager: false })\n    }\n\n    recordPlugin.startRecording({ deviceId: audioDeviceId }).then(() => {\n      // Update the record button to show the user that they can stop recording\n      forceRerender()\n    })\n  }, [\n    activeAudioDeviceId,\n    recordPlugin,\n    theme,\n    wavesurfer,\n    recordingUrl,\n    handleClear,\n    hasRequestedMicPermissions,\n  ])\n\n  const stopRecording = useCallback(() => {\n    if (!recordPlugin) return\n\n    recordPlugin.stopRecording()\n\n    wavesurfer?.setOptions({\n      // We are blending this color instead of directly using the theme color (fadedText40)\n      // because the \"faded\" part of fadedText40 means introducing some transparency, which\n      // causes problems with the progress waveform color because wavesurfer is choosing to\n      // tint the waveColor with the progressColor instead of directly setting the progressColor.\n      // This means that the low opacity of fadedText40 causes the progress waveform to\n      // have the same opacity which makes it impossible to darken it enough to match designs.\n      // We fix this by blending the colors to figure out what the resulting color should be at\n      // full opacity, and we usee that color to set the waveColor.\n      waveColor: blend(theme.colors.fadedText40, theme.colors.secondaryBg),\n    })\n  }, [recordPlugin, wavesurfer, theme])\n\n  const downloadRecording = useDownloadUrl(recordingUrl, \"recording.wav\")\n\n  const isRecording = Boolean(recordPlugin?.isRecording())\n  const isPlaying = Boolean(wavesurfer?.isPlaying())\n\n  const isPlayingOrRecording = isRecording || isPlaying\n  const showPlaceholder = !isRecording && !recordingUrl && !hasNoMicPermissions\n\n  const showNoMicPermissionsOrPlaceholderOrError =\n    hasNoMicPermissions || showPlaceholder || isError\n\n  const isDisabled = disabled || hasNoMicPermissions\n\n  return (\n    <StyledAudioInputContainerDiv\n      className=\"stAudioInput\"\n      data-testid=\"stAudioInput\"\n    >\n      <WidgetLabel\n        label={element.label}\n        disabled={isDisabled}\n        labelVisibility={labelVisibilityProtoValueToEnum(\n          element.labelVisibility?.value\n        )}\n      >\n        {element.help && (\n          <StyledWidgetLabelHelp>\n            <TooltipIcon content={element.help} placement={Placement.TOP} />\n          </StyledWidgetLabelHelp>\n        )}\n      </WidgetLabel>\n      <StyledWaveformContainerDiv>\n        <Toolbar\n          isFullScreen={false}\n          disableFullscreenMode={true}\n          target={StyledWaveformContainerDiv}\n        >\n          {recordingUrl && (\n            <ToolbarAction\n              label=\"Download as WAV\"\n              icon={FileDownload}\n              onClick={() => downloadRecording()}\n            />\n          )}\n          {deleteFileUrl && (\n            <ToolbarAction\n              label=\"Clear recording\"\n              icon={Delete}\n              onClick={() => handleClear({ updateWidgetManager: true })}\n            />\n          )}\n        </Toolbar>\n        <AudioInputActionButtons\n          isRecording={isRecording}\n          isPlaying={isPlaying}\n          isUploading={isUploading}\n          isError={isError}\n          recordingUrlExists={Boolean(recordingUrl)}\n          startRecording={startRecording}\n          stopRecording={stopRecording}\n          onClickPlayPause={onClickPlayPause}\n          onClear={() => {\n            handleClear({ updateWidgetManager: false })\n            setIsError(false)\n          }}\n          disabled={isDisabled}\n        />\n        <StyledWaveformInnerDiv>\n          {isError && <AudioInputErrorState />}\n          {showPlaceholder && <Placeholder />}\n          {hasNoMicPermissions && <NoMicPermissions />}\n          <StyledWaveSurferDiv\n            data-testid=\"stAudioInputWaveSurfer\"\n            ref={waveSurferRef}\n            show={!showNoMicPermissionsOrPlaceholderOrError}\n          />\n        </StyledWaveformInnerDiv>\n        <StyledWaveformTimeCode\n          isPlayingOrRecording={isPlayingOrRecording}\n          data-testid=\"stAudioInputWaveformTimeCode\"\n        >\n          {shouldUpdatePlaybackTime ? progressTime : recordingTime}\n        </StyledWaveformTimeCode>\n      </StyledWaveformContainerDiv>\n    </StyledAudioInputContainerDiv>\n  )\n}\n\nexport default memo(AudioInput)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport zip from \"lodash/zip\"\n\nimport { FileUploadClient } from \"@streamlit/lib/src/FileUploadClient\"\nimport {\n  WidgetInfo,\n  WidgetStateManager,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport {\n  FileUploaderState as FileUploaderStateProto,\n  IFileURLs,\n  UploadedFileInfo as UploadedFileInfoProto,\n} from \"@streamlit/lib/src/proto\"\nimport { ensureError } from \"@streamlit/lib/src/util/ErrorHandling\"\n\ntype SuccessfulUpload = {\n  fileUrl: IFileURLs\n  file: File\n}\n\ntype FailedUpload = {\n  file: File\n  error: Error\n}\n\nexport const uploadFiles = async ({\n  files,\n  uploadClient,\n  widgetMgr,\n  widgetInfo,\n  fragmentId,\n}: {\n  files: File[]\n  uploadClient: FileUploadClient\n  widgetMgr: WidgetStateManager\n  widgetInfo: WidgetInfo\n  fragmentId?: string\n}): Promise<{\n  successfulUploads: SuccessfulUpload[]\n  failedUploads: FailedUpload[]\n}> => {\n  let fileUrls: IFileURLs[] = []\n\n  try {\n    fileUrls = await uploadClient.fetchFileURLs(files)\n  } catch (e) {\n    return {\n      successfulUploads: [],\n      failedUploads: files.map(file => ({ file, error: ensureError(e) })),\n    }\n  }\n\n  const filesWithUrls = zip(files, fileUrls)\n\n  const successfulUploads: SuccessfulUpload[] = []\n  const failedUploads: FailedUpload[] = []\n\n  await Promise.all(\n    filesWithUrls.map(async ([file, fileUrl]) => {\n      if (!file || !fileUrl || !fileUrl.uploadUrl || !fileUrl.fileId) {\n        return { file, fileUrl, error: new Error(\"No upload URL found\") }\n      }\n\n      try {\n        await uploadClient.uploadFile(\n          { id: fileUrl.fileId, formId: widgetInfo.formId || \"\" }, // TODO SEE IF DOWNSTREAM LOGIC CAN BE SIMPLIFIED\n          fileUrl.uploadUrl,\n          file\n        )\n        successfulUploads.push({ fileUrl, file })\n      } catch (e) {\n        const error = ensureError(e)\n        failedUploads.push({ file, error })\n      }\n    })\n  )\n\n  widgetMgr.setFileUploaderStateValue(\n    widgetInfo,\n    new FileUploaderStateProto({\n      uploadedFileInfo: successfulUploads.map(\n        ({ file, fileUrl }) =>\n          new UploadedFileInfoProto({\n            fileId: fileUrl.fileId,\n            fileUrls: fileUrl,\n            name: file.name,\n            size: file.size,\n          })\n      ),\n    }),\n    {\n      fromUi: true,\n    },\n    fragmentId\n  )\n\n  return { successfulUploads, failedUploads }\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\n\nexport const usePrevious = (value: any): any => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport const useIsOverflowing = (\n  ref: MutableRefObject<HTMLElement | null>,\n  expanded?: boolean\n): boolean => {\n  const { current } = ref\n  const [isOverflowing, setIsOverflowing] = useState(false)\n  const checkOverflowing = useCallback(() => {\n    if (current) {\n      const { scrollHeight, clientHeight } = current\n\n      setIsOverflowing(scrollHeight > clientHeight)\n    }\n  }, [current])\n\n  // We want to double check if the element is overflowing\n  // when the expanded state changes or the height of the\n  // element changes\n  useEffect(() => {\n    checkOverflowing()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expanded, current?.clientHeight])\n\n  // Window resizing can also affect the overflow state\n  // so we need to check it as well\n  useEffect(() => {\n    window.addEventListener(\"resize\", checkOverflowing)\n\n    return () => {\n      window.removeEventListener(\"resize\", checkOverflowing)\n    }\n  }, [checkOverflowing])\n\n  return isOverflowing\n}\n"],"names":["_ref","_widgetMgr$getElement","widgetMgr","id","formId","key","defaultValue","useEffect","existingValue","getElementState","isNullOrUndefined","notNullOrUndefined","setElementState","state","setStateInternal","useState","setState","useCallback","value","element","useMemo","onFormCleared","useFormClearHelper","useDownloadUrl","url","filename","libConfig","enforceDownloadInNewTab","React","LibContext","link","createDownloadLinkElement","style","display","document","body","appendChild","click","removeChild","StyledAudioInputContainerDiv","_styled","target","StyledWaveformContainerDiv","theme","height","sizes","largestElementHeight","width","background","colors","secondaryBg","borderRadius","radii","default","marginBottom","spacing","twoXS","alignItems","position","paddingLeft","xs","paddingRight","sm","StyledWaveformInnerDiv","name","styles","StyledWaveSurferDiv","_ref2","show","StyledWaveformTimeCode","_ref3","isPlayingOrRecording","margin","fontFamily","fonts","monospace","color","bodyText","fadedText60","backgroundColor","fontSize","fontSizes","StyledErrorContainerDiv","StyledErrorTextSpan","_ref4","StyledNoMicInputLearnMoreLink","StyledPlaceholderContainerDiv","_ref5","justifyContent","StyledPlaceholderDotsDiv","_ref6","dotSize","opacity","backgroundSize","backgroundImage","fadedText10","backgroundRepeat","StyledActionButtonStopRecordingDiv","_ref7","primary","padding","threeXS","red","StyledActionButtonStartRecordingDiv","_ref8","fadedText40","StyledActionButtonPlayPauseDiv","_ref9","StyledActionButtonContainerDiv","_ref10","flexGrow","flexShrink","gap","marginRight","StyledWidgetLabelHelp","_ref11","marginLeft","StyledSpinner","Spinner","_ref12","spinnerSize","borderWidth","spinnerThickness","radius","md","justifyContents","none","borderColor","borderTopColor","NoMicPermissions","_jsxs","children","_jsx","href","ENABLE_PERIPHERALS_DOCS_URL","Placeholder","STARTING_TIME_STRING","timeMs","Date","toLocaleTimeString","undefined","minute","second","timeZone","ActionButton","onClick","disabled","ariaLabel","iconContent","BaseButton","kind","BaseButtonKind","BORDERLESS_ICON","fluidWidth","Icon","content","size","AudioInputStopRecordingButton","stopRecording","StopCircle","AudioInputPlayPauseButton","isPlaying","onClickPlayPause","Pause","PlayArrow","AudioInputStartRecordingButton","startRecording","Mic","AudioInputResetButton","Refresh","AudioInputActionButtons","isRecording","isUploading","isError","recordingUrlExists","onClear","memo","floatTo16BitPCM","output","offset","input","i","length","s","Math","max","min","setInt16","async","fileBlob","audioContext","window","AudioContext","arrayBuffer","audioBuffer","decodeAudioData","error","logError","numOfChan","numberOfChannels","sampleRate","buffer","ArrayBuffer","view","DataView","wavHeader","type","Object","entries","forEach","intOffset","parseInt","string","setUint8","charCodeAt","writeString","setUint32","setUint16","channel","getChannelData","wavArray","Uint8Array","Blob","AudioInputErrorState","AudioInput","_element$labelVisibil","uploadClient","fragmentId","useTheme","previousTheme","usePrevious","wavesurfer","setWavesurfer","waveSurferRef","deleteFileUrl","setDeleteFileUrl","useWidgetManagerElementState","recordPlugin","setRecordPlugin","availableAudioDevices","setAvailableAudioDevices","activeAudioDeviceId","setActiveAudioDeviceId","recordingUrl","setRecordingUrl","setRerender","forceRerender","prev","progressTime","setProgressTime","recordingTime","setRecordingTime","shouldUpdatePlaybackTime","setShouldUpdatePlaybackTime","hasNoMicPermissions","setHasNoMicPermissions","hasRequestedMicPermissions","setHasRequestedMicPermissions","setIsUploading","setIsError","widgetId","widgetFormId","transcodeAndUploadFile","wavBlob","setFormsWithUploadsInProgress","Set","blob","convertAudioToWav","URL","createObjectURL","file","File","files","widgetInfo","fileUrls","fetchFileURLs","e","successfulUploads","failedUploads","map","ensureError","filesWithUrls","zip","Promise","all","fileUrl","uploadUrl","fileId","Error","uploadFile","push","setFileUploaderStateValue","FileUploaderStateProto","uploadedFileInfo","UploadedFileInfoProto","fromUi","uploadFiles","then","upload","deleteUrl","finally","handleClear","updateWidgetManager","empty","deleteFile","revokeObjectURL","formClearHelper","FormClearHelper","manageFormClearListener","disconnect","initializeWaveSurfer","current","ws","WaveSurfer","create","container","waveColor","blend","progressColor","convertRemToPx","barWidth","barGap","barRadius","cursorWidth","on","time","formatTime","rp","registerPlugin","RecordPlugin","scrollingWaveform","renderRecordedAudio","destroy","isEqual","setOptions","playPause","audioDeviceId","navigator","mediaDevices","getUserMedia","audio","getAvailableAudioDevices","devices","deviceId","catch","_err","downloadRecording","Boolean","showPlaceholder","showNoMicPermissionsOrPlaceholderOrError","isDisabled","className","WidgetLabel","label","labelVisibility","labelVisibilityProtoValueToEnum","help","TooltipIcon","placement","Placement","TOP","Toolbar","isFullScreen","disableFullscreenMode","ToolbarAction","icon","FileDownload","Delete","ref","useRef"],"sourceRoot":""}