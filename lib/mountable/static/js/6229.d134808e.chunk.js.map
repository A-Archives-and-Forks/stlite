{"version":3,"file":"static/js/6229.d134808e.chunk.js","mappings":"qOA6GA,QAzDA,SAAwBA,GACtB,MAAM,SAAEC,EAAQ,QAAEC,EAAO,UAAEC,EAAS,MAAEC,EAAK,UAAEC,EAAS,WAAEC,GAAeN,EACjEO,EAAQ,CAAEH,UAEdI,WAAW,wBAAEC,GAA0B,IACrCC,EAAAA,WAAiBC,EAAAA,GAEfC,EACa,YAAjBV,EAAQW,KACJC,EAAAA,GAAeC,QACfD,EAAAA,GAAeE,UAEfC,GAAeC,EAAAA,EAAAA,MAsBfC,GAAajB,EAAQkB,MAAOhB,EAElC,OACEiB,EAAAA,EAAAA,KAAA,OACEC,UAAU,mBACV,cAAY,mBACZf,MAAOA,EAAMgB,UAEbF,EAAAA,EAAAA,KAACG,EAAAA,EAAiB,CAACJ,KAAMlB,EAAQkB,KAAKG,UACpCF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTb,KAAMA,EACNc,KAAMC,EAAAA,GAAeC,MACrB3B,SAAUA,EACV4B,QAjCgCC,KAKtC,GAFA3B,EAAU4B,gBAAgB7B,EAAS,CAAE8B,QAAQ,GAAQ1B,GAEjDJ,EAAQ+B,IAAIC,WAAW,UAEzB,YADAC,EAAAA,EAAAA,IAAuBlB,EAAcf,EAAQ+B,KAI/C,MAAMG,EApCH,SACL/B,EACA4B,EACAxB,GAEA,OAAO4B,EAAAA,EAAAA,GAA0B,CAC/B5B,0BACAwB,IAAK5B,EAAUiC,cAAcL,GAC7BM,SAAU,IAEd,CA0BiBC,CACXnC,EACAH,EAAQ+B,IACRxB,GAEF2B,EAAKK,OAAO,EAmBNtB,aAAYjB,EAAQwC,mBAAoBvB,EAAmBI,UAE3DF,EAAAA,EAAAA,KAACsB,EAAAA,EAAkB,CAACC,KAAM1C,EAAQ0C,KAAMC,MAAO3C,EAAQ2C,aAKjE,C,kCCrFA,MAiBA,EAjBkCC,IAIuB,IAJtB,wBACjCrC,EAAuB,IACvBwB,EAAG,SACHM,GAC8BO,EAC9B,MAAMV,EAAOW,SAASC,cAAc,KASpC,OARAZ,EAAKa,aAAa,OAAQhB,GACtBxB,EACF2B,EAAKa,aAAa,SAAU,UAE5Bb,EAAKa,aAAa,SAAU,SAE9Bb,EAAKa,aAAa,WAAYV,GAEvBH,CAAI,C","sources":["../../../streamlit/frontend/lib/src/components/widgets/DownloadButton/DownloadButton.tsx","../../../streamlit/frontend/lib/src/util/createDownloadLinkElement.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport createDownloadLinkElement from \"@streamlit/lib/src/util/createDownloadLinkElement\"\nimport { DownloadButton as DownloadButtonProto } from \"@streamlit/lib/src/proto\"\nimport BaseButton, {\n  BaseButtonKind,\n  BaseButtonSize,\n  BaseButtonTooltip,\n  DynamicButtonLabel,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport { StreamlitEndpoints } from \"@streamlit/lib/src/StreamlitEndpoints\"\nimport { LibContext } from \"@streamlit/lib/src/components/core/LibContext\"\nimport { useStliteKernel, downloadFileFromStlite } from \"@stlite/kernel\"\n\nexport interface Props {\n  endpoints: StreamlitEndpoints\n  disabled: boolean\n  element: DownloadButtonProto\n  widgetMgr: WidgetStateManager\n  width: number\n  fragmentId?: string\n}\n\nexport function createDownloadLink(\n  endpoints: StreamlitEndpoints,\n  url: string,\n  enforceDownloadInNewTab: boolean\n): HTMLAnchorElement {\n  return createDownloadLinkElement({\n    enforceDownloadInNewTab,\n    url: endpoints.buildMediaURL(url),\n    filename: \"\",\n  })\n}\n\nfunction DownloadButton(props: Props): ReactElement {\n  const { disabled, element, widgetMgr, width, endpoints, fragmentId } = props\n  const style = { width }\n  const {\n    libConfig: { enforceDownloadInNewTab = false }, // Default to false, if no libConfig, e.g. for tests\n  } = React.useContext(LibContext)\n\n  const kind =\n    element.type === \"primary\"\n      ? BaseButtonKind.PRIMARY\n      : BaseButtonKind.SECONDARY\n\n  const stliteKernel = useStliteKernel()\n\n  const handleDownloadClick: () => void = () => {\n    // Downloads are only done on links, so create a hidden one and click it\n    // for the user.\n    widgetMgr.setTriggerValue(element, { fromUi: true }, fragmentId)\n\n    if (element.url.startsWith(\"/media\")) {\n      downloadFileFromStlite(stliteKernel, element.url)\n      return\n    }\n\n    const link = createDownloadLink(\n      endpoints,\n      element.url,\n      enforceDownloadInNewTab\n    )\n    link.click()\n  }\n\n  // When useContainerWidth true & has help tooltip,\n  // we need to pass the container width down to the button\n  const fluidWidth = element.help ? width : true\n\n  return (\n    <div\n      className=\"stDownloadButton\"\n      data-testid=\"stDownloadButton\"\n      style={style}\n    >\n      <BaseButtonTooltip help={element.help}>\n        <BaseButton\n          kind={kind}\n          size={BaseButtonSize.SMALL}\n          disabled={disabled}\n          onClick={handleDownloadClick}\n          fluidWidth={element.useContainerWidth ? fluidWidth : false}\n        >\n          <DynamicButtonLabel icon={element.icon} label={element.label} />\n        </BaseButton>\n      </BaseButtonTooltip>\n    </div>\n  )\n}\n\nexport default DownloadButton\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface DownloadLinkElementParameters {\n  enforceDownloadInNewTab: boolean\n  url: string\n  filename: string\n}\n\nconst createDownloadLinkElement = ({\n  enforceDownloadInNewTab,\n  url,\n  filename,\n}: DownloadLinkElementParameters): HTMLAnchorElement => {\n  const link = document.createElement(\"a\")\n  link.setAttribute(\"href\", url)\n  if (enforceDownloadInNewTab) {\n    link.setAttribute(\"target\", \"_blank\")\n  } else {\n    link.setAttribute(\"target\", \"_self\")\n  }\n  link.setAttribute(\"download\", filename)\n\n  return link\n}\n\nexport default createDownloadLinkElement\n"],"names":["props","disabled","element","widgetMgr","width","endpoints","fragmentId","style","libConfig","enforceDownloadInNewTab","React","LibContext","kind","type","BaseButtonKind","PRIMARY","SECONDARY","stliteKernel","useStliteKernel","fluidWidth","help","_jsx","className","children","BaseButtonTooltip","BaseButton","size","BaseButtonSize","SMALL","onClick","handleDownloadClick","setTriggerValue","fromUi","url","startsWith","downloadFileFromStlite","link","createDownloadLinkElement","buildMediaURL","filename","createDownloadLink","click","useContainerWidth","DynamicButtonLabel","icon","label","_ref","document","createElement","setAttribute"],"sourceRoot":""}