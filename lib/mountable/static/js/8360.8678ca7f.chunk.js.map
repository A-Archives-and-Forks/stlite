{"version":3,"file":"static/js/8360.8678ca7f.chunk.js","mappings":"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","sources":["../../../streamlit/frontend/lib/src/components/shared/ProgressBar/ProgressBar.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/UploadFileInfo.ts","../../../streamlit/frontend/lib/src/util/FileHelper.ts","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/FileDropzoneInstructions.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/FileDropzone.tsx","../../../streamlit/frontend/lib/src/hocs/withPagination/styled-components.ts","../../../streamlit/frontend/lib/src/hocs/withPagination/Pagination.tsx","../../../streamlit/frontend/lib/src/hocs/withPagination/withPagination.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/UploadedFile.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/UploadedFiles.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/FileUploader.tsx","../../../streamlit/frontend/lib/src/components/widgets/Form/FormClearHelper.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { useTheme } from \"@emotion/react\"\nimport { LibContext } from \"@streamlit/lib/src/components/core/LibContext\"\nimport { EmotionTheme, isPresetTheme } from \"@streamlit/lib/src/theme\"\nimport {\n  ProgressBar as UIProgressBar,\n  ProgressBarOverrides,\n} from \"baseui/progress-bar\"\nimport { mergeOverrides } from \"baseui\"\nimport { Overrides } from \"baseui/overrides\"\n\nexport enum Size {\n  EXTRASMALL = \"xs\",\n  SMALL = \"sm\",\n  MEDIUM = \"md\",\n  LARGE = \"lg\",\n  EXTRALARGE = \"xl\",\n}\n\nexport interface ProgressBarProps {\n  width?: number\n  value: number\n  overrides?: Overrides<any>\n  size?: Size\n}\n\nfunction ProgressBar({\n  value,\n  width,\n  size = Size.SMALL,\n  overrides,\n}: ProgressBarProps): ReactElement {\n  const theme: EmotionTheme = useTheme()\n  const heightMap = {\n    xs: theme.spacing.twoXS,\n    sm: theme.spacing.sm,\n    md: theme.spacing.lg,\n    lg: theme.spacing.xl,\n    xl: theme.spacing.twoXL,\n  }\n  const { activeTheme } = React.useContext(LibContext)\n  const usingCustomTheme = !isPresetTheme(activeTheme)\n  const defaultOverrides: Overrides<ProgressBarOverrides> = {\n    BarContainer: {\n      style: {\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n      },\n    },\n    Bar: {\n      style: ({ $theme }: { $theme: any }) => ({\n        width: width ? width.toString() : undefined,\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n        height: heightMap[size],\n        backgroundColor: $theme.colors.progressbarTrackFill,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n    BarProgress: {\n      style: () => ({\n        backgroundColor: usingCustomTheme\n          ? theme.colors.primary\n          : theme.colors.blue70,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n  }\n\n  return (\n    <UIProgressBar\n      value={value}\n      overrides={mergeOverrides(defaultOverrides, overrides)}\n    />\n  )\n}\n\nexport default ProgressBar\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CancelTokenSource } from \"axios\"\nimport { IFileURLs } from \"@streamlit/lib/src/proto\"\n\nexport interface UploadingStatus {\n  type: \"uploading\"\n  cancelToken: CancelTokenSource\n  progress: number\n}\n\nexport interface UploadedStatus {\n  type: \"uploaded\"\n\n  fileId: string\n  fileUrls: IFileURLs\n}\n\nexport interface ErrorStatus {\n  type: \"error\"\n  errorMessage: string\n}\n\n/** The various statuses that an UploadedFileInfo can have. */\nexport type FileStatus = UploadingStatus | UploadedStatus | ErrorStatus\n\n/**\n * Wraps a File object with additional data used by FileUploader.\n * This class is immutable because it's used in within FileUploader.state.\n */\nexport class UploadFileInfo {\n  public readonly name: string\n\n  public readonly size: number\n\n  public readonly status: FileStatus\n\n  /**\n   * ID used to refer to the file locally, for update operations.\n   * If the file is uploaded, it will also have a serverID, which is\n   * used to refer to the file on the server.\n   */\n  public readonly id: number\n\n  /**\n   * Create a clone of this UploadFileInfo with the given status.\n   */\n  public setStatus(status: FileStatus): UploadFileInfo {\n    return new UploadFileInfo(this.name, this.size, this.id, status)\n  }\n\n  public constructor(\n    name: string,\n    size: number,\n    id: number,\n    status: FileStatus\n  ) {\n    this.name = name\n    this.size = size\n    this.id = id\n    this.status = status\n  }\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isFromWindows } from \"@streamlit/lib/src/util/utils\"\n\nexport enum FileSize {\n  Gigabyte = \"gb\",\n  Megabyte = \"mb\",\n  Kilobyte = \"kb\",\n  Byte = \"b\",\n}\n\n// There is a shift towards displaying storage in base 10 vs base 2\n// but Windows is still displaying things in base 2. This does not handle\n// all cases but for simplicity general rule is to use base 2 for Windows.\nexport const BYTE_CONVERSION_SIZE = isFromWindows() ? 1024 : 1000\nconst sizeUnitSequence = [\n  FileSize.Gigabyte,\n  FileSize.Megabyte,\n  FileSize.Kilobyte,\n  FileSize.Byte,\n]\n\nexport const getSizeDisplay = (\n  size: number,\n  unit: FileSize,\n  rounding = 1\n): string => {\n  if (!unit) {\n    unit = FileSize.Byte\n  }\n\n  if (rounding < 0) {\n    rounding = 0\n  }\n\n  if (size < 0) {\n    throw new Error(\"Size must be greater than or equal to 0\")\n  }\n\n  const sizeIndex = sizeUnitSequence.indexOf(unit)\n  const nextUnitSize = size / BYTE_CONVERSION_SIZE\n  if (sizeIndex && size > BYTE_CONVERSION_SIZE / 2) {\n    return getSizeDisplay(\n      nextUnitSize,\n      sizeUnitSequence[sizeIndex - 1],\n      rounding\n    )\n  }\n  return `${size.toFixed(rounding)}${unit.toUpperCase()}`\n}\n\nexport const sizeConverter = (\n  size: number,\n  inputUnit: FileSize,\n  outputUnit: FileSize\n): number => {\n  if (size < 0) {\n    throw Error(\"Size must be 0 or greater\")\n  }\n\n  const inputLevel = sizeUnitSequence.findIndex(unit => unit === inputUnit)\n  const outputLevel = sizeUnitSequence.findIndex(unit => unit === outputUnit)\n\n  if (inputLevel === -1 || outputLevel === -1) {\n    // Should not ever occur\n    throw Error(\"Unexpected byte unit provided\")\n  }\n\n  if (inputLevel === outputLevel) {\n    return size\n  }\n\n  const levelsBetween = Math.abs(inputLevel - outputLevel)\n  const byteDifference = BYTE_CONVERSION_SIZE ** levelsBetween\n\n  if (inputLevel > outputLevel) {\n    // Going from smaller to bigger\n    return size / byteDifference\n  }\n  // Going from bigger to smaller\n  return size * byteDifference\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled, { CSSObject } from \"@emotion/styled\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nexport interface StyledFileDropzone {\n  isDisabled: boolean\n}\n\nexport const StyledFileDropzoneSection = styled.section<StyledFileDropzone>(\n  ({ isDisabled, theme }) => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing.lg,\n    backgroundColor: theme.colors.secondaryBg,\n    borderRadius: theme.radii.default,\n    \":focus\": {\n      outline: \"none\",\n    },\n    \":focus-visible\": {\n      boxShadow: `0 0 0 1px ${theme.colors.primary}`,\n    },\n    color: isDisabled ? theme.colors.gray : theme.colors.bodyText,\n  })\n)\n\nexport const StyledFileDropzoneInstructions = styled.div(() => ({\n  marginRight: \"auto\",\n  alignItems: \"center\",\n  display: \"flex\",\n}))\n\nexport const StyledFileDropzoneInstructionsFileUploaderIcon = styled.span(\n  ({ theme }) => ({\n    color: theme.colors.darkenedBgMix100,\n    marginRight: theme.spacing.lg,\n  })\n)\n\nexport const StyledFileDropzoneInstructionsStyledSpan = styled.span(\n  ({ theme }) => ({\n    marginBottom: theme.spacing.twoXS,\n  })\n)\n\nexport const StyledFileDropzoneInstructionsColumn = styled.div({\n  display: \"flex\",\n  flexDirection: \"column\",\n})\n\nexport const StyledUploadedFiles = styled.div(({ theme }) => ({\n  left: 0,\n  right: 0,\n  lineHeight: theme.lineHeights.tight,\n  paddingTop: theme.spacing.md,\n  paddingLeft: theme.spacing.lg,\n  paddingRight: theme.spacing.lg,\n}))\n\nexport const StyledUploadedFilesList = styled.ul(() => ({\n  listStyleType: \"none\",\n  marginBottom: 0,\n}))\n\nexport const StyledUploadedFilesListItem = styled.li(({ theme }) => ({\n  margin: theme.spacing.none,\n  padding: theme.spacing.none,\n}))\n\nexport const StyledUploadedFileData = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"baseline\",\n  flex: 1,\n  paddingLeft: theme.spacing.lg,\n  overflow: \"hidden\",\n}))\n\nexport const StyledUploadedFileName = styled.div(({ theme }) => ({\n  marginRight: theme.spacing.sm,\n  marginBottom: theme.spacing.twoXS,\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\",\n}))\n\nexport const StyledUploadedFile = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  marginBottom: theme.spacing.twoXS,\n}))\n\nexport const StyledErrorMessage = styled.span(({ theme }) => ({\n  marginRight: theme.spacing.twoXS,\n}))\n\nexport const StyledFileIcon = styled.div(({ theme }) => ({\n  display: \"flex\",\n  padding: theme.spacing.twoXS,\n  color: theme.colors.darkenedBgMix100,\n}))\n\nexport const StyledFileError = styled.small(({ theme }) => ({\n  color: theme.colors.danger,\n  fontSize: theme.fontSizes.sm,\n  height: theme.fontSizes.sm,\n  lineHeight: theme.fontSizes.sm,\n  display: \"flex\",\n  alignItems: \"center\",\n  whiteSpace: \"nowrap\",\n}))\n\nexport const StyledFileErrorIcon = styled.span({})\n\nconst compactFileUploader = (theme: EmotionTheme): CSSObject => ({\n  [StyledFileDropzoneSection as any]: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n  },\n  [StyledFileDropzoneInstructions as any]: {\n    marginBottom: theme.spacing.lg,\n  },\n  [StyledFileDropzoneInstructionsFileUploaderIcon as any]: {\n    display: \"none\",\n  },\n  [StyledUploadedFiles as any]: {\n    paddingRight: theme.spacing.lg,\n  },\n  [StyledUploadedFile as any]: {\n    maxWidth: \"inherit\",\n    flex: 1,\n    alignItems: \"flex-start\",\n    marginBottom: theme.spacing.sm,\n  },\n  [StyledUploadedFileName as any]: {\n    width: theme.sizes.full,\n  },\n  [StyledUploadedFileData as any]: {\n    flexDirection: \"column\",\n  },\n  [StyledFileError as any]: {\n    height: \"auto\",\n    whiteSpace: \"initial\",\n  },\n  [StyledFileErrorIcon as any]: {\n    display: \"none\",\n  },\n  [StyledUploadedFilesListItem as any]: {\n    margin: theme.spacing.none,\n    padding: theme.spacing.none,\n  },\n})\n\nexport const StyledFileUploader = styled.div(({ theme }) => {\n  if (theme.inSidebar) {\n    return compactFileUploader(theme)\n  }\n\n  return {\n    [`@media (max-width: ${theme.breakpoints.sm})`]:\n      compactFileUploader(theme),\n  }\n})\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport { CloudUpload } from \"@emotion-icons/material-outlined\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport { FileSize, getSizeDisplay } from \"@streamlit/lib/src/util/FileHelper\"\nimport { Small } from \"@streamlit/lib/src/components/shared/TextElements\"\n\nimport {\n  StyledFileDropzoneInstructions,\n  StyledFileDropzoneInstructionsFileUploaderIcon,\n  StyledFileDropzoneInstructionsStyledSpan,\n  StyledFileDropzoneInstructionsColumn,\n} from \"./styled-components\"\n\nexport interface Props {\n  multiple: boolean\n  acceptedExtensions: string[]\n  maxSizeBytes: number\n}\n\nconst FileDropzoneInstructions = ({\n  multiple,\n  acceptedExtensions,\n  maxSizeBytes,\n}: Props): React.ReactElement => (\n  <StyledFileDropzoneInstructions data-testid=\"stFileUploaderDropzoneInstructions\">\n    <StyledFileDropzoneInstructionsFileUploaderIcon>\n      <Icon content={CloudUpload} size=\"threeXL\" />\n    </StyledFileDropzoneInstructionsFileUploaderIcon>\n    <StyledFileDropzoneInstructionsColumn>\n      <StyledFileDropzoneInstructionsStyledSpan>\n        Drag and drop file{multiple ? \"s\" : \"\"} here\n      </StyledFileDropzoneInstructionsStyledSpan>\n      <Small>\n        {`Limit ${getSizeDisplay(maxSizeBytes, FileSize.Byte, 0)} per file`}\n        {acceptedExtensions.length\n          ? ` • ${acceptedExtensions\n              .map(ext => ext.replace(/^\\./, \"\").toUpperCase())\n              .join(\", \")}`\n          : null}\n      </Small>\n    </StyledFileDropzoneInstructionsColumn>\n  </StyledFileDropzoneInstructions>\n)\n\nexport default FileDropzoneInstructions\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport Dropzone, { FileRejection } from \"react-dropzone\"\nimport BaseButton, {\n  BaseButtonKind,\n  BaseButtonSize,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\n\nimport { StyledFileDropzoneSection } from \"./styled-components\"\nimport FileDropzoneInstructions from \"./FileDropzoneInstructions\"\n\nexport interface Props {\n  disabled: boolean\n  onDrop: (acceptedFiles: File[], rejectedFiles: FileRejection[]) => void\n  multiple: boolean\n  acceptedExtensions: string[]\n  maxSizeBytes: number\n  label: string\n}\n\nconst FileDropzone = ({\n  onDrop,\n  multiple,\n  acceptedExtensions,\n  maxSizeBytes,\n  disabled,\n  label,\n}: Props): React.ReactElement => (\n  <Dropzone\n    onDrop={onDrop}\n    multiple={multiple}\n    accept={acceptedExtensions.length ? acceptedExtensions : undefined}\n    maxSize={maxSizeBytes}\n    disabled={disabled}\n    // react-dropzone v12+ uses the File System Access API by default,\n    // causing the bug described in https://github.com/streamlit/streamlit/issues/6176.\n    useFsAccessApi={false}\n  >\n    {({ getRootProps, getInputProps }) => (\n      <StyledFileDropzoneSection\n        {...getRootProps()}\n        data-testid=\"stFileUploaderDropzone\"\n        isDisabled={disabled}\n        aria-label={label}\n      >\n        <input\n          data-testid=\"stFileUploaderDropzoneInput\"\n          {...getInputProps()}\n        />\n        <FileDropzoneInstructions\n          multiple={multiple}\n          acceptedExtensions={acceptedExtensions}\n          maxSizeBytes={maxSizeBytes}\n        />\n        <BaseButton\n          kind={BaseButtonKind.SECONDARY}\n          disabled={disabled}\n          size={BaseButtonSize.SMALL}\n        >\n          Browse files\n        </BaseButton>\n      </StyledFileDropzoneSection>\n    )}\n  </Dropzone>\n)\n\nexport default FileDropzone\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledPagination = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  paddingBottom: theme.spacing.twoXS,\n  marginBottom: theme.spacing.twoXS,\n}))\n\nexport const StyledPaginators = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: theme.colors.fadedText40,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"@emotion-icons/material-outlined\"\nimport BaseButton, {\n  BaseButtonKind,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport { Small } from \"@streamlit/lib/src/components/shared/TextElements\"\nimport { StyledPagination, StyledPaginators } from \"./styled-components\"\n\nexport interface Props {\n  className: string\n  currentPage: number\n  totalPages: number\n  pageSize: number\n  onNext: (event: React.SyntheticEvent<HTMLElement>) => void\n  onPrevious: (event: React.SyntheticEvent<HTMLElement>) => void\n}\n\nconst Pagination = ({\n  className,\n  currentPage,\n  totalPages,\n  onNext,\n  onPrevious,\n}: Props): React.ReactElement => {\n  return (\n    <StyledPagination className={className} data-testid=\"stPagination\">\n      <Small>{`Showing page ${currentPage} of ${totalPages}`}</Small>\n      <StyledPaginators>\n        <BaseButton onClick={onPrevious} kind={BaseButtonKind.MINIMAL}>\n          <Icon content={ChevronLeft} size=\"xl\" />\n        </BaseButton>\n        <BaseButton onClick={onNext} kind={BaseButtonKind.MINIMAL}>\n          <Icon content={ChevronRight} size=\"xl\" />\n        </BaseButton>\n      </StyledPaginators>\n    </StyledPagination>\n  )\n}\n\nexport default Pagination\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ComponentType, ReactElement, useEffect, useState } from \"react\"\nimport hoistNonReactStatics from \"hoist-non-react-statics\"\nimport Pagination from \"@streamlit/lib/src/hocs/withPagination/Pagination\"\nimport { usePrevious } from \"@streamlit/lib/src/util/Hooks\"\n\nexport interface Props {\n  items: any[]\n  pageSize: number\n  resetOnAdd: boolean\n}\n\nconst calculateNumPages = (items: any[], pageSize: number): number =>\n  Math.ceil(items.length / pageSize)\n\nconst withPagination = (\n  WrappedComponent: ComponentType<React.PropsWithChildren<any>>\n): ComponentType<React.PropsWithChildren<any>> => {\n  const WithPagination = ({\n    pageSize,\n    items,\n    resetOnAdd,\n    ...props\n  }: Props): ReactElement => {\n    const [currentPage, updateCurrentPage] = useState<number>(0)\n    const [totalPages, updateTotalPages] = useState<number>(\n      calculateNumPages(items, pageSize)\n    )\n\n    const prevItems: any[] = usePrevious(items)\n\n    useEffect(() => {\n      if (prevItems && prevItems.length !== items.length) {\n        updateTotalPages(calculateNumPages(items, pageSize))\n      }\n      if (prevItems && prevItems.length < items.length) {\n        if (resetOnAdd) {\n          updateCurrentPage(0)\n        }\n      } else if (currentPage + 1 >= totalPages) {\n        updateCurrentPage(totalPages - 1)\n      }\n    }, [items, currentPage, pageSize, prevItems, resetOnAdd, totalPages])\n\n    const onNext = (): void => {\n      updateCurrentPage(Math.min(currentPage + 1, totalPages - 1))\n    }\n\n    const onPrevious = (): void => {\n      updateCurrentPage(Math.max(0, currentPage - 1))\n    }\n\n    const paginatedItems = items.slice(\n      currentPage * pageSize,\n      currentPage * pageSize + pageSize\n    )\n    return (\n      <>\n        <WrappedComponent items={paginatedItems} {...props} />\n        {items.length > pageSize ? (\n          <Pagination\n            className=\"streamlit-paginator\"\n            pageSize={pageSize}\n            totalPages={totalPages}\n            currentPage={currentPage + 1}\n            onNext={onNext}\n            onPrevious={onPrevious}\n          />\n        ) : null}\n      </>\n    )\n  }\n  return hoistNonReactStatics(WithPagination, WrappedComponent)\n}\n\nexport default withPagination\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport {\n  Clear,\n  Error,\n  InsertDriveFile,\n} from \"@emotion-icons/material-outlined\"\nimport BaseButton, {\n  BaseButtonKind,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport ProgressBar, {\n  Size,\n} from \"@streamlit/lib/src/components/shared/ProgressBar\"\nimport { Small } from \"@streamlit/lib/src/components/shared/TextElements\"\nimport { FileSize, getSizeDisplay } from \"@streamlit/lib/src/util/FileHelper\"\nimport {\n  StyledUploadedFile,\n  StyledFileErrorIcon,\n  StyledErrorMessage,\n  StyledFileError,\n  StyledFileIcon,\n  StyledUploadedFileData,\n  StyledUploadedFileName,\n} from \"./styled-components\"\nimport { UploadFileInfo } from \"./UploadFileInfo\"\n\nexport interface Props {\n  fileInfo: UploadFileInfo\n  onDelete: (id: number) => void\n}\n\nexport interface UploadedFileStatusProps {\n  fileInfo: UploadFileInfo\n}\n\nexport const UploadedFileStatus = ({\n  fileInfo,\n}: UploadedFileStatusProps): React.ReactElement | null => {\n  if (fileInfo.status.type === \"uploading\") {\n    return (\n      <ProgressBar\n        value={fileInfo.status.progress}\n        size={Size.SMALL}\n        overrides={{\n          Bar: {\n            style: {\n              marginLeft: 0,\n              marginTop: \"4px\",\n            },\n          },\n        }}\n      />\n    )\n  }\n\n  if (fileInfo.status.type === \"error\") {\n    return (\n      <StyledFileError>\n        <StyledErrorMessage data-testid=\"stFileUploaderFileErrorMessage\">\n          {fileInfo.status.errorMessage}\n        </StyledErrorMessage>\n        <StyledFileErrorIcon>\n          <Icon content={Error} size=\"lg\" />\n        </StyledFileErrorIcon>\n      </StyledFileError>\n    )\n  }\n\n  if (fileInfo.status.type === \"uploaded\") {\n    return <Small>{getSizeDisplay(fileInfo.size, FileSize.Byte)}</Small>\n  }\n\n  return null\n}\n\nconst UploadedFile = ({ fileInfo, onDelete }: Props): React.ReactElement => {\n  return (\n    <StyledUploadedFile\n      className=\"stFileUploaderFile\"\n      data-testid=\"stFileUploaderFile\"\n    >\n      <StyledFileIcon>\n        <Icon content={InsertDriveFile} size=\"twoXL\" />\n      </StyledFileIcon>\n      <StyledUploadedFileData className=\"stFileUploaderFileData\">\n        <StyledUploadedFileName\n          className=\"stFileUploaderFileName\"\n          data-testid=\"stFileUploaderFileName\"\n          title={fileInfo.name}\n        >\n          {fileInfo.name}\n        </StyledUploadedFileName>\n        <UploadedFileStatus fileInfo={fileInfo} />\n      </StyledUploadedFileData>\n      <div data-testid=\"stFileUploaderDeleteBtn\">\n        <BaseButton\n          onClick={() => onDelete(fileInfo.id)}\n          kind={BaseButtonKind.MINIMAL}\n        >\n          <Icon content={Clear} size=\"lg\" />\n        </BaseButton>\n      </div>\n    </StyledUploadedFile>\n  )\n}\n\nexport default UploadedFile\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport withPagination, {\n  PaginationProps,\n} from \"@streamlit/lib/src/hocs/withPagination\"\nimport UploadedFile from \"./UploadedFile\"\nimport {\n  StyledUploadedFiles,\n  StyledUploadedFilesList,\n  StyledUploadedFilesListItem,\n} from \"./styled-components\"\nimport { UploadFileInfo } from \"./UploadFileInfo\"\n\nexport interface Props {\n  items: UploadFileInfo[]\n  onDelete: (id: number) => void\n}\n\nconst UploadedFileList = ({ items, onDelete }: Props): ReactElement => {\n  return (\n    <StyledUploadedFilesList>\n      {items.map(file => (\n        <StyledUploadedFilesListItem key={file.id}>\n          <UploadedFile fileInfo={file} onDelete={onDelete} />\n        </StyledUploadedFilesListItem>\n      ))}\n    </StyledUploadedFilesList>\n  )\n}\n\nexport const PaginatedFiles = withPagination(UploadedFileList)\n\nconst UploadedFiles = (props: Props & PaginationProps): ReactElement => (\n  <StyledUploadedFiles>\n    <PaginatedFiles {...props} />\n  </StyledUploadedFiles>\n)\nexport default UploadedFiles\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport axios from \"axios\"\nimport isEqual from \"lodash/isEqual\"\nimport zip from \"lodash/zip\"\nimport React from \"react\"\nimport { FileRejection } from \"react-dropzone\"\n\nimport {\n  FileUploader as FileUploaderProto,\n  FileUploaderState as FileUploaderStateProto,\n  FileURLs as FileURLsProto,\n  IFileURLs,\n  UploadedFileInfo as UploadedFileInfoProto,\n} from \"@streamlit/lib/src/proto\"\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\n\nimport {\n  FileSize,\n  getSizeDisplay,\n  sizeConverter,\n} from \"@streamlit/lib/src/util/FileHelper\"\nimport { FileUploadClient } from \"@streamlit/lib/src/FileUploadClient\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport {\n  WidgetLabel,\n  StyledWidgetLabelHelp,\n} from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport { labelVisibilityProtoValueToEnum } from \"@streamlit/lib/src/util/utils\"\nimport FileDropzone from \"./FileDropzone\"\nimport { StyledFileUploader } from \"./styled-components\"\nimport UploadedFiles from \"./UploadedFiles\"\nimport { UploadFileInfo, UploadedStatus } from \"./UploadFileInfo\"\n\nexport interface Props {\n  disabled: boolean\n  element: FileUploaderProto\n  widgetMgr: WidgetStateManager\n  uploadClient: FileUploadClient\n  width: number\n  fragmentId?: string\n}\n\ntype FileUploaderStatus =\n  | \"ready\" // FileUploader can upload or delete files\n  | \"updating\" // at least one file is being uploaded or deleted\n\nexport interface State {\n  /**\n   * List of files dropped on the FileUploader by the user. This list includes\n   * rejected files that will not be updated.\n   */\n  files: UploadFileInfo[]\n}\n\nclass FileUploader extends React.PureComponent<Props, State> {\n  private readonly formClearHelper = new FormClearHelper()\n\n  /**\n   * A counter for assigning unique internal IDs to each file tracked\n   * by the uploader. These IDs are used to update file state internally,\n   * and are separate from the serverFileIds that are returned by the server.\n   */\n  private localFileIdCounter = 1\n\n  /**\n   * A flag to handle the case where a file uploader that only accepts one file\n   * at a time has its file replaced, which we want to treat as a single change\n   * rather than the deletion of a file followed by the upload of another.\n   * Doing this ensures that the script (and thus callbacks, etc) is only run a\n   * single time when replacing a file.  Note that deleting a file and uploading\n   * a new one with two interactions (clicking the 'X', then dragging a file\n   * into the file uploader) will still cause the script to execute twice.\n   */\n  private forceUpdatingStatus = false\n\n  public constructor(props: Props) {\n    super(props)\n    this.state = this.initialValue\n  }\n\n  get initialValue(): State {\n    const emptyState = { files: [], newestServerFileId: 0 }\n    const { widgetMgr, element } = this.props\n\n    const widgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (widgetValue == null) {\n      return emptyState\n    }\n\n    const { uploadedFileInfo } = widgetValue\n    if (uploadedFileInfo == null || uploadedFileInfo.length === 0) {\n      return emptyState\n    }\n\n    return {\n      files: uploadedFileInfo.map(f => {\n        const name = f.name as string\n        const size = f.size as number\n\n        const fileId = f.fileId as string\n        const fileUrls = f.fileUrls as FileURLsProto\n\n        return new UploadFileInfo(name, size, this.nextLocalFileId(), {\n          type: \"uploaded\",\n          fileId,\n          fileUrls,\n        })\n      }),\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  /**\n   * Return this.props.element.maxUploadSizeMb, converted to bytes.\n   */\n  private get maxUploadSizeInBytes(): number {\n    const maxMbs = this.props.element.maxUploadSizeMb\n    return sizeConverter(maxMbs, FileSize.Megabyte, FileSize.Byte)\n  }\n\n  /**\n   * Return the FileUploader's current status, which is derived from\n   * its state.\n   */\n  public get status(): FileUploaderStatus {\n    const isFileUpdating = (file: UploadFileInfo): boolean =>\n      file.status.type === \"uploading\"\n\n    // If any of our files is Uploading or Deleting, then we're currently\n    // updating.\n    if (this.state.files.some(isFileUpdating) || this.forceUpdatingStatus) {\n      return \"updating\"\n    }\n\n    return \"ready\"\n  }\n\n  public componentDidUpdate = (): void => {\n    // If our status is not \"ready\", then we have uploads in progress.\n    // We won't submit a new widgetValue until all uploads have resolved.\n    if (this.status !== \"ready\") {\n      return\n    }\n\n    const newWidgetValue = this.createWidgetValue()\n    const { element, widgetMgr, fragmentId } = this.props\n\n    // Maybe send a widgetValue update to the widgetStateManager.\n    const prevWidgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (!isEqual(newWidgetValue, prevWidgetValue)) {\n      widgetMgr.setFileUploaderStateValue(\n        element,\n        newWidgetValue,\n        {\n          fromUi: true,\n        },\n        fragmentId\n      )\n    }\n  }\n\n  public componentDidMount(): void {\n    const newWidgetValue = this.createWidgetValue()\n    const { element, widgetMgr, fragmentId } = this.props\n\n    // Set the state value on mount, to avoid triggering an extra rerun after\n    // the first rerun.\n    const prevWidgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (prevWidgetValue === undefined) {\n      widgetMgr.setFileUploaderStateValue(\n        element,\n        newWidgetValue,\n        {\n          fromUi: false,\n        },\n        fragmentId\n      )\n    }\n  }\n\n  private createWidgetValue(): FileUploaderStateProto {\n    const uploadedFileInfo: UploadedFileInfoProto[] = this.state.files\n      .filter(f => f.status.type === \"uploaded\")\n      .map(f => {\n        const { name, size, status } = f\n        const { fileId, fileUrls } = status as UploadedStatus\n        return new UploadedFileInfoProto({\n          fileId,\n          fileUrls,\n          name,\n          size,\n        })\n      })\n\n    return new FileUploaderStateProto({ uploadedFileInfo })\n  }\n\n  /**\n   * Clear files and errors, and reset the widget to its READY state.\n   */\n  private reset = (): void => {\n    this.setState({ files: [] })\n  }\n\n  /**\n   * Called by react-dropzone when files and drag-and-dropped onto the widget.\n   *\n   * @param acceptedFiles an array of files.\n   * @param rejectedFiles an array of FileRejections. A FileRejection\n   * encapsulates a File and an error indicating why it was rejected by\n   * the dropzone widget.\n   */\n  private dropHandler = (\n    acceptedFiles: File[],\n    rejectedFiles: FileRejection[]\n  ): void => {\n    const { element } = this.props\n    const { multipleFiles } = element\n\n    // If this is a single-file uploader and multiple files were dropped,\n    // all the files will be rejected. In this case, we pull out the first\n    // valid file into acceptedFiles, and reject the rest.\n    if (\n      !multipleFiles &&\n      acceptedFiles.length === 0 &&\n      rejectedFiles.length > 1\n    ) {\n      const firstFileIndex = rejectedFiles.findIndex(\n        file =>\n          file.errors.length === 1 && file.errors[0].code === \"too-many-files\"\n      )\n\n      if (firstFileIndex >= 0) {\n        acceptedFiles.push(rejectedFiles[firstFileIndex].file)\n        rejectedFiles.splice(firstFileIndex, 1)\n      }\n    }\n\n    this.props.uploadClient\n      .fetchFileURLs(acceptedFiles)\n      .then((fileURLsArray: IFileURLs[]) => {\n        // If this is a single-file uploader that already has an uploaded file,\n        // remove that file so that it can be replaced with our new one.\n        if (!multipleFiles && acceptedFiles.length > 0) {\n          const existingFile = this.state.files.find(\n            f => f.status.type !== \"error\"\n          )\n          if (existingFile) {\n            this.forceUpdatingStatus = true\n            this.deleteFile(existingFile.id)\n            this.forceUpdatingStatus = false\n          }\n        }\n\n        zip(fileURLsArray, acceptedFiles).forEach(\n          ([fileURLs, acceptedFile]) => {\n            this.uploadFile(fileURLs as FileURLsProto, acceptedFile as File)\n          }\n        )\n      })\n      .catch((errorMessage: string) => {\n        this.addFiles(\n          acceptedFiles.map(f => {\n            return new UploadFileInfo(f.name, f.size, this.nextLocalFileId(), {\n              type: \"error\",\n              errorMessage,\n            })\n          })\n        )\n      })\n\n    // Create an UploadFileInfo for each of our rejected files, and add them to\n    // our state.\n    if (rejectedFiles.length > 0) {\n      const rejectedInfos = rejectedFiles.map(rejected => {\n        const { file } = rejected\n        return new UploadFileInfo(\n          file.name,\n          file.size,\n          this.nextLocalFileId(),\n          {\n            type: \"error\",\n            errorMessage: this.getErrorMessage(\n              rejected.errors[0].code,\n              rejected.file\n            ),\n          }\n        )\n      })\n      this.addFiles(rejectedInfos)\n    }\n  }\n\n  public uploadFile = (fileURLs: IFileURLs, file: File): void => {\n    // Create an UploadFileInfo for this file and add it to our state.\n    const cancelToken = axios.CancelToken.source()\n    const uploadingFileInfo = new UploadFileInfo(\n      file.name,\n      file.size,\n      this.nextLocalFileId(),\n      {\n        type: \"uploading\",\n        cancelToken,\n        progress: 1,\n      }\n    )\n    this.addFile(uploadingFileInfo)\n\n    this.props.uploadClient\n      .uploadFile(\n        this.props.element,\n        fileURLs.uploadUrl as string,\n        file,\n        e => this.onUploadProgress(e, uploadingFileInfo.id),\n        cancelToken.token\n      )\n      .then(() => this.onUploadComplete(uploadingFileInfo.id, fileURLs))\n      .catch(err => {\n        // If this was a cancel error, we don't show the user an error -\n        // the cancellation was in response to an action they took.\n        if (!axios.isCancel(err)) {\n          this.updateFile(\n            uploadingFileInfo.id,\n            uploadingFileInfo.setStatus({\n              type: \"error\",\n              errorMessage: err ? err.toString() : \"Unknown error\",\n            })\n          )\n        }\n      })\n  }\n\n  /**\n   * Called when an upload has completed. Updates the file's status, and\n   * assigns it the new file ID returned from the server.\n   */\n  private onUploadComplete = (\n    localFileId: number,\n    fileUrls: IFileURLs\n  ): void => {\n    const curFile = this.getFile(localFileId)\n    if (curFile == null || curFile.status.type !== \"uploading\") {\n      // The file may have been canceled right before the upload\n      // completed. In this case, we just bail.\n      return\n    }\n\n    this.updateFile(\n      curFile.id,\n      curFile.setStatus({\n        type: \"uploaded\",\n        fileId: fileUrls.fileId as string,\n        fileUrls,\n      })\n    )\n  }\n\n  /**\n   * Return a human-readable message for the given error.\n   */\n  private getErrorMessage = (errorCode: string, file: File): string => {\n    switch (errorCode) {\n      case \"file-too-large\":\n        return `File must be ${getSizeDisplay(\n          this.maxUploadSizeInBytes,\n          FileSize.Byte\n        )} or smaller.`\n      case \"file-invalid-type\":\n        return `${file.type} files are not allowed.`\n      case \"file-too-small\":\n        // This should not fire.\n        return `File size is too small.`\n      case \"too-many-files\":\n        return \"Only one file is allowed.\"\n      default:\n        return \"Unexpected error. Please try again.\"\n    }\n  }\n\n  /**\n   * Delete the file with the given ID:\n   * - Cancel the file upload if it's in progress\n   * - Remove the fileID from our local state\n   * We don't actually tell the server to delete the file. It will garbage\n   * collect it.\n   */\n  public deleteFile = (fileId: number): void => {\n    const file = this.getFile(fileId)\n    if (file == null) {\n      return\n    }\n\n    if (file.status.type === \"uploading\") {\n      // The file hasn't been uploaded. Let's cancel the request.\n      // However, it may have been received by the server so we'll still\n      // send out a request to delete.\n      file.status.cancelToken.cancel()\n    }\n\n    if (file.status.type === \"uploaded\" && file.status.fileUrls.deleteUrl) {\n      this.props.uploadClient.deleteFile(file.status.fileUrls.deleteUrl)\n    }\n\n    this.removeFile(fileId)\n  }\n\n  /** Append the given file to `state.files`. */\n  private addFile = (file: UploadFileInfo): void => {\n    this.setState(state => ({ files: [...state.files, file] }))\n  }\n\n  /** Append the given files to `state.files`. */\n  private addFiles = (files: UploadFileInfo[]): void => {\n    this.setState(state => ({ files: [...state.files, ...files] }))\n  }\n\n  /** Remove the file with the given ID from `state.files`. */\n  private removeFile = (idToRemove: number): void => {\n    this.setState(state => ({\n      files: state.files.filter(file => file.id !== idToRemove),\n    }))\n  }\n\n  /**\n   * Return the file with the given ID, if one exists.\n   */\n  private getFile = (fileId: number): UploadFileInfo | undefined => {\n    return this.state.files.find(file => file.id === fileId)\n  }\n\n  /** Replace the file with the given id in `state.files`. */\n  private updateFile = (curFileId: number, newFile: UploadFileInfo): void => {\n    this.setState(curState => {\n      return {\n        files: curState.files.map(file =>\n          file.id === curFileId ? newFile : file\n        ),\n      }\n    })\n  }\n\n  /**\n   * Callback for file upload progress. Updates a single file's local `progress`\n   * state.\n   */\n  private onUploadProgress = (event: ProgressEvent, fileId: number): void => {\n    const file = this.getFile(fileId)\n    if (file == null || file.status.type !== \"uploading\") {\n      return\n    }\n\n    const newProgress = Math.round((event.loaded * 100) / event.total)\n    if (file.status.progress === newProgress) {\n      return\n    }\n\n    // Update file.progress\n    this.updateFile(\n      fileId,\n      file.setStatus({\n        type: \"uploading\",\n        cancelToken: file.status.cancelToken,\n        progress: newProgress,\n      })\n    )\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    this.setState({ files: [] }, () => {\n      const newWidgetValue = this.createWidgetValue()\n      if (newWidgetValue == null) {\n        return\n      }\n\n      const { widgetMgr, element, fragmentId } = this.props\n      widgetMgr.setFileUploaderStateValue(\n        element,\n        newWidgetValue,\n        { fromUi: true },\n        fragmentId\n      )\n    })\n  }\n\n  public render(): React.ReactNode {\n    const { files } = this.state\n    const { element, disabled, widgetMgr } = this.props\n    const acceptedExtensions = element.type\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      element.formId,\n      this.onFormCleared\n    )\n\n    // We display files in the reverse order they were added.\n    // This way, if you have multiple pages of uploaded files and then drop\n    // another one, you'll see that newest file at the top of the first page.\n    const newestToOldestFiles = files.slice().reverse()\n\n    return (\n      <StyledFileUploader data-testid=\"stFileUploader\">\n        <WidgetLabel\n          label={element.label}\n          disabled={disabled}\n          labelVisibility={labelVisibilityProtoValueToEnum(\n            element.labelVisibility?.value\n          )}\n        >\n          {element.help && (\n            <StyledWidgetLabelHelp>\n              <TooltipIcon\n                content={element.help}\n                placement={Placement.TOP_RIGHT}\n              />\n            </StyledWidgetLabelHelp>\n          )}\n        </WidgetLabel>\n        <FileDropzone\n          onDrop={this.dropHandler}\n          multiple={element.multipleFiles}\n          acceptedExtensions={acceptedExtensions}\n          maxSizeBytes={this.maxUploadSizeInBytes}\n          label={element.label}\n          disabled={disabled}\n        />\n        {newestToOldestFiles.length > 0 && (\n          <UploadedFiles\n            items={newestToOldestFiles}\n            pageSize={3}\n            onDelete={this.deleteFile}\n            resetOnAdd\n          />\n        )}\n      </StyledFileUploader>\n    )\n  }\n\n  private nextLocalFileId(): number {\n    return this.localFileIdCounter++\n  }\n}\n\nexport default FileUploader\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isValidFormId } from \"@streamlit/lib/src/util/utils\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport { SignalConnection } from \"typed-signals\"\n\nexport class FormClearHelper {\n  private formClearListener?: SignalConnection\n\n  private lastWidgetMgr?: WidgetStateManager\n\n  private lastFormId?: string\n\n  /**\n   * Register the listener that will be called when the widget's form is cleared.\n   * This should be called in the `render` function of every class-based widget\n   * element - it mimics the behavior of a `useEffect` hook, and ensures that\n   * subscription and unsubscription happen correctly.\n   *\n   * Hooks-based widgets can just use `useEffect` and call\n   * `widgetMgr.addFormClearedListener` directly.\n   */\n  public manageFormClearListener(\n    widgetMgr: WidgetStateManager,\n    formId: string,\n    listener: () => void\n  ): void {\n    // If we're already subscribed and our params haven't changed, early-out.\n    if (\n      this.formClearListener != null &&\n      this.lastWidgetMgr === widgetMgr &&\n      this.lastFormId === formId\n    ) {\n      return\n    }\n\n    // Close our previous subscription, if we had one.\n    this.disconnect()\n\n    // If we're not part of a form, there's nothing to do.\n    if (!isValidFormId(formId)) {\n      return\n    }\n\n    // Make the new subscription.\n    this.formClearListener = widgetMgr.addFormClearedListener(formId, listener)\n    this.lastWidgetMgr = widgetMgr\n    this.lastFormId = formId\n  }\n\n  /**\n   * Disconnect from the form-clear signal, if we're connected.\n   * This should be called from the `componentWillUnmount` function of every\n   * element that uses it.\n   */\n  public disconnect(): void {\n    this.formClearListener?.disconnect()\n    this.formClearListener = undefined\n    this.lastWidgetMgr = undefined\n    this.lastFormId = undefined\n  }\n}\n"],"names":["Size","_ref","value","width","size","SMALL","overrides","theme","useTheme","heightMap","xs","spacing","twoXS","sm","md","lg","xl","twoXL","activeTheme","React","LibContext","usingCustomTheme","isPresetTheme","defaultOverrides","BarContainer","style","marginTop","none","marginBottom","marginRight","marginLeft","Bar","_ref2","$theme","toString","undefined","height","backgroundColor","colors","progressbarTrackFill","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BarProgress","primary","blue70","_jsx","UIProgressBar","mergeOverrides","UploadFileInfo","setStatus","status","this","name","id","constructor","FileSize","BYTE_CONVERSION_SIZE","isFromWindows","sizeUnitSequence","Gigabyte","Megabyte","Kilobyte","Byte","getSizeDisplay","unit","rounding","arguments","length","Error","sizeIndex","indexOf","concat","toFixed","toUpperCase","StyledFileDropzoneSection","_styled","target","isDisabled","display","alignItems","padding","secondaryBg","borderRadius","radii","default","outline","boxShadow","color","gray","bodyText","StyledFileDropzoneInstructions","StyledFileDropzoneInstructionsFileUploaderIcon","darkenedBgMix100","StyledFileDropzoneInstructionsStyledSpan","_ref3","StyledFileDropzoneInstructionsColumn","styles","StyledUploadedFiles","_ref4","left","right","lineHeight","lineHeights","tight","paddingTop","paddingLeft","paddingRight","StyledUploadedFilesList","listStyleType","StyledUploadedFilesListItem","_ref5","margin","StyledUploadedFileData","_ref6","flex","overflow","StyledUploadedFileName","_ref7","textOverflow","whiteSpace","StyledUploadedFile","_ref8","StyledErrorMessage","_ref9","StyledFileIcon","_ref10","StyledFileError","_ref11","danger","fontSize","fontSizes","StyledFileErrorIcon","compactFileUploader","flexDirection","maxWidth","sizes","full","StyledFileUploader","_ref12","inSidebar","breakpoints","multiple","acceptedExtensions","maxSizeBytes","_jsxs","children","Icon","content","CloudUpload","Small","map","ext","replace","join","onDrop","disabled","label","Dropzone","accept","maxSize","useFsAccessApi","getRootProps","getInputProps","FileDropzoneInstructions","BaseButton","kind","BaseButtonKind","BaseButtonSize","StyledPagination","justifyContent","paddingBottom","StyledPaginators","fadedText40","className","currentPage","totalPages","onNext","onPrevious","onClick","ChevronLeft","ChevronRight","calculateNumPages","items","pageSize","Math","ceil","WrappedComponent","hoistNonReactStatics","resetOnAdd","props","updateCurrentPage","useState","updateTotalPages","prevItems","usePrevious","useEffect","paginatedItems","slice","_Fragment","Pagination","min","max","UploadedFileStatus","fileInfo","type","ProgressBar","progress","errorMessage","onDelete","InsertDriveFile","title","Clear","PaginatedFiles","withPagination","file","UploadedFile","FileUploader","super","formClearHelper","FormClearHelper","localFileIdCounter","forceUpdatingStatus","componentDidUpdate","newWidgetValue","createWidgetValue","element","widgetMgr","fragmentId","prevWidgetValue","getFileUploaderStateValue","isEqual","setFileUploaderStateValue","fromUi","reset","setState","files","dropHandler","acceptedFiles","rejectedFiles","multipleFiles","firstFileIndex","findIndex","errors","code","push","splice","uploadClient","fetchFileURLs","then","fileURLsArray","existingFile","state","find","f","deleteFile","zip","forEach","fileURLs","acceptedFile","uploadFile","catch","addFiles","nextLocalFileId","rejectedInfos","rejected","getErrorMessage","cancelToken","axios","uploadingFileInfo","addFile","uploadUrl","e","onUploadProgress","token","onUploadComplete","err","updateFile","localFileId","fileUrls","curFile","getFile","fileId","errorCode","maxUploadSizeInBytes","cancel","deleteUrl","removeFile","idToRemove","filter","curFileId","newFile","curState","event","newProgress","round","loaded","total","onFormCleared","initialValue","emptyState","newestServerFileId","widgetValue","uploadedFileInfo","componentWillUnmount","disconnect","sizeConverter","inputUnit","outputUnit","inputLevel","outputLevel","levelsBetween","abs","byteDifference","maxUploadSizeMb","some","componentDidMount","UploadedFileInfoProto","FileUploaderStateProto","render","_element$labelVisibil","manageFormClearListener","formId","newestToOldestFiles","reverse","WidgetLabel","labelVisibility","labelVisibilityProtoValueToEnum","help","StyledWidgetLabelHelp","TooltipIcon","placement","Placement","FileDropzone","UploadedFiles","formClearListener","lastWidgetMgr","lastFormId","listener","isValidFormId","addFormClearedListener","_this$formClearListen"],"sourceRoot":""}