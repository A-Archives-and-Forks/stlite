{"version":3,"file":"static/js/5312.638c214b.chunk.js","mappings":"mOAsBO,MAAMA,GAAsBC,E,OAAAA,GAAA,OAAAC,OAAA,aAAAD,EACjCE,IAAA,IAAC,MAAEC,EAAK,aAAEC,GAAcF,EAAA,MAAM,CAC5B,MAAO,CACLG,WAAYF,EAAMG,aAAaC,SAI/BC,SAAW,QAAOL,EAAMM,UAAUC,gBAIpC,QAAS,CACPC,SAAU,OACVC,MAAOR,EAAe,OAAS,OAC/BS,OAAQT,EAAe,OAAS,QAElCQ,MAAOR,EAAe,OAAS,OAC/BS,OAAQT,EAAe,OAAS,OACjC,GAAC,I,eC8DJ,SAAeU,EAAAA,EAAAA,IAhEf,SAAsBZ,GAG0B,IAHzB,QACrBa,EAAO,sBACPC,GAC6Bd,EAC7B,MAAMe,EAAW,qBAAoBF,EAAQG,aAG3CC,SAAUf,EAAY,MACtBQ,EAAK,OACLC,EAAM,OACNO,EAAM,SACNC,IACEC,EAAAA,EAAAA,GAAmBC,EAAAA,GA6BvB,OA3BAC,EAAAA,EAAAA,YAAU,KACR,IAQE,IAPAC,EAAAA,EAAAA,UAAU,IAAGR,KACVS,MAAK,GACLC,KAAI,GACJC,MAAM,GACNC,OAAOd,EAAQc,QACfC,UAAUf,EAAQgB,MAEjB3B,GAAgBW,EAAQiB,kBAAmB,CAC7C,MAAMC,GAAOC,EAAAA,EAAAA,KAAQ,IAAGjB,WAAiBgB,OAGzCA,EAAKE,gBAAgB,SACrBF,EAAKE,gBAAgB,SACvB,CACF,CAAE,MAAOC,IACPC,EAAAA,EAAAA,IAASD,EACX,IACC,CACDnB,EACAF,EAAQc,OACRd,EAAQgB,KACRhB,EAAQiB,kBACR5B,KAIAkC,EAAAA,EAAAA,MAACC,EAAAA,GAA6B,CAC5B3B,MAAOA,EACPC,OAAQA,EACRmB,kBAAmB5B,EAAaoC,SAAA,EAEhCC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNzC,OAAQsC,EAAAA,GACRnC,aAAcA,EACduC,SAAUvB,EACVwB,WAAYvB,EACZL,sBAAuBA,KAEzByB,EAAAA,EAAAA,KAAC1C,EAAmB,CAClB8C,UAAU,kBACV,cAAY,kBACZC,GAAI7B,EACJb,aAAcA,MAItB,G","sources":["../../../streamlit/frontend/lib/src/components/elements/GraphVizChart/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/GraphVizChart/GraphVizChart.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\ninterface StyledGraphVizChartProps {\n  isFullScreen: boolean\n}\n\nexport const StyledGraphVizChart = styled.div<StyledGraphVizChartProps>(\n  ({ theme, isFullScreen }) => ({\n    \"& *\": {\n      fontFamily: theme.genericFonts.bodyFont,\n      // Font sizes inside the SVG element are getting huge for some reason.\n      // Hacking together a number by eyeballing it:\n      // 12px in the SVG looks like 1rem outside.\n      fontSize: `calc(${theme.fontSizes.twoSm} * 0.8)`,\n    },\n\n    // Ensure SVG is allowed the full width/height in full screen mode\n    \"& svg\": {\n      maxWidth: \"100%\",\n      width: isFullScreen ? \"100%\" : \"auto\",\n      height: isFullScreen ? \"100%\" : \"auto\",\n    },\n    width: isFullScreen ? \"100%\" : \"auto\",\n    height: isFullScreen ? \"100%\" : \"auto\",\n  })\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, useEffect } from \"react\"\n\nimport { select } from \"d3\"\nimport { Engine, graphviz } from \"d3-graphviz\"\n\nimport { logError } from \"@streamlit/lib/src/util/log\"\nimport { GraphVizChart as GraphVizChartProto } from \"@streamlit/lib/src/proto\"\nimport Toolbar, {\n  StyledToolbarElementContainer,\n} from \"@streamlit/lib/src/components/shared/Toolbar\"\nimport { ElementFullscreenContext } from \"@streamlit/lib/src/components/shared/ElementFullscreen/ElementFullscreenContext\"\nimport { useRequiredContext } from \"@streamlit/lib/src/hooks/useRequiredContext\"\nimport { withFullScreenWrapper } from \"@streamlit/lib/src/components/shared/FullScreenWrapper\"\n\nimport { StyledGraphVizChart } from \"./styled-components\"\n\nexport interface GraphVizChartProps {\n  element: GraphVizChartProto\n  width: number\n  disableFullscreenMode?: boolean\n}\n\nfunction GraphVizChart({\n  element,\n  disableFullscreenMode,\n}: Readonly<GraphVizChartProps>): ReactElement {\n  const chartId = `st-graphviz-chart-${element.elementId}`\n\n  const {\n    expanded: isFullScreen,\n    width,\n    height,\n    expand,\n    collapse,\n  } = useRequiredContext(ElementFullscreenContext)\n\n  useEffect(() => {\n    try {\n      graphviz(`#${chartId}`)\n        .zoom(false)\n        .fit(true)\n        .scale(1)\n        .engine(element.engine as Engine)\n        .renderDot(element.spec)\n\n      if (isFullScreen || element.useContainerWidth) {\n        const node = select(`#${chartId} > svg`).node() as SVGGraphicsElement\n        // We explicitly remove width and height to let CSS and the SVG viewBox\n        // define its dimensions\n        node.removeAttribute(\"width\")\n        node.removeAttribute(\"height\")\n      }\n    } catch (error) {\n      logError(error)\n    }\n  }, [\n    chartId,\n    element.engine,\n    element.spec,\n    element.useContainerWidth,\n    isFullScreen,\n  ])\n\n  return (\n    <StyledToolbarElementContainer\n      width={width}\n      height={height}\n      useContainerWidth={isFullScreen}\n    >\n      <Toolbar\n        target={StyledToolbarElementContainer}\n        isFullScreen={isFullScreen}\n        onExpand={expand}\n        onCollapse={collapse}\n        disableFullscreenMode={disableFullscreenMode}\n      ></Toolbar>\n      <StyledGraphVizChart\n        className=\"stGraphVizChart\"\n        data-testid=\"stGraphVizChart\"\n        id={chartId}\n        isFullScreen={isFullScreen}\n      />\n    </StyledToolbarElementContainer>\n  )\n}\n\nexport default withFullScreenWrapper(GraphVizChart)\n"],"names":["StyledGraphVizChart","_styled","target","_ref","theme","isFullScreen","fontFamily","genericFonts","bodyFont","fontSize","fontSizes","twoSm","maxWidth","width","height","withFullScreenWrapper","element","disableFullscreenMode","chartId","elementId","expanded","expand","collapse","useRequiredContext","ElementFullscreenContext","useEffect","graphviz","zoom","fit","scale","engine","renderDot","spec","useContainerWidth","node","select","removeAttribute","error","logError","_jsxs","StyledToolbarElementContainer","children","_jsx","Toolbar","onExpand","onCollapse","className","id"],"sourceRoot":""}