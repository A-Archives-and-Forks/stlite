{"version":3,"file":"static/js/803.3938e775.chunk.js","mappings":"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","sources":["../../../streamlit/frontend/lib/src/components/elements/ArrowVegaLiteChart/arrowUtils.ts","../../../streamlit/frontend/lib/src/components/elements/ArrowVegaLiteChart/CustomTheme.tsx","../../../streamlit/frontend/lib/src/components/elements/ArrowVegaLiteChart/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/ArrowVegaLiteChart/ArrowVegaLiteChart.tsx","../../../streamlit/frontend/lib/src/components/shared/FullScreenWrapper/styled-components.ts","../../../streamlit/frontend/lib/src/components/shared/FullScreenWrapper/FullScreenWrapper.tsx","../../../streamlit/frontend/lib/src/components/shared/FullScreenWrapper/withFullScreenWrapper.tsx","../../../streamlit/frontend/lib/src/components/widgets/Form/FormClearHelper.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNullOrUndefined } from \"@streamlit/lib/src/util/utils\"\nimport { IndexTypeName, Quiver } from \"@streamlit/lib/src/dataframes/Quiver\"\n\nconst MagicFields = {\n  DATAFRAME_INDEX: \"(index)\",\n}\n\n/** Types of dataframe-indices that are supported as x axis. */\nconst SUPPORTED_INDEX_TYPES = new Set([\n  IndexTypeName.DatetimeIndex,\n  IndexTypeName.Float64Index,\n  IndexTypeName.Int64Index,\n  IndexTypeName.RangeIndex,\n  IndexTypeName.UInt64Index,\n])\n\n/** All of the data that makes up a VegaLite chart. */\nexport interface VegaLiteChartElement {\n  /**\n   * The dataframe that will be used as the chart's main data source, if\n   * specified using Vega-Lite's inline API.\n   *\n   * This is mutually exclusive with WrappedNamedDataset - if `data` is non-null,\n   * `datasets` will not be populated; if `datasets` is populated, then `data`\n   * will be null.\n   */\n  data: Quiver | null\n\n  /** The a JSON-formatted string with the Vega-Lite spec. */\n  spec: string\n\n  /**\n   * Dataframes associated with this chart using Vega-Lite's datasets API,\n   * if any.\n   */\n  datasets: WrappedNamedDataset[]\n\n  /** If True, will overwrite the chart width spec to fit to container. */\n  useContainerWidth: boolean\n\n  /** override the properties with a theme. Currently, only \"streamlit\" or None are accepted. */\n  vegaLiteTheme: string\n\n  /** The widget ID. Only set if selections are activated. */\n  id: string\n\n  /** Named selection parameters that are activated to trigger reruns. */\n  selectionMode: string[]\n\n  /** The form ID if the chart has activated selections and is used within a form. */\n  formId: string\n}\n\n/** A mapping of `ArrowNamedDataSet.proto`. */\nexport interface WrappedNamedDataset {\n  /** The dataset's optional name. */\n  name: string | null\n\n  /** True if the name field (above) was manually set. */\n  hasName: boolean\n\n  /** The data itself, wrapped in a Quiver object. */\n  data: Quiver\n}\n\nexport function getInlineData(\n  el: VegaLiteChartElement\n): { [field: string]: any }[] | null {\n  const dataProto = el.data\n\n  if (!dataProto || dataProto.data.numRows === 0) {\n    return null\n  }\n\n  return getDataArray(dataProto)\n}\n\nexport function getDataArrays(\n  el: VegaLiteChartElement\n): { [dataset: string]: any[] } | null {\n  const datasets = getDataSets(el)\n  if (isNullOrUndefined(datasets)) {\n    return null\n  }\n\n  const datasetArrays: { [dataset: string]: any[] } = {}\n\n  for (const [name, dataset] of Object.entries(datasets)) {\n    datasetArrays[name] = getDataArray(dataset)\n  }\n\n  return datasetArrays\n}\n\nexport function getDataSets(\n  el: VegaLiteChartElement\n): { [dataset: string]: Quiver } | null {\n  if (el.datasets?.length === 0) {\n    return null\n  }\n\n  const datasets: { [dataset: string]: Quiver } = {}\n\n  el.datasets.forEach((x: WrappedNamedDataset) => {\n    if (!x) {\n      return\n    }\n    const name = x.hasName ? x.name : null\n    datasets[name as string] = x.data\n  })\n\n  return datasets\n}\n\n/**\n * Retrieves an array of data from Quiver starting from a specified index.\n * Converts data values to a format compatible with VegaLite visualization.\n *\n * @param {Quiver} dataProto - The Quiver data object to extract data from.\n * @param {number} [startIndex=0] - The starting index for data extraction.\n * @returns {Array.<{ [field: string]: any }>} An array of data objects for visualization.\n */\nexport function getDataArray(\n  dataProto: Quiver,\n  startIndex = 0\n): { [field: string]: any }[] {\n  if (dataProto.isEmpty()) {\n    return []\n  }\n\n  const dataArr = []\n  const { dataRows: rows, dataColumns: cols } = dataProto.dimensions\n\n  const indexType = Quiver.getTypeName(dataProto.types.index[0])\n  const hasSupportedIndex = SUPPORTED_INDEX_TYPES.has(\n    indexType as IndexTypeName\n  )\n\n  for (let rowIndex = startIndex; rowIndex < rows; rowIndex++) {\n    const row: { [field: string]: any } = {}\n\n    if (hasSupportedIndex) {\n      const indexValue = dataProto.getIndexValue(rowIndex, 0)\n      // VegaLite can't handle BigInts, so they have to be converted to Numbers first\n      row[MagicFields.DATAFRAME_INDEX] =\n        typeof indexValue === \"bigint\" ? Number(indexValue) : indexValue\n    }\n\n    for (let colIndex = 0; colIndex < cols; colIndex++) {\n      const dataValue = dataProto.getDataValue(rowIndex, colIndex)\n      const dataType = dataProto.types.data[colIndex]\n      const typeName = Quiver.getTypeName(dataType)\n\n      if (\n        typeName !== \"datetimetz\" &&\n        (dataValue instanceof Date || Number.isFinite(dataValue)) &&\n        (typeName.startsWith(\"datetime\") || typeName === \"date\")\n      ) {\n        // For dates that do not contain timezone information.\n        // Vega JS assumes dates in the local timezone, so we need to convert\n        // UTC date to be the same date in the local timezone.\n        const offset = new Date(dataValue).getTimezoneOffset() * 60 * 1000 // minutes to milliseconds\n        row[dataProto.columns[0][colIndex]] = dataValue.valueOf() + offset\n      } else if (typeof dataValue === \"bigint\") {\n        row[dataProto.columns[0][colIndex]] = Number(dataValue)\n      } else {\n        row[dataProto.columns[0][colIndex]] = dataValue\n      }\n    }\n    dataArr.push(row)\n  }\n\n  return dataArr\n}\n\n/**\n * Checks if data looks like it's just prevData plus some appended rows.\n */\nexport function dataIsAnAppendOfPrev(\n  prevData: Quiver,\n  prevNumRows: number,\n  prevNumCols: number,\n  data: Quiver,\n  numRows: number,\n  numCols: number\n): boolean {\n  // Check whether dataframes have the same shape.\n\n  // not an append\n  if (prevNumCols !== numCols) {\n    return false\n  }\n\n  // Data can be updated, but still have the same number of rows.\n  // We consider the case an append only when the number of rows has increased\n  if (prevNumRows >= numRows) {\n    return false\n  }\n\n  // if no previous data, render from scratch\n  if (prevNumRows === 0) {\n    return false\n  }\n\n  const c = numCols - 1\n  const r = prevNumRows - 1\n\n  // Check if the new dataframe looks like it's a superset of the old one.\n  // (this is a very light check, and not guaranteed to be right!)\n  if (\n    prevData.getDataValue(0, c) !== data.getDataValue(0, c) ||\n    prevData.getDataValue(r, c) !== data.getDataValue(r, c)\n  ) {\n    return false\n  }\n\n  return true\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport merge from \"lodash/merge\"\nimport mergeWith from \"lodash/mergeWith\"\n\nimport {\n  EmotionTheme,\n  getCategoricalColorsArray,\n  getDivergingColorsArray,\n  getGray30,\n  getGray70,\n  getSequentialColorsArray,\n  hasLightBackgroundColor,\n} from \"@streamlit/lib/src/theme\"\n\nexport function applyStreamlitTheme(config: any, theme: EmotionTheme): any {\n  // This theming config contains multiple hard coded spacing values.\n  // The reason is that we currently only have rem values in our spacing\n  // definitions and vega lite requires numerical (pixel) values.\n\n  const streamlitTheme = {\n    font: theme.genericFonts.bodyFont,\n    background: theme.colors.bgColor,\n    fieldTitle: \"verbal\",\n    autosize: { type: \"fit\", contains: \"padding\" },\n    title: {\n      align: \"left\",\n      anchor: \"start\",\n      color: theme.colors.headingColor,\n      titleFontStyle: \"normal\",\n      fontWeight: theme.fontWeights.bold,\n      fontSize: theme.fontSizes.smPx + 2,\n      orient: \"top\",\n      offset: 26,\n    },\n    header: {\n      titleFontWeight: theme.fontWeights.normal,\n      titleFontSize: theme.fontSizes.mdPx,\n      titleColor: getGray70(theme),\n      titleFontStyle: \"normal\",\n      labelFontSize: theme.fontSizes.twoSmPx,\n      labelFontWeight: theme.fontWeights.normal,\n      labelColor: getGray70(theme),\n      labelFontStyle: \"normal\",\n    },\n    axis: {\n      labelFontSize: theme.fontSizes.twoSmPx,\n      labelFontWeight: theme.fontWeights.normal,\n      labelColor: getGray70(theme),\n      labelFontStyle: \"normal\",\n      titleFontWeight: theme.fontWeights.normal,\n      titleFontSize: theme.fontSizes.smPx,\n      titleColor: getGray70(theme),\n      titleFontStyle: \"normal\",\n      ticks: false,\n      gridColor: getGray30(theme),\n      domain: false,\n      domainWidth: 1,\n      domainColor: getGray30(theme),\n      labelFlush: true,\n      labelFlushOffset: 1,\n      labelBound: false,\n      labelLimit: 100,\n      titlePadding: theme.spacing.lgPx,\n      labelPadding: theme.spacing.lgPx,\n      labelSeparation: theme.spacing.twoXSPx,\n      labelOverlap: true,\n    },\n    legend: {\n      labelFontSize: theme.fontSizes.smPx,\n      labelFontWeight: theme.fontWeights.normal,\n      labelColor: getGray70(theme),\n      titleFontSize: theme.fontSizes.smPx,\n      titleFontWeight: theme.fontWeights.normal,\n      titleFontStyle: \"normal\",\n      titleColor: getGray70(theme),\n      titlePadding: 5,\n      labelPadding: theme.spacing.lgPx,\n      columnPadding: theme.spacing.smPx,\n      rowPadding: theme.spacing.twoXSPx,\n      padding: 7,\n      symbolStrokeWidth: 4,\n    },\n    range: {\n      category: getCategoricalColorsArray(theme),\n      diverging: getDivergingColorsArray(theme),\n      ramp: getSequentialColorsArray(theme),\n      heatmap: getSequentialColorsArray(theme),\n    },\n    view: {\n      columns: 1,\n      strokeWidth: 0,\n      stroke: \"transparent\",\n      continuousHeight: 350,\n      continuousWidth: 400,\n    },\n    concat: {\n      columns: 1,\n    },\n    facet: {\n      columns: 1,\n    },\n    mark: {\n      tooltip: true,\n      ...(hasLightBackgroundColor(theme)\n        ? { color: \"#0068C9\" }\n        : { color: \"#83C9FF\" }),\n    },\n    bar: {\n      binSpacing: theme.spacing.twoXSPx,\n      discreteBandSize: { band: 0.85 },\n    },\n    axisDiscrete: {\n      grid: false,\n    },\n    axisXPoint: {\n      grid: false,\n    },\n    axisTemporal: {\n      grid: false,\n    },\n    axisXBand: {\n      grid: false,\n    },\n  }\n\n  if (!config) {\n    return streamlitTheme\n  }\n\n  // Fill in theme defaults where the user didn't specify config options.\n  return mergeWith({}, streamlitTheme, config, (_, b) =>\n    Array.isArray(b) ? b : undefined\n  )\n}\n\nexport function applyThemeDefaults(config: any, theme: EmotionTheme): any {\n  const { colors, fontSizes, genericFonts } = theme\n  const themeFonts = {\n    labelFont: genericFonts.bodyFont,\n    titleFont: genericFonts.bodyFont,\n    labelFontSize: fontSizes.twoSmPx,\n    titleFontSize: fontSizes.twoSmPx,\n  }\n  const themeDefaults = {\n    background: colors.bgColor,\n    axis: {\n      labelColor: colors.bodyText,\n      titleColor: colors.bodyText,\n      gridColor: getGray30(theme),\n      ...themeFonts,\n    },\n    legend: {\n      labelColor: colors.bodyText,\n      titleColor: colors.bodyText,\n      ...themeFonts,\n    },\n    title: {\n      color: colors.bodyText,\n      subtitleColor: colors.bodyText,\n      ...themeFonts,\n    },\n    header: {\n      labelColor: colors.bodyText,\n      titleColor: colors.bodyText,\n      ...themeFonts,\n    },\n    view: {\n      stroke: getGray30(theme),\n      continuousHeight: 350,\n      continuousWidth: 400,\n    },\n    mark: {\n      tooltip: true,\n    },\n  }\n\n  if (!config) {\n    return themeDefaults\n  }\n\n  // Fill in theme defaults where the user didn't specify config options.\n  return merge({}, themeDefaults, config)\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\ninterface StyledVegaLiteChartContainerProps {\n  useContainerWidth: boolean\n  isFullScreen: boolean\n}\n\nexport const StyledVegaLiteChartContainer =\n  styled.div<StyledVegaLiteChartContainerProps>(\n    ({ theme, useContainerWidth, isFullScreen }) => ({\n      width: useContainerWidth || isFullScreen ? \"100%\" : \"auto\",\n      height: isFullScreen ? \"100%\" : \"auto\",\n      // These styles come from VegaLite Library\n      \"&.vega-embed\": {\n        \"&:hover summary, .vega-embed:focus summary\": {\n          background: \"transparent\",\n        },\n        \"&.has-actions\": {\n          paddingRight: 0,\n        },\n        \".vega-actions\": {\n          zIndex: theme.zIndices.popupMenu,\n          // Customize menu UI to look like the Streamlit menu:\n          backgroundColor: theme.colors.bgColor,\n          boxShadow: \"rgb(0 0 0 / 16%) 0px 4px 16px\",\n          border: `${theme.sizes.borderWidth} solid ${theme.colors.fadedText10}`,\n          a: {\n            fontFamily: theme.genericFonts.bodyFont,\n            fontWeight: theme.fontWeights.normal,\n            fontSize: theme.fontSizes.md,\n            margin: 0,\n            padding: `${theme.spacing.twoXS} ${theme.spacing.twoXL}`,\n            color: theme.colors.bodyText,\n          },\n          \"a:hover\": {\n            backgroundColor: theme.colors.secondaryBg,\n            color: theme.colors.bodyText,\n          },\n          \":before\": {\n            content: \"none\",\n          },\n          \":after\": {\n            content: \"none\",\n          },\n        },\n        summary: {\n          opacity: 0,\n          // Fix weird floating button height issue in Vega Lite.\n          height: \"auto\",\n          // Fix floating button appearing above pop-ups.\n          zIndex: theme.zIndices.menuButton,\n          border: \"none\",\n          boxShadow: \"none\",\n          borderRadius: theme.radii.default,\n          color: theme.colors.fadedText10,\n          backgroundColor: \"transparent\",\n          transition: \"opacity 300ms 150ms,transform 300ms 150ms\",\n          \"&:active, &:focus-visible, &:hover\": {\n            border: \"none\",\n            boxShadow: \"none\",\n            color: theme.colors.bodyText,\n            opacity: \"1 !important\",\n            background: theme.colors.darkenedBgMix25,\n          },\n        },\n      },\n    })\n  )\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PureComponent } from \"react\"\n\nimport { withTheme } from \"@emotion/react\"\nimport embed from \"vega-embed\"\nimport * as vega from \"vega\"\nimport { SignalValue } from \"vega\"\nimport { expressionInterpreter } from \"vega-interpreter\"\nimport isEqual from \"lodash/isEqual\"\n\nimport {\n  debounce,\n  isNullOrUndefined,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\nimport {\n  WidgetInfo,\n  WidgetStateManager,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport { logMessage, logWarning } from \"@streamlit/lib/src/util/log\"\nimport { withFullScreenWrapper } from \"@streamlit/lib/src/components/shared/FullScreenWrapper\"\nimport { ensureError } from \"@streamlit/lib/src/util/ErrorHandling\"\nimport { Quiver } from \"@streamlit/lib/src/dataframes/Quiver\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\n\nimport \"@streamlit/lib/src/assets/css/vega-embed.css\"\nimport \"@streamlit/lib/src/assets/css/vega-tooltip.css\"\n\nimport {\n  dataIsAnAppendOfPrev,\n  getDataArray,\n  getDataArrays,\n  getDataSets,\n  getInlineData,\n  VegaLiteChartElement,\n} from \"./arrowUtils\"\nimport { applyStreamlitTheme, applyThemeDefaults } from \"./CustomTheme\"\nimport { StyledVegaLiteChartContainer } from \"./styled-components\"\n\nconst DEFAULT_DATA_NAME = \"source\"\n\n/**\n * Fix bug where Vega Lite was vertically-cropping the x-axis in some cases.\n */\nconst BOTTOM_PADDING = 20\n\n/**\n * Debounce time for triggering a widget state update\n * This prevents to rapid updates to the widget state.\n */\nconst DEBOUNCE_TIME_MS = 150\n\n/** This is the state that is sent to the backend\n * This needs to be the same structure that is also defined\n * in the Python code.\n */\nexport interface VegaLiteState {\n  selection: Record<string, any>\n}\n\ninterface Props {\n  element: VegaLiteChartElement\n  theme: EmotionTheme\n  width: number\n  widgetMgr: WidgetStateManager\n  fragmentId?: string\n}\n\nexport interface PropsWithFullScreen extends Props {\n  height?: number\n  isFullScreen: boolean\n}\n\ninterface State {\n  error?: Error\n}\n\n/**\n * Prepares the vega-lite spec for selections by transforming the select parameters\n * to a full object specification and by automatically adding encodings (if missing)\n * to point selections.\n *\n * The changes are applied in-place to the spec object.\n *\n * @param spec The Vega-Lite specification of the chart.\n */\nexport function prepareSpecForSelections(spec: any): void {\n  if (\"params\" in spec && \"encoding\" in spec) {\n    spec.params.forEach((param: any) => {\n      if (!(\"select\" in param)) {\n        // We are only interested in transforming select parameters.\n        // Other parameters are skipped.\n        return\n      }\n\n      if ([\"interval\", \"point\"].includes(param.select)) {\n        // The select object can be either a single string (short-hand) specifying\n        // \"interval\" or \"point\" or an object that can contain additional\n        // properties as defined here: https://vega.github.io/vega-lite/docs/selection.html\n        // We convert the short-hand notation to the full object specification,\n        // so that we can attach additional properties to this below.\n        param.select = {\n          type: param.select,\n        }\n      }\n\n      if (!(\"type\" in param.select)) {\n        // The type property is required in the spec.\n        // But we check anyways and skip all parameters that don't have it.\n        return\n      }\n\n      if (\n        param.select.type === \"point\" &&\n        !(\"encodings\" in param.select) &&\n        isNullOrUndefined(param.select.encodings)\n      ) {\n        // If encodings are not specified by the user, we add all the encodings from\n        // the chart to the selection parameter. This is required so that points\n        // selections are correctly resolved to a PointSelection and not an IndexSelection:\n        // https://github.com/altair-viz/altair/issues/3285#issuecomment-1858860696\n        param.select.encodings = Object.keys(spec.encoding)\n      }\n    })\n  }\n}\n\nexport class ArrowVegaLiteChart extends PureComponent<\n  PropsWithFullScreen,\n  State\n> {\n  /**\n   * The Vega view object\n   */\n  private vegaView?: vega.View\n\n  /**\n   * Finalizer for the embedded vega object. Must be called to dispose\n   * of the vegaView when it's no longer used.\n   */\n  private vegaFinalizer?: () => void\n\n  /**\n   * The default data name to add to.\n   */\n  private defaultDataName = DEFAULT_DATA_NAME\n\n  /**\n   * The html element we attach the Vega view to.\n   */\n  private element: HTMLDivElement | null = null\n\n  /**\n   * Helper to manage form clear listeners.\n   * This is used to reset the selection state when the form is cleared.\n   */\n  private readonly formClearHelper = new FormClearHelper()\n\n  readonly state = {\n    error: undefined,\n  }\n\n  public async componentDidMount(): Promise<void> {\n    try {\n      await this.createView()\n    } catch (e) {\n      const error = ensureError(e)\n      this.setState({ error })\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.finalizeView()\n  }\n\n  /**\n   * Finalize the view so it can be garbage collected. This should be done\n   * when a new view is created, and when the component unmounts.\n   */\n  private finalizeView = (): any => {\n    if (this.vegaFinalizer) {\n      this.vegaFinalizer()\n    }\n    this.vegaFinalizer = undefined\n    this.vegaView = undefined\n  }\n\n  public async componentDidUpdate(\n    prevProps: PropsWithFullScreen\n  ): Promise<void> {\n    const { element: prevElement, theme: prevTheme } = prevProps\n    const { element, theme } = this.props\n\n    const prevSpec = prevElement.spec\n    const { spec } = element\n\n    if (\n      !this.vegaView ||\n      prevSpec !== spec ||\n      prevTheme !== theme ||\n      prevProps.width !== this.props.width ||\n      prevProps.height !== this.props.height ||\n      prevProps.element.vegaLiteTheme !== this.props.element.vegaLiteTheme ||\n      !isEqual(\n        prevProps.element.selectionMode,\n        this.props.element.selectionMode\n      )\n    ) {\n      logMessage(\"Vega spec changed.\")\n      try {\n        await this.createView()\n      } catch (e) {\n        const error = ensureError(e)\n\n        this.setState({ error })\n      }\n      return\n    }\n\n    const prevData = prevElement.data\n    const { data } = element\n\n    if (prevData || data) {\n      this.updateData(this.defaultDataName, prevData, data)\n    }\n\n    const prevDataSets = getDataSets(prevElement) || {}\n    const dataSets = getDataSets(element) || {}\n\n    for (const [name, dataset] of Object.entries(dataSets)) {\n      const datasetName = name || this.defaultDataName\n      const prevDataset = prevDataSets[datasetName]\n\n      this.updateData(datasetName, prevDataset, dataset)\n    }\n\n    // Remove all datasets that are in the previous but not the current datasets.\n    for (const name of Object.keys(prevDataSets)) {\n      if (!dataSets.hasOwnProperty(name) && name !== this.defaultDataName) {\n        this.updateData(name, null, null)\n      }\n    }\n\n    this.vegaView.resize().runAsync()\n  }\n\n  public generateSpec = (): any => {\n    const { element: el, theme, isFullScreen, width, height } = this.props\n    const spec = JSON.parse(el.spec)\n    const { useContainerWidth } = el\n    if (el.vegaLiteTheme === \"streamlit\") {\n      spec.config = applyStreamlitTheme(spec.config, theme)\n    } else if (spec.usermeta?.embedOptions?.theme === \"streamlit\") {\n      spec.config = applyStreamlitTheme(spec.config, theme)\n      // Remove the theme from the usermeta so it doesn't get picked up by vega embed.\n      spec.usermeta.embedOptions.theme = undefined\n    } else {\n      // Apply minor theming improvements to work better with Streamlit\n      spec.config = applyThemeDefaults(spec.config, theme)\n    }\n\n    if (isFullScreen) {\n      spec.width = width\n      spec.height = height\n\n      if (\"vconcat\" in spec) {\n        spec.vconcat.forEach((child: any) => {\n          child.width = width\n        })\n      }\n    } else if (useContainerWidth) {\n      spec.width = width\n\n      if (\"vconcat\" in spec) {\n        spec.vconcat.forEach((child: any) => {\n          child.width = width\n        })\n      }\n    }\n\n    if (!spec.padding) {\n      spec.padding = {}\n    }\n\n    if (isNullOrUndefined(spec.padding.bottom)) {\n      spec.padding.bottom = BOTTOM_PADDING\n    }\n\n    if (spec.datasets) {\n      throw new Error(\"Datasets should not be passed as part of the spec\")\n    }\n\n    if (el.selectionMode.length > 0) {\n      prepareSpecForSelections(spec)\n    }\n    return spec\n  }\n\n  /**\n   * Update the dataset in the Vega view. This method tried to minimize changes\n   * by automatically creating and applying diffs.\n   *\n   * @param name The name of the dataset.\n   * @param prevData The dataset before the update.\n   * @param data The dataset to use for the update.\n   */\n  private updateData(\n    name: string,\n    prevData: Quiver | null,\n    data: Quiver | null\n  ): void {\n    if (!this.vegaView) {\n      throw new Error(\"Chart has not been drawn yet\")\n    }\n\n    if (!data || data.data.numRows === 0) {\n      // The new data is empty, so we remove the dataset from the\n      // chart view if the named dataset exists.\n      try {\n        this.vegaView.remove(name, vega.truthy)\n      } finally {\n        return\n      }\n    }\n\n    if (!prevData || prevData.data.numRows === 0) {\n      // The previous data was empty, so we just insert the new data.\n      this.vegaView.insert(name, getDataArray(data))\n      return\n    }\n\n    const { dataRows: prevNumRows, dataColumns: prevNumCols } =\n      prevData.dimensions\n    const { dataRows: numRows, dataColumns: numCols } = data.dimensions\n\n    // Check if dataframes have same \"shape\" but the new one has more rows.\n    if (\n      dataIsAnAppendOfPrev(\n        prevData,\n        prevNumRows,\n        prevNumCols,\n        data,\n        numRows,\n        numCols\n      )\n    ) {\n      if (prevNumRows < numRows) {\n        // Insert the new rows.\n        this.vegaView.insert(name, getDataArray(data, prevNumRows))\n      }\n    } else {\n      // Clean the dataset and insert from scratch.\n      this.vegaView.data(name, getDataArray(data))\n      logMessage(\n        `Had to clear the ${name} dataset before inserting data through Vega view.`\n      )\n    }\n  }\n\n  /**\n   * Configure the selections for this chart if the chart has selections enabled.\n   */\n  private maybeConfigureSelections = (): void => {\n    if (this.vegaView === undefined) {\n      // This check is mainly to make the type checker happy.\n      // this.vegaView is guaranteed to be defined here.\n      return\n    }\n\n    const { widgetMgr, element } = this.props\n\n    if (!element?.id || element.selectionMode.length === 0) {\n      // To configure selections, it needs to be activated and\n      // the element ID must be set.\n      return\n    }\n\n    // Try to load the previous state of the chart from the element state.\n    // This is useful to restore the selection state when the component is re-mounted\n    // or when its put into fullscreen mode.\n    const viewState = widgetMgr.getElementState(\n      this.props.element.id,\n      \"viewState\"\n    )\n    if (notNullOrUndefined(viewState)) {\n      try {\n        this.vegaView = this.vegaView.setState(viewState)\n      } catch (e) {\n        logWarning(\"Failed to restore view state\", e)\n      }\n    }\n\n    // Add listeners for all selection events. Find out more here:\n    // https://vega.github.io/vega/docs/api/view/#view_addSignalListener\n    element.selectionMode.forEach((param, _index) => {\n      this.vegaView?.addSignalListener(\n        param,\n        debounce(DEBOUNCE_TIME_MS, (name: string, value: SignalValue) => {\n          // Store the current chart selection state with the widget manager so that it\n          // can be used for restoring the state when the component unmounted and\n          // created again. This can happen when elements are added before it within\n          // the delta path. The viewState is only stored in the frontend, and not\n          // synced to the backend.\n          const viewState = this.vegaView?.getState({\n            // There are also `signals` data, but I believe its\n            // not relevant for restoring the selection state.\n            data: (name?: string, _operator?: any) => {\n              // Vega lite stores the selection state in a <param name>_store parameter\n              // under `data` that can be retrieved via the getState method.\n              // https://vega.github.io/vega/docs/api/view/#view_getState\n              return element.selectionMode.some(\n                mode => `${mode}_store` === name\n              )\n            },\n            // Don't include subcontext data since it will lead to exceptions\n            // when loading the state.\n            recurse: false,\n          })\n\n          if (notNullOrUndefined(viewState)) {\n            widgetMgr.setElementState(element.id, \"viewState\", viewState)\n          }\n\n          // If selection encodings are correctly specified, vega-lite will return\n          // a list of selected points within the vlPoint.or property:\n          // https://github.com/vega/altair/blob/f1b4e2c84da2fba220022c8a285cc8280f824ed8/altair/utils/selection.py#L50\n          // We want to just return this list of points instead of the entire object\n          // since the other parts of the selection object are not useful.\n          let processedSelection = value\n          if (\"vlPoint\" in value && \"or\" in value.vlPoint) {\n            processedSelection = value.vlPoint.or\n          }\n\n          // Get the current widget state\n          const currentWidgetState = JSON.parse(\n            widgetMgr.getStringValue(element as WidgetInfo) || \"{}\"\n          )\n\n          // Update the component-internal selection state\n          const updatedSelections = {\n            selection: {\n              ...(currentWidgetState?.selection || {}),\n              [name]: processedSelection || {},\n            } as VegaLiteState,\n          }\n\n          // Update the widget state if the selection state has changed\n          // compared to the last update. This selection state will be synced\n          // with the backend.\n          if (!isEqual(currentWidgetState, updatedSelections)) {\n            widgetMgr.setStringValue(\n              element as WidgetInfo,\n              JSON.stringify(updatedSelections),\n              {\n                fromUi: true,\n              },\n              this.props.fragmentId\n            )\n          }\n        })\n      )\n    })\n\n    /**\n     * Callback to reset the selection and update the widget state.\n     * This might also send the empty selection state to the backend.\n     */\n    const reset = (): void => {\n      const emptySelectionState: VegaLiteState = {\n        selection: {},\n      }\n      // Initialize all parameters defined in the selectionMode with an empty object.\n      this.props.element.selectionMode.forEach(param => {\n        emptySelectionState.selection[param] = {}\n      })\n      const currentWidgetStateStr = widgetMgr.getStringValue(\n        element as WidgetInfo\n      )\n      const currentWidgetState = currentWidgetStateStr\n        ? JSON.parse(currentWidgetStateStr)\n        : // If there wasn't any selection yet, the selection state\n          // is assumed to be empty.\n          emptySelectionState\n\n      if (!isEqual(currentWidgetState, emptySelectionState)) {\n        this.props.widgetMgr?.setStringValue(\n          this.props.element as WidgetInfo,\n          JSON.stringify(emptySelectionState),\n          {\n            fromUi: true,\n          },\n          this.props.fragmentId\n        )\n      }\n    }\n\n    // Add the form clear listener if we are in a form (formId defined)\n    if (this.props.element.formId) {\n      this.formClearHelper.manageFormClearListener(\n        this.props.widgetMgr,\n        this.props.element.formId,\n        reset\n      )\n    }\n  }\n\n  /**\n   * Create a new Vega view and add the data.\n   */\n  private async createView(): Promise<void> {\n    logMessage(\"Creating a new Vega view.\")\n\n    if (!this.element) {\n      throw Error(\"Element missing.\")\n    }\n\n    // Finalize the previous view so it can be garbage collected.\n    this.finalizeView()\n\n    const { element } = this.props\n    const spec = this.generateSpec()\n    const options = {\n      // Adds interpreter support for Vega expressions that is compliant with CSP\n      ast: true,\n      expr: expressionInterpreter,\n\n      // Disable default styles so that vega doesn't inject <style> tags in the\n      // DOM. We set these styles manually for finer control over them and to\n      // avoid inlining styles.\n      tooltip: { disableDefaultStyle: true },\n      defaultStyle: false,\n      forceActionsMenu: true,\n    }\n\n    const { vgSpec, view, finalize } = await embed(this.element, spec, options)\n\n    this.vegaView = view\n\n    this.maybeConfigureSelections()\n\n    this.vegaFinalizer = finalize\n\n    const datasets = getDataArrays(element)\n\n    // Heuristic to determine the default dataset name.\n    const datasetNames = datasets ? Object.keys(datasets) : []\n    if (datasetNames.length === 1) {\n      const [datasetName] = datasetNames\n      this.defaultDataName = datasetName\n    } else if (datasetNames.length === 0 && vgSpec.data) {\n      this.defaultDataName = DEFAULT_DATA_NAME\n    }\n\n    const dataObj = getInlineData(element)\n    if (dataObj) {\n      view.insert(this.defaultDataName, dataObj)\n    }\n    if (datasets) {\n      for (const [name, data] of Object.entries(datasets)) {\n        view.insert(name, data)\n      }\n    }\n\n    await view.runAsync()\n\n    // Fix bug where the \"...\" menu button overlaps with charts where width is\n    // set to -1 on first load.\n    this.vegaView.resize().runAsync()\n  }\n\n  public render(): JSX.Element {\n    if (this.state.error) {\n      // eslint-disable-next-line @typescript-eslint/no-throw-literal\n      throw this.state.error\n    }\n\n    return (\n      // Create the container Vega draws inside.\n      <StyledVegaLiteChartContainer\n        data-testid=\"stVegaLiteChart\"\n        className=\"stVegaLiteChart\"\n        useContainerWidth={this.props.element.useContainerWidth}\n        isFullScreen={this.props.isFullScreen}\n        ref={c => {\n          this.element = c\n        }}\n      />\n    )\n  }\n}\n\nexport default withTheme(withFullScreenWrapper(ArrowVegaLiteChart))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport interface StyledFullScreenButtonProps {\n  isExpanded: boolean\n}\n\nexport const StyledFullScreenButton =\n  styled.button<StyledFullScreenButtonProps>(({ isExpanded, theme }) => {\n    const variableProps = isExpanded\n      ? {\n          right: \"0.4rem\",\n          top: \"0.5rem\",\n          backgroundColor: \"transparent\",\n        }\n      : {\n          right: \"-3.0rem\",\n          top: \"-0.375rem\",\n          opacity: 0,\n          transform: \"scale(0)\",\n          backgroundColor: theme.colors.lightenedBg05,\n        }\n\n    return {\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n\n      zIndex: theme.zIndices.sidebar + 1,\n      height: \"2.5rem\",\n      width: \"2.5rem\",\n      transition: \"opacity 300ms 150ms, transform 300ms 150ms\",\n      border: \"none\",\n      color: theme.colors.fadedText60,\n      borderRadius: \"50%\",\n\n      ...variableProps,\n\n      \"&:focus\": {\n        outline: \"none\",\n      },\n\n      \"&:active, &:focus-visible, &:hover\": {\n        opacity: 1,\n        outline: \"none\",\n        transform: \"scale(1)\",\n        color: theme.colors.bodyText,\n        transition: \"none\",\n      },\n    }\n  })\n\nexport interface StyledFullScreenFrameProps {\n  isExpanded: boolean\n}\n\nexport const StyledFullScreenFrame = styled.div<StyledFullScreenFrameProps>(\n  ({ theme, isExpanded }) => ({\n    \"&:hover\": {\n      [StyledFullScreenButton as any]: {\n        opacity: 1,\n        transform: \"scale(1)\",\n        transition: \"none\",\n      },\n    },\n\n    ...(isExpanded\n      ? {\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          background: theme.colors.bgColor,\n          zIndex: theme.zIndices.fullscreenWrapper,\n          padding: theme.spacing.md,\n          paddingTop: theme.sizes.fullScreenHeaderHeight,\n          overflow: [\"auto\", \"overlay\"],\n          display: \"flex\", // To avoid extra spaces that lead to scrollbars.\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }\n      : {}),\n  })\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PureComponent } from \"react\"\n\nimport { withTheme } from \"@emotion/react\"\nimport { FullscreenEnter, FullscreenExit } from \"@emotion-icons/open-iconic\"\n\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport { LibContext } from \"@streamlit/lib/src/components/core/LibContext\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nimport {\n  StyledFullScreenButton,\n  StyledFullScreenFrame,\n} from \"./styled-components\"\n\nexport type Size = {\n  width: number\n  expanded: boolean\n  height?: number\n  expand: () => void\n  collapse: () => void\n}\n\n/*\n * Function responsible for rendering children.\n * This function should implement the following signature:\n * ({ height, width }) => PropTypes.element\n */\nexport interface FullScreenWrapperProps {\n  children: (props: Size) => React.ReactNode\n  width: number\n  height?: number\n  theme: EmotionTheme\n  disableFullscreenMode?: boolean\n}\n\ninterface State {\n  expanded: boolean\n  fullWidth: number\n  fullHeight: number\n}\n\n/*\n * A component that draws a button on the top right of the\n * wrapper element. OnClick, change the element container\n * to fixed and cover all screen, updating wrapped element height and width\n */\nclass FullScreenWrapper extends PureComponent<FullScreenWrapperProps, State> {\n  public context!: React.ContextType<typeof LibContext>\n\n  public static contextType = LibContext\n\n  public constructor(props: FullScreenWrapperProps) {\n    super(props)\n    this.state = {\n      expanded: false,\n      ...this.getWindowDimensions(),\n    }\n  }\n\n  public componentDidMount(): void {\n    window.addEventListener(\"resize\", this.updateWindowDimensions)\n    document.addEventListener(\"keydown\", this.controlKeys, false)\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n    document.removeEventListener(\"keydown\", this.controlKeys, false)\n  }\n\n  private controlKeys = (event: any): void => {\n    const { expanded } = this.state\n\n    if (event.keyCode === 27 && expanded) {\n      // Exit fullscreen\n      this.zoomOut()\n    }\n  }\n\n  private zoomIn = (): void => {\n    document.body.style.overflow = \"hidden\"\n    this.context.setFullScreen(true)\n    this.setState({ expanded: true })\n  }\n\n  private zoomOut = (): void => {\n    document.body.style.overflow = \"unset\"\n    this.context.setFullScreen(false)\n    this.setState({ expanded: false })\n  }\n\n  private convertScssRemValueToPixels = (scssValue: string): number => {\n    const remValue = parseFloat(scssValue)\n    return (\n      remValue *\n      parseFloat(getComputedStyle(document.documentElement).fontSize)\n    )\n  }\n\n  private getWindowDimensions = (): Pick<\n    State,\n    \"fullWidth\" | \"fullHeight\"\n  > => {\n    const padding = this.convertScssRemValueToPixels(\n      this.props.theme.spacing.md\n    )\n    const paddingTop = this.convertScssRemValueToPixels(\n      this.props.theme.sizes.fullScreenHeaderHeight\n    )\n\n    return {\n      fullWidth: window.innerWidth - padding * 2, // Left and right\n      fullHeight: window.innerHeight - (padding + paddingTop), // Bottom and Top\n    }\n  }\n\n  private updateWindowDimensions = (): void => {\n    this.setState(this.getWindowDimensions())\n  }\n\n  public render(): JSX.Element {\n    const { expanded, fullWidth, fullHeight } = this.state\n    const { children, width, height, disableFullscreenMode } = this.props\n\n    let buttonImage = FullscreenEnter\n    let buttonOnClick = this.zoomIn\n    let buttonTitle = \"View fullscreen\"\n\n    if (expanded) {\n      buttonImage = FullscreenExit\n      buttonOnClick = this.zoomOut\n      buttonTitle = \"Exit fullscreen\"\n    }\n\n    return (\n      <StyledFullScreenFrame\n        isExpanded={expanded}\n        data-testid=\"stFullScreenFrame\"\n      >\n        {!disableFullscreenMode && (\n          <StyledFullScreenButton\n            data-testid=\"StyledFullScreenButton\"\n            onClick={buttonOnClick}\n            title={buttonTitle}\n            isExpanded={expanded}\n          >\n            <Icon content={buttonImage} />\n          </StyledFullScreenButton>\n        )}\n        {expanded\n          ? children({\n              width: fullWidth,\n              height: fullHeight,\n              expanded,\n              expand: this.zoomIn,\n              collapse: this.zoomOut,\n            })\n          : children({\n              width,\n              height,\n              expanded,\n              expand: this.zoomIn,\n              collapse: this.zoomOut,\n            })}\n      </StyledFullScreenFrame>\n    )\n  }\n}\n\nexport default withTheme(FullScreenWrapper)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ComponentType, PureComponent, ReactNode } from \"react\"\n\nimport hoistNonReactStatics from \"hoist-non-react-statics\"\n\nimport FullScreenWrapper from \"./FullScreenWrapper\"\n\nexport interface Props {\n  width: number\n  height?: number\n  disableFullscreenMode?: boolean\n}\n\n// Our wrapper takes the wrapped component's props, plus \"width\", \"height?\".\n// It will pass \"isFullScreen\" to the wrapped component automatically\n// (but the wrapped component is free to ignore that prop).\ntype WrapperProps<P> = Omit<P & Props, \"isFullScreen\" | \"collapse\" | \"expand\">\n\nfunction withFullScreenWrapper<P>(\n  WrappedComponent: ComponentType<React.PropsWithChildren<P>>,\n  forceDisableFullScreenMode = false\n): ComponentType<React.PropsWithChildren<WrapperProps<P>>> {\n  class ComponentWithFullScreenWrapper extends PureComponent<WrapperProps<P>> {\n    public static readonly displayName = `withFullScreenWrapper(${\n      WrappedComponent.displayName || WrappedComponent.name\n    })`\n\n    public render = (): ReactNode => {\n      const { width, height, disableFullscreenMode } = this.props\n\n      return (\n        <FullScreenWrapper\n          width={width}\n          height={height}\n          disableFullscreenMode={\n            forceDisableFullScreenMode || disableFullscreenMode\n          }\n        >\n          {({ width, height, expanded, expand, collapse }) => (\n            // `(this.props as P)` is required due to a TS bug:\n            // https://github.com/microsoft/TypeScript/issues/28938#issuecomment-450636046\n            <WrappedComponent\n              {...(this.props as P)}\n              width={width}\n              height={height}\n              isFullScreen={expanded}\n              expand={expand}\n              collapse={collapse}\n            />\n          )}\n        </FullScreenWrapper>\n      )\n    }\n  }\n\n  // Static methods must be copied over\n  // https://en.reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  return hoistNonReactStatics(ComponentWithFullScreenWrapper, WrappedComponent)\n}\n\nexport default withFullScreenWrapper\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEffect } from \"react\"\n\nimport { SignalConnection } from \"typed-signals\"\n\nimport {\n  isValidFormId,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\n\nexport class FormClearHelper {\n  private formClearListener?: SignalConnection\n\n  private lastWidgetMgr?: WidgetStateManager\n\n  private lastFormId?: string\n\n  /**\n   * Register the listener that will be called when the widget's form is cleared.\n   * This should be called in the `render` function of every class-based widget\n   * element - it mimics the behavior of a `useEffect` hook, and ensures that\n   * subscription and unsubscription happen correctly.\n   *\n   * Hooks-based widgets can just use `useEffect` and call\n   * `widgetMgr.addFormClearedListener` directly. Or just use the convenient\n   * hook `useFormClearHelper`, below.\n   */\n  public manageFormClearListener(\n    widgetMgr: WidgetStateManager,\n    formId: string,\n    listener: () => void\n  ): void {\n    // If we're already subscribed and our params haven't changed, early-out.\n    if (\n      notNullOrUndefined(this.formClearListener) &&\n      this.lastWidgetMgr === widgetMgr &&\n      this.lastFormId === formId\n    ) {\n      return\n    }\n\n    // Close our previous subscription, if we had one.\n    this.disconnect()\n\n    // If we're not part of a form, there's nothing to do.\n    if (!isValidFormId(formId)) {\n      return\n    }\n\n    // Make the new subscription.\n    this.formClearListener = widgetMgr.addFormClearedListener(formId, listener)\n    this.lastWidgetMgr = widgetMgr\n    this.lastFormId = formId\n  }\n\n  /**\n   * Disconnect from the form-clear signal, if we're connected.\n   * This should be called from the `componentWillUnmount` function of every\n   * element that uses it.\n   */\n  public disconnect(): void {\n    this.formClearListener?.disconnect()\n    this.formClearListener = undefined\n    this.lastWidgetMgr = undefined\n    this.lastFormId = undefined\n  }\n}\n\ninterface FormElementProtoInterface {\n  formId: string\n}\n\ninterface FormClearHelperArgs {\n  element: FormElementProtoInterface\n  widgetMgr: WidgetStateManager\n  onFormCleared: () => void\n}\n\nexport function useFormClearHelper({\n  element,\n  widgetMgr,\n  onFormCleared,\n}: FormClearHelperArgs): void {\n  useEffect(() => {\n    if (!isValidFormId(element.formId)) {\n      return\n    }\n\n    const formClearListener = widgetMgr.addFormClearedListener(\n      element.formId,\n      onFormCleared\n    )\n\n    return () => {\n      formClearListener.disconnect()\n    }\n  }, [element, widgetMgr, onFormCleared])\n}\n"],"names":["MagicFields","DATAFRAME_INDEX","SUPPORTED_INDEX_TYPES","Set","IndexTypeName","getDataSets","el","_el$datasets","datasets","length","forEach","x","name","hasName","data","getDataArray","dataProto","startIndex","arguments","undefined","isEmpty","dataArr","dataRows","rows","dataColumns","cols","dimensions","indexType","Quiver","types","index","hasSupportedIndex","has","rowIndex","row","indexValue","getIndexValue","Number","colIndex","dataValue","getDataValue","dataType","typeName","Date","isFinite","startsWith","offset","getTimezoneOffset","columns","valueOf","push","applyStreamlitTheme","config","theme","streamlitTheme","font","genericFonts","bodyFont","background","colors","bgColor","fieldTitle","autosize","type","contains","title","align","anchor","color","headingColor","titleFontStyle","fontWeight","fontWeights","bold","fontSize","fontSizes","smPx","orient","header","titleFontWeight","normal","titleFontSize","mdPx","titleColor","getGray70","labelFontSize","twoSmPx","labelFontWeight","labelColor","labelFontStyle","axis","ticks","gridColor","getGray30","domain","domainWidth","domainColor","labelFlush","labelFlushOffset","labelBound","labelLimit","titlePadding","spacing","lgPx","labelPadding","labelSeparation","twoXSPx","labelOverlap","legend","columnPadding","rowPadding","padding","symbolStrokeWidth","range","category","getCategoricalColorsArray","diverging","getDivergingColorsArray","ramp","getSequentialColorsArray","heatmap","view","strokeWidth","stroke","continuousHeight","continuousWidth","concat","facet","mark","tooltip","hasLightBackgroundColor","bar","binSpacing","discreteBandSize","band","axisDiscrete","grid","axisXPoint","axisTemporal","axisXBand","mergeWith","_","b","Array","isArray","StyledVegaLiteChartContainer","_styled","target","_ref","useContainerWidth","isFullScreen","width","height","paddingRight","zIndex","zIndices","popupMenu","backgroundColor","boxShadow","border","sizes","borderWidth","fadedText10","a","fontFamily","md","margin","twoXS","twoXL","bodyText","secondaryBg","content","summary","opacity","menuButton","borderRadius","radii","default","transition","darkenedBgMix25","DEFAULT_DATA_NAME","ArrowVegaLiteChart","PureComponent","constructor","vegaView","vegaFinalizer","defaultDataName","element","formClearHelper","FormClearHelper","state","error","finalizeView","this","generateSpec","_spec$usermeta","_spec$usermeta$embedO","props","spec","JSON","parse","vegaLiteTheme","usermeta","embedOptions","themeFonts","labelFont","titleFont","themeDefaults","subtitleColor","merge","applyThemeDefaults","vconcat","child","isNullOrUndefined","bottom","Error","selectionMode","params","param","includes","select","encodings","Object","keys","encoding","prepareSpecForSelections","maybeConfigureSelections","widgetMgr","id","viewState","getElementState","notNullOrUndefined","setState","e","logWarning","_index","_this$vegaView","addSignalListener","debounce","value","_this$vegaView2","getState","_operator","some","mode","recurse","setElementState","processedSelection","vlPoint","or","currentWidgetState","getStringValue","updatedSelections","selection","isEqual","setStringValue","stringify","fromUi","fragmentId","reset","emptySelectionState","currentWidgetStateStr","_this$props$widgetMgr","formId","manageFormClearListener","componentDidMount","createView","ensureError","componentWillUnmount","componentDidUpdate","prevProps","prevElement","prevTheme","prevSpec","logMessage","prevData","updateData","prevDataSets","dataSets","dataset","entries","datasetName","prevDataset","hasOwnProperty","resize","runAsync","numRows","remove","vega","insert","prevNumRows","prevNumCols","numCols","c","r","dataIsAnAppendOfPrev","options","ast","expr","expressionInterpreter","disableDefaultStyle","defaultStyle","forceActionsMenu","vgSpec","finalize","embed","datasetArrays","getDataArrays","datasetNames","dataObj","getInlineData","render","_jsx","className","ref","withTheme","withFullScreenWrapper","StyledFullScreenButton","isExpanded","variableProps","right","top","transform","lightenedBg05","position","display","alignItems","justifyContent","sidebar","fadedText60","outline","StyledFullScreenFrame","_ref2","left","fullscreenWrapper","paddingTop","fullScreenHeaderHeight","overflow","FullScreenWrapper","super","context","controlKeys","event","expanded","keyCode","zoomOut","zoomIn","document","body","style","setFullScreen","convertScssRemValueToPixels","scssValue","parseFloat","getComputedStyle","documentElement","getWindowDimensions","fullWidth","window","innerWidth","fullHeight","innerHeight","updateWindowDimensions","addEventListener","removeEventListener","children","disableFullscreenMode","buttonImage","FullscreenEnter","buttonOnClick","buttonTitle","FullscreenExit","_jsxs","onClick","Icon","expand","collapse","contextType","LibContext","WrappedComponent","forceDisableFullScreenMode","ComponentWithFullScreenWrapper","displayName","hoistNonReactStatics","formClearListener","lastWidgetMgr","lastFormId","listener","disconnect","isValidFormId","addFormClearedListener","_this$formClearListen","useFormClearHelper","onFormCleared","useEffect"],"sourceRoot":""}