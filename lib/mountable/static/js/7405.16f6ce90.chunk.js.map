{"version":3,"file":"static/js/7405.16f6ce90.chunk.js","mappings":"2KAoBO,MAAMA,GAAoBC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,EAAWE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAC1DE,cAAeD,EAAME,QAAQC,GAC7BC,WAAY,SACZC,OAAOC,EAAAA,EAAAA,IAAUN,GAClB,GAAC,I,0BCgBF,QAZA,SAAiBD,GAA6D,IAA5D,QAAEQ,EAAO,MAAEC,GAAgCT,EAC3D,OACEU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAa,cAAY,aAAYC,SAAA,EAClDC,EAAAA,EAAAA,KAAChB,EAAiB,CAAAe,UAChBC,EAAAA,EAAAA,KAACC,EAAAA,GAAiB,CAACC,OAAQP,EAAQQ,KAAMC,WAAW,EAAOC,SAAO,OAGpEL,EAAAA,EAAAA,KAACM,EAAAA,EAAW,CAACC,MAAOZ,EAAQY,MAAOX,MAAOA,MAGhD,C,4HCTO,IAAKY,EAAI,SAAJA,GAAI,OAAJA,EAAI,gBAAJA,EAAI,WAAJA,EAAI,YAAJA,EAAI,WAAJA,EAAI,gBAAJA,CAAI,MA4EhB,QA7DA,SAAoBrB,GAKgB,IALf,MACnBoB,EAAK,MACLX,EAAK,KACLa,EAAOD,EAAKE,MAAK,UACjBC,GACiBxB,EACjB,MAAMC,GAAsBwB,EAAAA,EAAAA,KACtBC,EAAY,CAChBC,GAAI1B,EAAME,QAAQyB,MAClBxB,GAAIH,EAAME,QAAQC,GAClByB,GAAI5B,EAAME,QAAQ2B,GAClBA,GAAI7B,EAAME,QAAQ4B,GAClBA,GAAI9B,EAAME,QAAQ6B,QAEd,YAAEC,GAAgBC,EAAAA,WAAiBC,EAAAA,GACnCC,IAAoBC,EAAAA,EAAAA,IAAcJ,GAClCK,EAAoD,CACxDC,aAAc,CACZC,MAAO,CACLC,UAAWxC,EAAME,QAAQuC,KACzBC,aAAc1C,EAAME,QAAQuC,KAC5BE,YAAa3C,EAAME,QAAQuC,KAC3BG,WAAY5C,EAAME,QAAQuC,OAG9BI,IAAK,CACHN,MAAOO,IAAA,IAAC,OAAEC,GAAyBD,EAAA,MAAM,CACvCtC,MAAOA,EAAQA,EAAMwC,gBAAaC,EAClCT,UAAWxC,EAAME,QAAQuC,KACzBC,aAAc1C,EAAME,QAAQuC,KAC5BE,YAAa3C,EAAME,QAAQuC,KAC3BG,WAAY5C,EAAME,QAAQuC,KAC1BS,OAAQzB,EAAUJ,GAClB8B,gBAAiBJ,EAAOK,OAAOC,qBAC/BC,oBAAqBtD,EAAME,QAAQyB,MACnC4B,qBAAsBvD,EAAME,QAAQyB,MACpC6B,uBAAwBxD,EAAME,QAAQyB,MACtC8B,wBAAyBzD,EAAME,QAAQyB,MACxC,GAEH+B,YAAa,CACXnB,MAAOA,KAAA,CACLY,gBAAiBhB,EACbnC,EAAMoD,OAAOO,QACb3D,EAAMoD,OAAOQ,OACjBN,oBAAqBtD,EAAME,QAAQyB,MACnC4B,qBAAsBvD,EAAME,QAAQyB,MACpC6B,uBAAwBxD,EAAME,QAAQyB,MACtC8B,wBAAyBzD,EAAME,QAAQyB,UAK7C,OACEf,EAAAA,EAAAA,KAACiD,EAAAA,EAAa,CACZ1C,MAAOA,EACPI,WAAWuC,EAAAA,EAAAA,IAAezB,EAAkBd,IAGlD,C","sources":["../../../streamlit/frontend/lib/src/components/elements/Progress/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/Progress/Progress.tsx","../../../streamlit/frontend/lib/src/components/shared/ProgressBar/ProgressBar.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nimport { getGray90 } from \"@streamlit/lib/src/theme\"\n\nexport const StyledCaptionText = styled.div(({ theme }) => ({\n  paddingBottom: theme.spacing.sm,\n  lineHeight: \"normal\",\n  color: getGray90(theme),\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { Progress as ProgressProto } from \"@streamlit/lib/src/proto\"\nimport ProgressBar from \"@streamlit/lib/src/components/shared/ProgressBar\"\nimport { StyledCaptionText } from \"@streamlit/lib/src/components/elements/Progress/styled-components\"\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown\"\n\nexport interface ProgressProps {\n  width: number\n  element: ProgressProto\n}\n\nfunction Progress({ element, width }: Readonly<ProgressProps>): ReactElement {\n  return (\n    <div className=\"stProgress\" data-testid=\"stProgress\">\n      <StyledCaptionText>\n        <StreamlitMarkdown source={element.text} allowHTML={false} isLabel />\n      </StyledCaptionText>\n\n      <ProgressBar value={element.value} width={width} />\n    </div>\n  )\n}\n\nexport default Progress\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { useTheme } from \"@emotion/react\"\nimport {\n  ProgressBarOverrides,\n  ProgressBar as UIProgressBar,\n} from \"baseui/progress-bar\"\nimport { mergeOverrides } from \"baseui\"\nimport { Overrides } from \"baseui/overrides\"\n\nimport { EmotionTheme, isPresetTheme } from \"@streamlit/lib/src/theme\"\nimport { LibContext } from \"@streamlit/lib/src/components/core/LibContext\"\n\nexport enum Size {\n  EXTRASMALL = \"xs\",\n  SMALL = \"sm\",\n  MEDIUM = \"md\",\n  LARGE = \"lg\",\n  EXTRALARGE = \"xl\",\n}\n\nexport interface ProgressBarProps {\n  width?: number\n  value: number\n  overrides?: Overrides<any>\n  size?: Size\n}\n\nfunction ProgressBar({\n  value,\n  width,\n  size = Size.SMALL,\n  overrides,\n}: ProgressBarProps): ReactElement {\n  const theme: EmotionTheme = useTheme()\n  const heightMap = {\n    xs: theme.spacing.twoXS,\n    sm: theme.spacing.sm,\n    md: theme.spacing.lg,\n    lg: theme.spacing.xl,\n    xl: theme.spacing.twoXL,\n  }\n  const { activeTheme } = React.useContext(LibContext)\n  const usingCustomTheme = !isPresetTheme(activeTheme)\n  const defaultOverrides: Overrides<ProgressBarOverrides> = {\n    BarContainer: {\n      style: {\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n      },\n    },\n    Bar: {\n      style: ({ $theme }: { $theme: any }) => ({\n        width: width ? width.toString() : undefined,\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n        height: heightMap[size],\n        backgroundColor: $theme.colors.progressbarTrackFill,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n    BarProgress: {\n      style: () => ({\n        backgroundColor: usingCustomTheme\n          ? theme.colors.primary\n          : theme.colors.blue70,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n  }\n\n  return (\n    <UIProgressBar\n      value={value}\n      overrides={mergeOverrides(defaultOverrides, overrides)}\n    />\n  )\n}\n\nexport default ProgressBar\n"],"names":["StyledCaptionText","_styled","target","_ref","theme","paddingBottom","spacing","sm","lineHeight","color","getGray90","element","width","_jsxs","className","children","_jsx","StreamlitMarkdown","source","text","allowHTML","isLabel","ProgressBar","value","Size","size","SMALL","overrides","useTheme","heightMap","xs","twoXS","md","lg","xl","twoXL","activeTheme","React","LibContext","usingCustomTheme","isPresetTheme","defaultOverrides","BarContainer","style","marginTop","none","marginBottom","marginRight","marginLeft","Bar","_ref2","$theme","toString","undefined","height","backgroundColor","colors","progressbarTrackFill","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BarProgress","primary","blue70","UIProgressBar","mergeOverrides"],"sourceRoot":""}