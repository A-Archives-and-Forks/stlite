{"version":3,"sources":["../../../streamlit/frontend/src/components/shared/ProgressBar/ProgressBar.tsx","../../../streamlit/frontend/src/components/widgets/FileUploader/UploadFileInfo.ts","../../../streamlit/frontend/src/components/widgets/CameraInput/styled-components.ts","../../../streamlit/frontend/src/components/widgets/CameraInput/CameraInputButton.tsx","../../../streamlit/frontend/src/components/widgets/CameraInput/SwitchFacingModeButton.tsx","../../../streamlit/frontend/src/components/widgets/CameraInput/WebcamComponent.tsx","../../../streamlit/frontend/src/components/widgets/CameraInput/CameraInput.tsx"],"names":["Size","ProgressBar","value","width","size","SMALL","overrides","theme","useTheme","heightMap","xs","spacing","twoXS","sm","md","lg","xl","twoXL","activeTheme","React","useContext","AppContext","usingCustomTheme","isPresetTheme","defaultOverrides","BarContainer","style","marginTop","none","marginBottom","marginRight","marginLeft","Bar","$theme","toString","undefined","height","backgroundColor","colors","progressbarTrackFill","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BarProgress","primary","blue70","mergeOverrides","UploadFileInfo","name","id","status","this","StyledCameraInput","position","overflow","objectFit","StyledBox","secondaryBg","borderRadius","radii","display","flexDirection","justifyContent","alignItems","StyledDescription","textAlign","StyledImg","opacity","StyledLink","color","textDecoration","StyledSpan","StyledSwitchFacingModeButton","top","right","zIndex","fadedText40","mixBlendMode","StyledProgressBar","bottom","StyledCameraInputBaseButton","lightenedBg05","border","fadedText10","borderColor","white","fontWeight","fontWeights","normal","padding","margin","lineHeight","lineHeights","base","userSelect","boxShadow","transparentize","outline","XSMALL","fontSize","fontSizes","LARGE","getSizeStyle","MEDIUM","CameraInputButton","FacingMode","disabled","onClick","children","progress","data-testid","ProgressBarSize","EXTRASMALL","WebcamPermission","SwitchFacingModeButton","switchFacingMode","Tooltip","content","placement","Placement","TOP_RIGHT","Button","kind","Kind","MINIMAL","Icon","SwitchCamera","themeColors","AskForCameraPermission","gray60","Video","href","CAMERA_PERMISSION_URL","rel","target","WebcamComponent","handleCapture","clearPhotoInProgress","setClearPhotoInProgress","facingMode","setFacingMode","useState","PENDING","webcamPermission","setWebcamPermissionState","videoRef","useRef","debouncedWidth","setDebouncedWidth","memoizedSetDebouncedCallback","useCallback","debounce","useEffect","SUCCESS","isMobile","hidden","audio","ref","screenshotFormat","screenshotQuality","onUserMediaError","ERROR","onUserMedia","videoConstraints","ideal","current","imageSrc","getScreenshot","CameraInput","props","localFileIdCounter","RESTORED_FROM_WIDGET_STRING","formClearHelper","FormClearHelper","getProgress","state","files","length","type","setState","prevState","USER","ENVIRONMENT","imgSrc","Promise","resolve","shutter","minShutterEffectPassed","url","filename","Date","toISOString","replace","fetch","then","res","arrayBuffer","buf","File","file","uploadFile","t","setTimeout","_","catch","err","logError","removeCapture","forEach","deleteFile","componentDidUpdate","prevProps","element","widgetMgr","reset","setFileUploaderStateValue","FileUploaderStateProto","fromUi","newWidgetValue","createWidgetValue","prevWidgetValue","getFileUploaderStateValue","isEqual","onFormCleared","fileId","getFile","cancelToken","cancel","removeFile","addFile","idToRemove","filter","find","updateFile","curFileId","newFile","curState","map","onUploadComplete","localFileId","serverFileId","newestServerFileId","Math","max","curFile","setStatus","onUploadProgress","event","newProgress","round","loaded","total","axios","CancelToken","source","uploadingFileInfo","nextLocalFileId","uploadClient","e","token","newFileId","isCancel","errorMessage","initialValue","emptyState","widgetValue","maxFileId","uploadedFileInfo","f","Number","disconnect","some","UploadedFileInfoProto","manageFormClearListener","formId","className","label","labelVisibility","labelVisibilityProtoValueToEnum","help","TooltipIcon","src","alt","X","PureComponent"],"mappings":"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","file":"static/js/23.fcb785e0.chunk.js","sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { useTheme } from \"@emotion/react\"\nimport AppContext from \"src/components/core/AppContext\"\nimport { Theme, isPresetTheme } from \"src/theme\"\nimport {\n  ProgressBar as UIProgressBar,\n  ProgressBarOverrides,\n} from \"baseui/progress-bar\"\nimport { mergeOverrides } from \"baseui\"\nimport { Overrides } from \"baseui/overrides\"\n\nexport enum Size {\n  EXTRASMALL = \"xs\",\n  SMALL = \"sm\",\n  MEDIUM = \"md\",\n  LARGE = \"lg\",\n  EXTRALARGE = \"xl\",\n}\n\nexport interface ProgressBarProps {\n  width?: number\n  value: number\n  overrides?: Overrides<any>\n  size?: Size\n}\n\nfunction ProgressBar({\n  value,\n  width,\n  size = Size.SMALL,\n  overrides,\n}: ProgressBarProps): ReactElement {\n  const theme: Theme = useTheme()\n  const heightMap = {\n    xs: theme.spacing.twoXS,\n    sm: theme.spacing.sm,\n    md: theme.spacing.lg,\n    lg: theme.spacing.xl,\n    xl: theme.spacing.twoXL,\n  }\n  const { activeTheme } = React.useContext(AppContext)\n  const usingCustomTheme = !isPresetTheme(activeTheme)\n  const defaultOverrides: Overrides<ProgressBarOverrides> = {\n    BarContainer: {\n      style: {\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n      },\n    },\n    Bar: {\n      style: ({ $theme }: { $theme: any }) => ({\n        width: width ? width.toString() : undefined,\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n        height: heightMap[size],\n        backgroundColor: $theme.colors.progressbarTrackFill,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n    BarProgress: {\n      style: ({ $theme }: { $theme: any }) => ({\n        backgroundColor: usingCustomTheme\n          ? theme.colors.primary\n          : theme.colors.blue70,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n  }\n\n  return (\n    <UIProgressBar\n      value={value}\n      overrides={mergeOverrides(defaultOverrides, overrides)}\n    />\n  )\n}\n\nexport default ProgressBar\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CancelTokenSource } from \"axios\"\n\nexport interface UploadingStatus {\n  type: \"uploading\"\n  cancelToken: CancelTokenSource\n  progress: number\n}\n\nexport interface UploadedStatus {\n  type: \"uploaded\"\n\n  /** ID generated by the server. */\n  serverFileId: number\n}\n\nexport interface ErrorStatus {\n  type: \"error\"\n  errorMessage: string\n}\n\n/** The various statuses that an UploadedFileInfo can have. */\nexport type FileStatus = UploadingStatus | UploadedStatus | ErrorStatus\n\n/**\n * Wraps a File object with additional data used by FileUploader.\n * This class is immutable because it's used in within FileUploader.state.\n */\nexport class UploadFileInfo {\n  public readonly name: string\n\n  public readonly size: number\n\n  public readonly status: FileStatus\n\n  /**\n   * ID used to refer to the file locally, for update operations.\n   * If the file is uploaded, it will also have a serverID, which is\n   * used to refer to the file on the server.\n   */\n  public readonly id: number\n\n  /**\n   * Create a clone of this UploadFileInfo with the given status.\n   */\n  public setStatus(status: FileStatus): UploadFileInfo {\n    return new UploadFileInfo(this.name, this.size, this.id, status)\n  }\n\n  public constructor(\n    name: string,\n    size: number,\n    id: number,\n    status: FileStatus\n  ) {\n    this.name = name\n    this.size = size\n    this.id = id\n    this.status = status\n  }\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled, { CSSObject } from \"@emotion/styled\"\nimport { transparentize } from \"color2k\"\nimport { MouseEvent, ReactNode } from \"react\"\nimport { Theme } from \"src/theme\"\n\nexport interface CameraInputButtonProps {\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => any\n  disabled?: boolean\n  children: ReactNode\n  progress?: number | null\n}\n\nexport interface StyledCameraInputProps {\n  width: number\n}\n\nenum Size {\n  XSMALL = \"xsmall\",\n  SMALL = \"small\",\n  MEDIUM = \"medium\",\n  LARGE = \"large\",\n}\n\nfunction getSizeStyle(size: Size, theme: Theme): CSSObject {\n  switch (size) {\n    case Size.XSMALL:\n      return {\n        padding: `${theme.spacing.twoXS} ${theme.spacing.sm}`,\n        fontSize: theme.fontSizes.sm,\n      }\n    case Size.SMALL:\n      return {\n        padding: `${theme.spacing.twoXS} ${theme.spacing.md}`,\n      }\n    case Size.LARGE:\n      return {\n        padding: `${theme.spacing.md} ${theme.spacing.md}`,\n      }\n    default:\n      return {\n        padding: `${theme.spacing.xs} ${theme.spacing.md}`,\n      }\n  }\n}\n\ntype RequiredCameraInputButtonProps = Required<CameraInputButtonProps>\n\nexport const StyledCameraInput = styled.div<StyledCameraInputProps>(\n  ({ theme, width }) => ({\n    // This is used to position the \"Switch facing mode\" button\n    // with respect to the webcam block.\n    position: \"relative\",\n    overflow: \"hidden\",\n    width: \"100%\",\n    objectFit: \"contain\",\n  })\n)\n\nexport interface StyledBoxProps {\n  width: number\n}\n\nexport const StyledBox = styled.div<StyledBoxProps>(({ theme, width }) => ({\n  backgroundColor: theme.colors.secondaryBg,\n  borderRadius: `${theme.radii.md} ${theme.radii.md} 0 0`,\n  width: \"100%\",\n  height: (width * 9) / 16,\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}))\n\nexport const StyledDescription = styled.p(({ theme }) => ({\n  marginTop: theme.spacing.sm,\n  textAlign: \"center\",\n}))\n\nexport interface StyledImgProps {\n  opacity: string\n}\n\nexport const StyledImg = styled.img<StyledImgProps>(({ theme, opacity }) => ({\n  borderRadius: `${theme.radii.md} ${theme.radii.md} 0 0`,\n  objectFit: \"contain\",\n  opacity,\n}))\n\nexport const StyledLink = styled.a(({ theme }) => ({\n  color: theme.colors.primary,\n  display: \"block\",\n  textDecoration: \"none\",\n}))\n\nexport const StyledSpan = styled.span(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n}))\n\nexport const StyledSwitchFacingModeButton = styled.div(({ theme }) => ({\n  position: \"absolute\",\n  top: theme.spacing.lg,\n  right: theme.spacing.lg,\n  zIndex: 1,\n  color: theme.colors.fadedText40,\n  mixBlendMode: \"difference\",\n  opacity: 0.6,\n}))\n\nexport const StyledWebcamWrapper = styled.div(({ theme }) => ({\n  display: \"flex\",\n}))\n\nexport const StyledProgressBar = styled.div(({ theme }) => ({\n  height: \"fit-content\",\n  width: \"100%\",\n  position: \"absolute\",\n  bottom: 0,\n}))\n\nexport const StyledCameraInputBaseButton =\n  styled.button<RequiredCameraInputButtonProps>(({ theme }) => ({\n    position: \"relative\",\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: theme.colors.lightenedBg05,\n    border: `1px solid ${theme.colors.fadedText10}`,\n    borderRadius: `0 0 ${theme.radii.md} ${theme.radii.md}`,\n    \"&:hover\": {\n      borderColor: theme.colors.primary,\n      color: theme.colors.primary,\n    },\n    \"&:active\": {\n      color: theme.colors.white,\n      borderColor: theme.colors.primary,\n      backgroundColor: theme.colors.primary,\n    },\n    \"&:focus:not(:active)\": {\n      borderColor: theme.colors.primary,\n      color: theme.colors.primary,\n    },\n    \"&:disabled, &:disabled:hover, &:disabled:active\": {\n      color: theme.colors.fadedText40,\n    },\n    fontWeight: theme.fontWeights.normal,\n    padding: `${theme.spacing.xs} ${theme.spacing.md}`,\n    margin: 0,\n    lineHeight: theme.lineHeights.base,\n    color: \"inherit\",\n    width: \"100%\",\n    userSelect: \"none\",\n    \"&:focus\": {\n      boxShadow: `0 0 0 0.2rem ${transparentize(theme.colors.primary, 0.5)}`,\n      outline: \"none\",\n    },\n    ...getSizeStyle(Size.MEDIUM, theme),\n  }))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { MouseEvent, ReactElement, ReactNode } from \"react\"\n\nimport ProgressBar, {\n  Size as ProgressBarSize,\n} from \"src/components/shared/ProgressBar\"\nimport {\n  StyledCameraInputBaseButton,\n  StyledProgressBar,\n} from \"./styled-components\"\n\nexport interface CameraInputButtonProps {\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => any\n  disabled?: boolean\n  children: ReactNode\n  progress?: number | null\n}\n\nfunction CameraInputButton({\n  disabled,\n  onClick,\n  children,\n  progress,\n}: CameraInputButtonProps): ReactElement {\n  return (\n    <StyledCameraInputBaseButton\n      disabled={disabled || false}\n      onClick={onClick || (() => {})}\n      progress={progress || null}\n      data-testid=\"stCameraInputButton\"\n    >\n      {children}\n      {progress && (\n        <StyledProgressBar>\n          <ProgressBar\n            value={progress}\n            size={ProgressBarSize.EXTRASMALL}\n            overrides={{\n              Bar: {\n                style: {\n                  borderTopLeftRadius: \"0px\",\n                  borderTopRightRadius: \"0px\",\n                },\n              },\n              BarProgress: {\n                style: {\n                  borderTopLeftRadius: \"0px\",\n                  borderTopRightRadius: \"0px\",\n                },\n              },\n              BarContainer: {\n                style: {\n                  borderTopLeftRadius: \"0px\",\n                  borderTopRightRadius: \"0px\",\n                },\n              },\n            }}\n          />\n        </StyledProgressBar>\n      )}\n    </StyledCameraInputBaseButton>\n  )\n}\n\nexport default CameraInputButton\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { SwitchCamera } from \"@emotion-icons/material-rounded\"\n\nimport Button, { Kind } from \"src/components/shared/Button\"\nimport Icon from \"src/components/shared/Icon\"\nimport Tooltip, { Placement } from \"src/components/shared/Tooltip\"\nimport themeColors from \"src/theme/baseTheme/themeColors\"\nimport { StyledSwitchFacingModeButton } from \"./styled-components\"\n\nexport enum FacingMode {\n  USER = \"user\",\n  ENVIRONMENT = \"environment\",\n}\n\nexport interface SwitchFacingModeButtonProps {\n  switchFacingMode: () => void\n}\n\nconst SwitchFacingModeButton = ({\n  switchFacingMode,\n}: SwitchFacingModeButtonProps): ReactElement => {\n  return (\n    <StyledSwitchFacingModeButton>\n      <Tooltip content={\"Switch camera\"} placement={Placement.TOP_RIGHT}>\n        <Button kind={Kind.MINIMAL} onClick={switchFacingMode}>\n          <Icon\n            content={SwitchCamera}\n            size=\"twoXL\"\n            color={themeColors.white}\n          />\n        </Button>\n      </Tooltip>\n    </StyledSwitchFacingModeButton>\n  )\n}\n\nexport default SwitchFacingModeButton\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Video } from \"@emotion-icons/open-iconic\"\nimport { useTheme } from \"@emotion/react\"\nimport React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\nimport { isMobile } from \"react-device-detect\"\nimport Webcam from \"react-webcam\"\nimport { debounce } from \"src/lib/utils\"\n\nimport Icon from \"src/components/shared/Icon\"\nimport { Theme } from \"src/theme\"\nimport themeColors from \"src/theme/baseTheme/themeColors\"\nimport { CAMERA_PERMISSION_URL } from \"src/urls\"\n\nimport CameraInputButton from \"./CameraInputButton\"\nimport SwitchFacingModeButton, { FacingMode } from \"./SwitchFacingModeButton\"\nimport {\n  StyledBox,\n  StyledCameraInput,\n  StyledDescription,\n  StyledLink,\n} from \"./styled-components\"\n\nexport interface Props {\n  handleCapture: (capturedPhoto: string | null) => void\n  width: number\n  disabled: boolean\n  clearPhotoInProgress: boolean\n  setClearPhotoInProgress: (clearPhotoInProgress: boolean) => void\n  facingMode: FacingMode\n  setFacingMode: () => void\n}\n\nexport enum WebcamPermission {\n  PENDING = \"pending\",\n  SUCCESS = \"success\",\n  ERROR = \"error\",\n}\n\ninterface AskForCameraPermissionProps {\n  width: number\n}\n\nexport const AskForCameraPermission = ({\n  width,\n}: AskForCameraPermissionProps): ReactElement => {\n  return (\n    <StyledBox width={width}>\n      <Icon size=\"threeXL\" color={themeColors.gray60} content={Video} />\n      <StyledDescription>\n        This app would like to use your camera.\n        <StyledLink\n          href={CAMERA_PERMISSION_URL}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Learn how to allow access.\n        </StyledLink>\n      </StyledDescription>\n    </StyledBox>\n  )\n}\n\nconst WebcamComponent = ({\n  handleCapture,\n  width,\n  disabled,\n  clearPhotoInProgress,\n  setClearPhotoInProgress,\n  facingMode,\n  setFacingMode,\n}: Props): ReactElement => {\n  const [webcamPermission, setWebcamPermissionState] = useState(\n    WebcamPermission.PENDING\n  )\n  const videoRef = useRef<Webcam>(null)\n\n  const [debouncedWidth, setDebouncedWidth] = useState(width)\n  const memoizedSetDebouncedCallback = useCallback(\n    debounce(1000, setDebouncedWidth),\n    []\n  )\n\n  useEffect(() => {\n    memoizedSetDebouncedCallback(width)\n  }, [width])\n\n  function capture(): void {\n    if (videoRef.current !== null) {\n      const imageSrc = videoRef.current.getScreenshot()\n      handleCapture(imageSrc)\n    }\n  }\n\n  const theme: Theme = useTheme()\n\n  return (\n    <StyledCameraInput width={debouncedWidth}>\n      {webcamPermission !== WebcamPermission.SUCCESS &&\n      !disabled &&\n      !clearPhotoInProgress ? (\n        <AskForCameraPermission width={debouncedWidth} />\n      ) : (\n        isMobile && <SwitchFacingModeButton switchFacingMode={setFacingMode} />\n      )}\n      <StyledBox\n        hidden={\n          webcamPermission !== WebcamPermission.SUCCESS &&\n          !disabled &&\n          !clearPhotoInProgress\n        }\n        width={debouncedWidth}\n      >\n        {!disabled && (\n          <Webcam\n            audio={false}\n            ref={videoRef}\n            screenshotFormat=\"image/jpeg\"\n            screenshotQuality={1}\n            width={debouncedWidth}\n            // We keep Aspect ratio of container always equal 16 / 9.\n            // The aspect ration of video stream may be different depending on a camera.\n            height={(debouncedWidth * 9) / 16}\n            style={{\n              borderRadius: `${theme.radii.md} ${theme.radii.md} 0 0`,\n            }}\n            onUserMediaError={() => {\n              setWebcamPermissionState(WebcamPermission.ERROR)\n            }}\n            onUserMedia={() => {\n              setWebcamPermissionState(WebcamPermission.SUCCESS)\n              setClearPhotoInProgress(false)\n            }}\n            videoConstraints={{\n              width: { ideal: debouncedWidth },\n              facingMode,\n            }}\n          />\n        )}\n      </StyledBox>\n      <CameraInputButton\n        onClick={capture}\n        disabled={\n          webcamPermission !== WebcamPermission.SUCCESS ||\n          disabled ||\n          clearPhotoInProgress\n        }\n      >\n        Take Photo\n      </CameraInputButton>\n    </StyledCameraInput>\n  )\n}\n\nexport default WebcamComponent\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { X } from \"@emotion-icons/open-iconic\"\nimport axios from \"axios\"\nimport _ from \"lodash\"\nimport React from \"react\"\n\nimport {\n  CameraInput as CameraInputProto,\n  FileUploaderState as FileUploaderStateProto,\n  UploadedFileInfo as UploadedFileInfoProto,\n} from \"src/autogen/proto\"\nimport Icon from \"src/components/shared/Icon\"\nimport { Placement } from \"src/components/shared/Tooltip\"\nimport TooltipIcon from \"src/components/shared/TooltipIcon\"\nimport {\n  StyledWidgetLabelHelp,\n  WidgetLabel,\n} from \"src/components/widgets/BaseWidget\"\nimport { FormClearHelper } from \"src/components/widgets/Form\"\nimport { FileUploadClient } from \"src/lib/FileUploadClient\"\nimport { logError } from \"src/lib/log\"\nimport { WidgetStateManager } from \"src/lib/WidgetStateManager\"\nimport { labelVisibilityProtoValueToEnum } from \"src/lib/utils\"\nimport {\n  UploadedStatus,\n  UploadFileInfo,\n  UploadingStatus,\n} from \"src/components/widgets/FileUploader/UploadFileInfo\"\nimport CameraInputButton from \"./CameraInputButton\"\nimport { FacingMode } from \"./SwitchFacingModeButton\"\nimport {\n  StyledBox,\n  StyledCameraInput,\n  StyledSpan,\n  StyledImg,\n} from \"./styled-components\"\nimport WebcamComponent from \"./WebcamComponent\"\n\nexport interface Props {\n  element: CameraInputProto\n  widgetMgr: WidgetStateManager\n  uploadClient: FileUploadClient\n  disabled: boolean\n  width: number\n}\n\ntype FileUploaderStatus =\n  | \"ready\" // FileUploader can upload or delete files\n  | \"updating\" // at least one file is being uploaded or deleted\n\nexport interface State {\n  /**\n   * Base64-encoded image data of the current frame from the camera.\n   */\n  imgSrc: string | null\n\n  shutter: boolean\n\n  minShutterEffectPassed: boolean\n  /**\n   * List of files (snapshots) captured by the user.\n   * Should contain exact one element if the user has taken a snapshot.\n   */\n  files: UploadFileInfo[]\n\n  /**\n   * The most recent file ID we've received from the server. This gets sent\n   * back to the server during widget update so that it clean up\n   * orphaned files. File IDs start at 1 and only ever increase, so a\n   * file with a higher ID is guaranteed to be newer than one with a lower ID.\n   */\n  newestServerFileId: number\n\n  /**\n   * Represents whether the component is in clear photo mode,\n   * when snapshot removed and new Webcam component is not shown yet.\n   * Time interval between `Clear Photo` button clicked and access to Webcam received again\n   */\n  clearPhotoInProgress: boolean\n\n  /**\n   * User facing mode for mobile devices. If `user`, the camera will be facing the user (front camera).\n   * If `environment`, the camera will be facing the environment (back camera).\n   */\n  facingMode: FacingMode\n}\n\nconst MIN_SHUTTER_EFFECT_TIME_MS = 150\n\nclass CameraInput extends React.PureComponent<Props, State> {\n  private localFileIdCounter = 1\n\n  private RESTORED_FROM_WIDGET_STRING = \"RESTORED_FROM_WIDGET\"\n\n  private readonly formClearHelper = new FormClearHelper()\n\n  public constructor(props: Props) {\n    super(props)\n    this.state = this.initialValue\n  }\n\n  private getProgress = (): number | null | undefined => {\n    if (\n      this.state.files.length > 0 &&\n      this.state.files[this.state.files.length - 1].status.type === \"uploading\"\n    ) {\n      const status = this.state.files[this.state.files.length - 1]\n        .status as UploadingStatus\n      return status.progress\n    }\n    return undefined\n  }\n\n  private setClearPhotoInProgress = (clearPhotoInProgress: boolean): void => {\n    this.setState({ clearPhotoInProgress })\n  }\n\n  private setFacingMode = (): void => {\n    this.setState(prevState => ({\n      facingMode:\n        prevState.facingMode === FacingMode.USER\n          ? FacingMode.ENVIRONMENT\n          : FacingMode.USER,\n    }))\n  }\n\n  private handleCapture = (imgSrc: string | null): Promise<void> => {\n    if (imgSrc === null) {\n      return Promise.resolve()\n    }\n\n    this.setState({\n      imgSrc,\n      shutter: true,\n      minShutterEffectPassed: false,\n    })\n\n    const delay = (t: number): Promise<ReturnType<typeof setTimeout>> =>\n      new Promise(resolve => setTimeout(resolve, t))\n\n    const promise = urltoFile(\n      imgSrc,\n      `camera-input-${new Date().toISOString().replace(/:/g, \"_\")}.jpg`\n    )\n      .then(file => this.uploadFile(file))\n      .then(() => delay(MIN_SHUTTER_EFFECT_TIME_MS))\n      .then(() => {\n        this.setState((prevState, _) => {\n          return {\n            imgSrc,\n            shutter: prevState.shutter,\n            minShutterEffectPassed: true,\n          }\n        })\n      })\n      .catch(err => {\n        logError(err)\n      })\n\n    return promise\n  }\n\n  private removeCapture = (): void => {\n    if (this.state.files.length === 0) {\n      return\n    }\n\n    this.state.files.forEach(file => this.deleteFile(file.id))\n\n    this.setState({\n      imgSrc: null,\n      clearPhotoInProgress: true,\n    })\n  }\n\n  get initialValue(): State {\n    const emptyState = {\n      files: [],\n      newestServerFileId: 0,\n      imgSrc: null,\n      shutter: false,\n      minShutterEffectPassed: true,\n      clearPhotoInProgress: false,\n      facingMode: FacingMode.USER,\n    }\n    const { widgetMgr, element } = this.props\n\n    const widgetValue = widgetMgr.getFileUploaderStateValue(element)\n\n    if (widgetValue == null) {\n      return emptyState\n    }\n\n    const { maxFileId, uploadedFileInfo } = widgetValue\n    if (maxFileId == null || maxFileId === 0 || uploadedFileInfo == null) {\n      return emptyState\n    }\n\n    return {\n      files: uploadedFileInfo.map(f => {\n        const name = f.name as string\n        const size = f.size as number\n        const serverFileId = f.id as number\n\n        return new UploadFileInfo(name, size, this.nextLocalFileId(), {\n          type: \"uploaded\",\n          serverFileId,\n        })\n      }),\n      newestServerFileId: Number(maxFileId),\n      imgSrc:\n        uploadedFileInfo.length === 0 ? \"\" : this.RESTORED_FROM_WIDGET_STRING,\n      shutter: false,\n      minShutterEffectPassed: false,\n      clearPhotoInProgress: false,\n      facingMode: FacingMode.USER,\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  /**\n   * Return the FileUploader's current status, which is derived from\n   * its state.\n   */\n  public get status(): FileUploaderStatus {\n    const isFileUpdating = (file: UploadFileInfo): boolean =>\n      file.status.type === \"uploading\"\n\n    // If any of our files is Uploading or Deleting, then we're currently\n    // updating.\n    if (this.state.files.some(isFileUpdating)) {\n      return \"updating\"\n    }\n\n    return \"ready\"\n  }\n\n  public componentDidUpdate = (prevProps: Props): void => {\n    const { element, widgetMgr } = this.props\n\n    // Widgets are disabled if the app is not connected anymore.\n    // If the app disconnects from the server, a new session is created and users\n    // will lose access to the files they uploaded in their previous session.\n    // If we are reconnecting, reset the file uploader so that the widget is\n    // in sync with the new session.\n    if (prevProps.disabled !== this.props.disabled && this.props.disabled) {\n      this.reset()\n      widgetMgr.setFileUploaderStateValue(\n        element,\n        new FileUploaderStateProto(),\n        { fromUi: false }\n      )\n      return\n    }\n\n    // Maybe send a widgetValue update to the widgetStateManager.\n\n    // If our status is not \"ready\", then we have uploads in progress.\n    // We won't submit a new widgetValue until all uploads have resolved.\n    if (this.status !== \"ready\") {\n      return\n    }\n\n    // If we have had no completed uploads, our widgetValue will be\n    // undefined, and we can early-out of the state update.\n    const newWidgetValue = this.createWidgetValue()\n    if (newWidgetValue === undefined) {\n      return\n    }\n\n    const prevWidgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (!_.isEqual(newWidgetValue, prevWidgetValue)) {\n      widgetMgr.setFileUploaderStateValue(element, newWidgetValue, {\n        fromUi: true,\n      })\n    }\n  }\n\n  /**\n   * When the server receives the widget value, it deletes \"orphaned\" uploaded\n   * files. An orphaned file is any file, associated with this uploader,\n   * whose file ID is not in the file ID list, and whose\n   * ID is <= `newestServerFileId`. This logic ensures that a FileUploader\n   * within a form doesn't have any of its \"unsubmitted\" uploads prematurely\n   * deleted when the script is re-run.\n   */\n  private createWidgetValue(): FileUploaderStateProto | undefined {\n    if (this.state.newestServerFileId === 0) {\n      // If newestServerFileId is 0, we've had no transaction with the server,\n      // and therefore no widget value.\n      return undefined\n    }\n\n    const uploadedFileInfo: UploadedFileInfoProto[] = this.state.files\n      .filter(f => f.status.type === \"uploaded\")\n      .map(f => {\n        const { name, size, status } = f\n        return new UploadedFileInfoProto({\n          id: (status as UploadedStatus).serverFileId,\n          name,\n          size,\n        })\n      })\n\n    return new FileUploaderStateProto({\n      maxFileId: this.state.newestServerFileId,\n      uploadedFileInfo,\n    })\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    this.setState({ files: [] }, () => {\n      const newWidgetValue = this.createWidgetValue()\n      if (newWidgetValue == null) {\n        return\n      }\n\n      this.setState({\n        imgSrc: null,\n      })\n\n      this.props.widgetMgr.setFileUploaderStateValue(\n        this.props.element,\n        newWidgetValue,\n        { fromUi: true }\n      )\n    })\n  }\n\n  public render(): React.ReactNode {\n    const { element, widgetMgr, disabled, width } = this.props\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      element.formId,\n      this.onFormCleared\n    )\n\n    return (\n      <StyledCameraInput\n        width={width}\n        className=\"row-widget\"\n        data-testid=\"stCameraInput\"\n      >\n        <WidgetLabel\n          label={element.label}\n          disabled={disabled}\n          labelVisibility={labelVisibilityProtoValueToEnum(\n            element.labelVisibility?.value\n          )}\n        >\n          {element.help && (\n            <StyledWidgetLabelHelp>\n              <TooltipIcon\n                content={element.help}\n                placement={Placement.TOP_RIGHT}\n              />\n            </StyledWidgetLabelHelp>\n          )}\n        </WidgetLabel>\n        {this.state.imgSrc ? (\n          <>\n            <StyledBox width={width}>\n              {this.state.imgSrc !== this.RESTORED_FROM_WIDGET_STRING && (\n                <StyledImg\n                  src={this.state.imgSrc}\n                  alt=\"Snapshot\"\n                  opacity={\n                    this.state.shutter || !this.state.minShutterEffectPassed\n                      ? \"50%\"\n                      : \"100%\"\n                  }\n                  width={width}\n                  height={(width * 9) / 16}\n                />\n              )}\n            </StyledBox>\n            <CameraInputButton\n              onClick={this.removeCapture}\n              progress={this.getProgress()}\n              disabled={!!this.getProgress() || disabled}\n            >\n              {this.getProgress() ? (\n                \"Uploading...\"\n              ) : (\n                <StyledSpan>\n                  <Icon content={X} margin=\"0 xs 0 0\" size=\"sm\" /> Clear photo\n                </StyledSpan>\n              )}\n            </CameraInputButton>\n          </>\n        ) : (\n          <WebcamComponent\n            handleCapture={this.handleCapture}\n            width={width}\n            disabled={disabled}\n            clearPhotoInProgress={this.state.clearPhotoInProgress}\n            setClearPhotoInProgress={this.setClearPhotoInProgress}\n            facingMode={this.state.facingMode}\n            setFacingMode={this.setFacingMode}\n          />\n        )}\n      </StyledCameraInput>\n    )\n  }\n\n  private nextLocalFileId(): number {\n    return this.localFileIdCounter++\n  }\n\n  /**\n   * Delete the file with the given ID:\n   * - Cancel the file upload if it's in progress\n   * - Remove the fileID from our local state\n   * We don't actually tell the server to delete the file. It will garbage\n   * collect it.\n   */\n  public deleteFile = (fileId: number): void => {\n    const file = this.getFile(fileId)\n    if (file == null) {\n      return\n    }\n\n    if (file.status.type === \"uploading\") {\n      // The file hasn't been uploaded. Let's cancel the request.\n      // However, it may have been received by the server so we'll still\n      // send out a request to delete.\n      file.status.cancelToken.cancel()\n    }\n\n    this.removeFile(fileId)\n  }\n\n  /** Append the given file to `state.files`. */\n  private addFile = (file: UploadFileInfo): void => {\n    this.setState(state => ({ files: [...state.files, file] }))\n  }\n\n  /** Remove the file with the given ID from `state.files`. */\n  private removeFile = (idToRemove: number): void => {\n    this.setState(state => ({\n      files: state.files.filter(file => file.id !== idToRemove),\n    }))\n  }\n\n  /**\n   * Return the file with the given ID, if one exists.\n   */\n  private getFile = (fileId: number): UploadFileInfo | undefined => {\n    return this.state.files.find(file => file.id === fileId)\n  }\n\n  /** Replace the file with the given id in `state.files`. */\n  private updateFile = (curFileId: number, newFile: UploadFileInfo): void => {\n    this.setState(curState => {\n      return {\n        files: curState.files.map(file =>\n          file.id === curFileId ? newFile : file\n        ),\n      }\n    })\n  }\n\n  /**\n   * Called when an upload has completed. Updates the file's status, and\n   * assigns it the new file ID returned from the server.\n   */\n  private onUploadComplete = (\n    localFileId: number,\n    serverFileId: number\n  ): void => {\n    // \"state.newestServerFileId\" must always hold the max fileID\n    // returned from the server.\n    this.setState(state => ({\n      newestServerFileId: Math.max(state.newestServerFileId, serverFileId),\n      shutter: false,\n    }))\n\n    const curFile = this.getFile(localFileId)\n    if (curFile == null || curFile.status.type !== \"uploading\") {\n      // The file may have been canceled right before the upload\n      // completed. In this case, we just bail.\n      return\n    }\n\n    this.updateFile(\n      curFile.id,\n      curFile.setStatus({ type: \"uploaded\", serverFileId })\n    )\n  }\n\n  /**\n   * Callback for file upload progress. Updates a single file's local `progress`\n   * state.\n   */\n  private onUploadProgress = (event: ProgressEvent, fileId: number): void => {\n    const file = this.getFile(fileId)\n    if (file == null || file.status.type !== \"uploading\") {\n      return\n    }\n\n    const newProgress = Math.round((event.loaded * 100) / event.total)\n    if (file.status.progress === newProgress) {\n      return\n    }\n\n    // Update file.progress\n    this.updateFile(\n      fileId,\n      file.setStatus({\n        type: \"uploading\",\n        cancelToken: file.status.cancelToken,\n        progress: newProgress,\n      })\n    )\n  }\n\n  /**\n   * Clear files and errors, and reset the widget to its READY state.\n   */\n  private reset = (): void => {\n    this.setState({ files: [], imgSrc: null })\n  }\n\n  public uploadFile = (file: File): void => {\n    // Create an UploadFileInfo for this file and add it to our state.\n    const cancelToken = axios.CancelToken.source()\n    const uploadingFileInfo = new UploadFileInfo(\n      file.name,\n      file.size,\n      this.nextLocalFileId(),\n      {\n        type: \"uploading\",\n        cancelToken,\n        progress: 1,\n      }\n    )\n    this.addFile(uploadingFileInfo)\n\n    this.props.uploadClient\n      .uploadFile(\n        this.props.element,\n        file,\n        e => this.onUploadProgress(e, uploadingFileInfo.id),\n        cancelToken.token\n      )\n      .then(newFileId =>\n        this.onUploadComplete(uploadingFileInfo.id, newFileId)\n      )\n      .catch(err => {\n        // If this was a cancel error, we don't show the user an error -\n        // the cancellation was in response to an action they took.\n        if (!axios.isCancel(err)) {\n          this.updateFile(\n            uploadingFileInfo.id,\n            uploadingFileInfo.setStatus({\n              type: \"error\",\n              errorMessage: err ? err.toString() : \"Unknown error\",\n            })\n          )\n        }\n      })\n  }\n}\n\nfunction urltoFile(url: string, filename: string): Promise<File> {\n  return fetch(url)\n    .then(res => res.arrayBuffer())\n    .then(buf => new File([buf], filename, { type: \"image/jpeg\" }))\n}\n\nexport default CameraInput\n"],"sourceRoot":""}