{"version":3,"file":"static/js/4581.0ca3f909.chunk.js","mappings":"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","sources":["../../common/src/promise-delegate.ts","../../kernel/src/file.ts","../../kernel/src/requirements.ts","../../kernel/src/mock.ts","../../kernel/src/worker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["type PromiseImplFn<T> = ConstructorParameters<typeof Promise<T>>[0];\n\nexport class PromiseDelegate<T> {\n  public readonly promise: Promise<T>;\n  private resolveInternal!: Parameters<PromiseImplFn<T>>[0];\n  private rejectInternal!: Parameters<PromiseImplFn<T>>[1];\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolveInternal = resolve;\n      this.rejectInternal = reject;\n    });\n  }\n\n  public resolve(value: T): void {\n    this.resolveInternal(value);\n  }\n\n  public reject(reason: unknown): void {\n    this.rejectInternal(reason);\n  }\n}\n","import path from \"path-browserify\";\nimport type { PyodideInterface } from \"pyodide\";\n\nfunction ensureParent(pyodide: PyodideInterface, filePath: string): void {\n  const normalized = path.normalize(filePath);\n\n  const dirPath = path.dirname(normalized);\n\n  const dirNames = dirPath.split(\"/\");\n\n  const chDirNames: string[] = [];\n  for (const dirName of dirNames) {\n    chDirNames.push(dirName);\n    const dirPath = chDirNames.join(\"/\");\n\n    if (pyodide.FS.analyzePath(dirPath).exists) {\n      if (pyodide.FS.isDir(dirPath)) {\n        throw new Error(`\"${dirPath}\" already exists and is not a directory.`);\n      }\n      continue;\n    }\n\n    try {\n      pyodide.FS.mkdir(dirPath);\n    } catch (err) {\n      console.error(`Failed to create a directory \"${dirPath}\"`);\n      throw err;\n    }\n  }\n}\n\nexport function writeFileWithParents(\n  pyodide: PyodideInterface,\n  filePath: string,\n  data: string | ArrayBufferView,\n  opts?: Parameters<PyodideInterface[\"FS\"][\"writeFile\"]>[2]\n): void {\n  ensureParent(pyodide, filePath);\n  pyodide.FS.writeFile(filePath, data, opts);\n}\n\nexport function renameWithParents(\n  pyodide: PyodideInterface,\n  oldPath: string,\n  newPath: string\n): void {\n  ensureParent(pyodide, newPath);\n  pyodide.FS.rename(oldPath, newPath);\n}\n","export function verifyRequirements(requirements: string[]) {\n  requirements.forEach((req) => {\n    let url: URL;\n    try {\n      url = new URL(req);\n    } catch {\n      // `req` is not a URL -> OK\n      return;\n    }\n\n    // Ref: The scheme checker in the micropip implementation is https://github.com/pyodide/micropip/blob/v0.1.0/micropip/_compat_in_pyodide.py#L23-L26\n    if (url.protocol === \"emfs:\" || url.protocol === \"file:\") {\n      throw new Error(\n        `\"emfs:\" and \"file:\" protocols are not allowed for the requirement (${req})`\n      );\n    }\n  });\n}\n","import type { PyodideInterface } from \"pyodide\";\n\nexport function mockPyArrow(pyodide: PyodideInterface) {\n  pyodide.runPython(`\nimport micropip\nmicropip.add_mock_package(\n    \"pyarrow\", \"0.0.1\",\n    modules={\n        \"pyarrow\": \"\"\"\n__version__ = '0.0.1'  # TODO: Update when releasing\n\n\nclass Table:\n    @classmethod\n    def from_pandas(*args, **kwargs):\n        raise NotImplementedError(\"stlite is not supporting this method.\")\n\"\"\"\n    }\n)\n`);\n}\n","import type Pyodide from \"pyodide\";\nimport { PromiseDelegate } from \"@stlite/common\";\nimport { writeFileWithParents, renameWithParents } from \"./file\";\nimport { verifyRequirements } from \"./requirements\";\nimport { mockPyArrow } from \"./mock\";\nimport type {\n  WorkerInitialData,\n  OutMessage,\n  InMessage,\n  ReplyMessageHttpResponse,\n} from \"./types\";\n\nlet pyodide: Pyodide.PyodideInterface;\n\nlet httpServer: any;\n\ninterface StliteWorkerContext extends DedicatedWorkerGlobalScope {\n  postMessage(message: OutMessage, transfer: Transferable[]): void;\n  postMessage(message: OutMessage, options?: StructuredSerializeOptions): void;\n}\n\n// Ref: https://v4.webpack.js.org/loaders/worker-loader/#loading-with-worker-loader\nconst ctx = self as StliteWorkerContext;\n\nconst initDataPromiseDelegate = new PromiseDelegate<WorkerInitialData>();\n\nfunction postProgressMessage(message: string): void {\n  ctx.postMessage({\n    type: \"event:progress\",\n    data: {\n      message,\n    },\n  });\n}\n\nasync function initPyodide(\n  pyodideUrl: string,\n  loadPyodideOptions: Parameters<typeof Pyodide.loadPyodide>[0]\n): Promise<Pyodide.PyodideInterface> {\n  // Ref: https://github.com/jupyterlite/pyodide-kernel/blob/v0.1.3/packages/pyodide-kernel/src/kernel.ts#L55\n  const indexUrl = pyodideUrl.slice(0, pyodideUrl.lastIndexOf(\"/\") + 1);\n\n  // Ref: https://github.com/jupyterlite/pyodide-kernel/blob/v0.1.3/packages/pyodide-kernel/src/worker.ts#L40-L54\n  let loadPyodide: typeof Pyodide.loadPyodide;\n  if (pyodideUrl.endsWith(\".mjs\")) {\n    // note: this does not work at all in firefox\n    const pyodideModule: typeof Pyodide = await import(\n      /* webpackIgnore: true */ pyodideUrl\n    );\n    loadPyodide = pyodideModule.loadPyodide;\n  } else {\n    importScripts(pyodideUrl);\n    loadPyodide = (self as any).loadPyodide;\n  }\n  return loadPyodide({ ...loadPyodideOptions, indexURL: indexUrl });\n}\n\nconst DEFAULT_PYODIDE_URL =\n  \"https://cdn.jsdelivr.net/pyodide/v0.23.3/full/pyodide.js\";\n\n/**\n * Load Pyodided and initialize the interpreter.\n *\n * NOTE: This implementation is based on JupyterLite@v0.1.0a16.\n *       Since v0.1.0a17, a wrapper around micropip, piplite, has been introduced\n *       and the importing strategy of pyolite and other packages has been changed.\n *       We might need to catch up it.\n *       https://github.com/jupyterlite/jupyterlite/pull/310\n */\nasync function loadPyodideAndPackages() {\n  const {\n    entrypoint,\n    files,\n    archives,\n    requirements,\n    wheels,\n    mountedSitePackagesSnapshotFilePath,\n    pyodideUrl = DEFAULT_PYODIDE_URL,\n    streamlitConfig,\n  } = await initDataPromiseDelegate.promise;\n\n  postProgressMessage(\"Loading Pyodide.\");\n\n  console.debug(\"Loading Pyodide\");\n  pyodide = await initPyodide(pyodideUrl, {\n    stdout: console.log,\n    stderr: console.error,\n  });\n  console.debug(\"Loaded Pyodide\");\n\n  // Mount files\n  postProgressMessage(\"Mounting files.\");\n  await Promise.all(\n    Object.keys(files).map(async (path) => {\n      const file = files[path];\n\n      let data: string | ArrayBufferView;\n      if (\"url\" in file) {\n        console.debug(`Fetch a file from ${file.url}`);\n        data = await fetch(file.url)\n          .then((res) => res.arrayBuffer())\n          .then((buffer) => new Uint8Array(buffer));\n      } else {\n        data = file.data;\n      }\n      const { opts } = files[path];\n\n      console.debug(`Write a file \"${path}\"`);\n      writeFileWithParents(pyodide, path, data, opts);\n    })\n  );\n\n  // Unpack archives\n  postProgressMessage(\"Unpacking archives.\");\n  await Promise.all(\n    archives.map(async (archive) => {\n      let buffer: Parameters<Pyodide.PyodideInterface[\"unpackArchive\"]>[0];\n      if (\"url\" in archive) {\n        console.debug(`Fetch an archive from ${archive.url}`);\n        buffer = await fetch(archive.url).then((res) => res.arrayBuffer());\n      } else {\n        buffer = archive.buffer;\n      }\n      const { format, options } = archive;\n\n      console.debug(`Unpack an archive`, { format, options });\n      pyodide.unpackArchive(buffer, format, options);\n    })\n  );\n\n  if (!mountedSitePackagesSnapshotFilePath && !wheels) {\n    throw new Error(`Neither snapshot nor wheel files are provided.`);\n  }\n\n  if (mountedSitePackagesSnapshotFilePath) {\n    // Restore the site-packages director(y|ies) from the mounted snapshot file.\n    postProgressMessage(\"Restoring the snapshot.\");\n\n    await pyodide.runPythonAsync(`import tarfile, shutil, site`);\n\n    // Remove \"site-packages\" directories such as '/lib/python3.10/site-packages'\n    // assuming these directories will be extracted from the snapshot archive.\n    await pyodide.runPythonAsync(`\n      site_packages_dirs = site.getsitepackages()\n      for site_packages in site_packages_dirs:\n          shutil.rmtree(site_packages)\n    `);\n    console.debug(`Unarchive ${mountedSitePackagesSnapshotFilePath}`);\n    await pyodide.runPythonAsync(`\n      with tarfile.open(\"${mountedSitePackagesSnapshotFilePath}\", \"r\") as tar_gz_file:\n          tar_gz_file.extractall(\"/\")\n    `);\n    console.debug(\"Restored the snapshot\");\n\n    postProgressMessage(\"Mocking some packages.\");\n    console.debug(\"Mock pyarrow\");\n    mockPyArrow(pyodide);\n    console.debug(\"Mocked pyarrow\");\n  }\n\n  verifyRequirements(requirements); // Blocks the not allowed wheel URL schemes.\n  // NOTE: It's important to install the user-specified requirements and the streamlit package at the same time,\n  // which satisfies the following two requirements:\n  // 1. It allows users to specify the versions of Streamlit's dependencies via requirements.txt\n  // before these versions are automatically resolved by micropip when installing Streamlit from the custom wheel\n  // (installing the user-reqs must be earlier than or equal to installing the custom wheels).\n  // 2. It also resolves the `streamlit` package version required by the user-specified requirements to the appropriate version,\n  // which avoids the problem of https://github.com/whitphx/stlite/issues/675\n  // (installing the custom wheels must be earlier than or equal to installing the user-reqs).\n  // ===\n  // Also, this must be after restoring the snapshot because the snapshot may contain the site-packages.\n  postProgressMessage(\"Installing packages.\");\n  await pyodide.loadPackage(\"micropip\");\n  const micropip = pyodide.pyimport(\"micropip\");\n  if (wheels) {\n    await micropip.install(\"altair<5.2.0\", { keep_going: true }); // Altair>=5.2.0 checks PyArrow version and emits an error (https://github.com/altair-viz/altair/pull/3160)\n\n    console.debug(\n      \"Installing the wheels:\",\n      wheels,\n      \"and the requirements:\",\n      requirements\n    );\n    await micropip.install.callKwargs(\n      [wheels.stliteServer, wheels.streamlit, ...requirements],\n      { keep_going: true }\n    );\n    console.debug(\"Installed the wheels and the requirements\");\n\n    postProgressMessage(\"Mocking some packages.\");\n    console.debug(\"Mock pyarrow\");\n    mockPyArrow(pyodide);\n    console.debug(\"Mocked pyarrow\");\n  } else {\n    console.debug(\"Installing the requirements:\", requirements);\n    await micropip.install.callKwargs(requirements, { keep_going: true });\n    console.debug(\"Installed the requirements\");\n  }\n\n  // The following code is necessary to avoid errors like  `NameError: name '_imp' is not defined`\n  // at importing installed packages.\n  await pyodide.runPythonAsync(`\n    import importlib\n    importlib.invalidate_caches()\n  `);\n\n  postProgressMessage(\"Loading streamlit package.\");\n  console.debug(\"Loading the Streamlit package\");\n  // Importing the `streamlit` module takes most of the time,\n  // so we first run this step independently for clearer logs and easy exec-time profiling.\n  // For https://github.com/whitphx/stlite/issues/427\n  await pyodide.runPythonAsync(`\n      import streamlit.runtime\n      import streamlit.web\n  `);\n  console.debug(\"Loaded the Streamlit package\");\n\n  postProgressMessage(\"Setting up the loggers.\");\n  console.debug(\"Setting the loggers\");\n  // Fix the Streamlit's logger instantiating strategy, which violates the standard and is problematic for us.\n  // See https://github.com/streamlit/streamlit/issues/4742\n  await pyodide.runPythonAsync(`\n      import logging\n      import streamlit.logger\n\n      streamlit.logger.get_logger = logging.getLogger\n      streamlit.logger.setup_formatter = None\n      streamlit.logger.update_formatter = lambda *a, **k: None\n      streamlit.logger.set_log_level = lambda *a, **k: None\n  `);\n  // Then configure the logger.\n  const logCallback = (msg: string) => {\n    if (msg.startsWith(\"CRITICAL\") || msg.startsWith(\"ERROR\")) {\n      console.error(msg);\n    } else if (msg.startsWith(\"WARNING\")) {\n      console.warn(msg);\n    } else if (msg.startsWith(\"INFO\")) {\n      console.info(msg);\n    } else if (msg.startsWith(\"DEBUG\")) {\n      console.debug(msg);\n    } else {\n      console.log(msg);\n    }\n  };\n  self.__logCallback__ = logCallback;\n  await pyodide.runPythonAsync(`\n      from js import __logCallback__\n\n\n      class JsHandler(logging.Handler):\n          def emit(self, record):\n              msg = self.format(record)\n              __logCallback__(msg)\n\n\n      main_formatter = logging.Formatter(\"%(levelname)s:%(name)s:%(message)s\")\n\n      js_handler = JsHandler()\n      js_handler.setFormatter(main_formatter)\n\n      root_logger = logging.getLogger()\n      root_logger.handlers.clear()\n      root_logger.addHandler(js_handler)\n      root_logger.setLevel(logging.DEBUG)\n\n      streamlit_handler = logging.getLogger(\"streamlit\")\n      streamlit_handler.setLevel(logging.DEBUG)\n  `);\n  console.debug(\"Set the loggers\");\n\n  postProgressMessage(\n    \"Mocking some Streamlit functions for the browser environment.\"\n  );\n  console.debug(\"Mocking some Streamlit functions\");\n  // Disable caching. See https://github.com/whitphx/stlite/issues/495\n  await pyodide.runPythonAsync(`\n    import streamlit\n\n    def is_cacheable_msg(msg):\n        return False\n\n    streamlit.runtime.runtime.is_cacheable_msg = is_cacheable_msg\n  `);\n  console.debug(\"Mocked some Streamlit functions\");\n\n  postProgressMessage(\"Booting up the Streamlit server.\");\n  console.debug(\"Booting up the Streamlit server\");\n  // The following Python code is based on streamlit.web.cli.main_run().\n  self.__streamlitFlagOptions__ = {\n    ...streamlitConfig,\n    \"browser.gatherUsageStats\": false,\n    \"runner.fastReruns\": false, // Fast reruns do not work well with the async script runner of stlite. See https://github.com/whitphx/stlite/pull/550#issuecomment-1505485865.\n  };\n  await pyodide.runPythonAsync(`\n    from stlite_server.bootstrap import load_config_options, prepare\n    from stlite_server.server import Server\n    from js import __streamlitFlagOptions__\n\n    flag_options = __streamlitFlagOptions__.to_py()\n    load_config_options(flag_options)\n\n    main_script_path = \"${entrypoint}\"\n    command_line = None\n    args = []\n\n    prepare(main_script_path, args)\n\n    server = Server(main_script_path, command_line)\n    server.start()\n  `);\n  console.debug(\"Booted up the Streamlit server\");\n\n  console.debug(\"Setting up the HTTP server\");\n  // Pull the http server instance from Python world to JS world and set up it.\n  httpServer = pyodide.globals.get(\"server\").copy();\n  console.debug(\"Set up the HTTP server\");\n\n  ctx.postMessage({\n    type: \"event:loaded\",\n  });\n}\n\nconst pyodideReadyPromise = loadPyodideAndPackages().catch((error) => {\n  ctx.postMessage({\n    type: \"event:error\",\n    data: {\n      error,\n    },\n  });\n  throw error;\n});\n\n/**\n * Process a message sent to the worker.\n *\n * @param event The message event to process\n */\nself.onmessage = async (event: MessageEvent<InMessage>): Promise<void> => {\n  const msg = event.data;\n\n  // Special case for transmitting the initial data\n  if (msg.type === \"initData\") {\n    initDataPromiseDelegate.resolve(msg.data);\n    return;\n  }\n\n  await pyodideReadyPromise;\n\n  const messagePort = event.ports[0];\n\n  try {\n    switch (msg.type) {\n      case \"websocket:connect\": {\n        console.debug(\"websocket:connect\", msg.data);\n\n        const { path } = msg.data;\n\n        httpServer.start_websocket(\n          path,\n          (messageProxy: any, binary: boolean) => {\n            // XXX: Now there is no session mechanism\n\n            if (binary) {\n              const buffer = messageProxy.getBuffer(\"u8\");\n              messageProxy.destroy();\n              const payload = new Uint8ClampedArray(\n                buffer.data.buffer,\n                buffer.data.byteOffset,\n                buffer.data.byteLength\n              );\n              ctx.postMessage({\n                type: \"websocket:message\",\n                data: {\n                  payload: new Uint8Array(payload),\n                },\n              });\n            } else {\n              ctx.postMessage({\n                type: \"websocket:message\",\n                data: {\n                  payload: messageProxy,\n                },\n              });\n            }\n          }\n        );\n\n        messagePort.postMessage({\n          type: \"reply\",\n        });\n        break;\n      }\n      case \"websocket:send\": {\n        console.debug(\"websocket:send\", msg.data);\n\n        const { payload } = msg.data;\n\n        httpServer.receive_websocket_from_js(payload);\n        break;\n      }\n      case \"http:request\": {\n        console.debug(\"http:request\", msg.data);\n\n        const { request } = msg.data;\n\n        const onResponse = (statusCode: number, _headers: any, _body: any) => {\n          const headers = _headers.toJs();\n          const body = _body.toJs();\n          console.debug({ statusCode, headers, body });\n\n          const reply: ReplyMessageHttpResponse = {\n            type: \"http:response\",\n            data: {\n              response: {\n                statusCode,\n                headers,\n                body,\n              },\n            },\n          };\n          messagePort.postMessage(reply);\n        };\n\n        httpServer.receive_http_from_js(\n          request.method,\n          request.path,\n          request.headers,\n          request.body,\n          onResponse\n        );\n        break;\n      }\n      case \"file:write\": {\n        const { path, data: fileData, opts } = msg.data;\n\n        console.debug(`Write a file \"${path}\"`);\n        writeFileWithParents(pyodide, path, fileData, opts);\n        messagePort.postMessage({\n          type: \"reply\",\n        });\n        break;\n      }\n      case \"file:rename\": {\n        const { oldPath, newPath } = msg.data;\n\n        console.debug(`Rename \"${oldPath}\" to ${newPath}`);\n        renameWithParents(pyodide, oldPath, newPath);\n        messagePort.postMessage({\n          type: \"reply\",\n        });\n        break;\n      }\n      case \"file:unlink\": {\n        const { path } = msg.data;\n\n        console.debug(`Remove \"${path}`);\n        pyodide.FS.unlink(path);\n        messagePort.postMessage({\n          type: \"reply\",\n        });\n        break;\n      }\n      case \"install\": {\n        const { requirements } = msg.data;\n\n        const micropip = pyodide.pyimport(\"micropip\");\n\n        console.debug(\"Install the requirements:\", requirements);\n        verifyRequirements(requirements); // Blocks the not allowed wheel URL schemes.\n        await micropip.install\n          .callKwargs(requirements, { keep_going: true })\n          .then(() => {\n            if (requirements.includes(\"matplotlib\")) {\n              return pyodide.runPythonAsync(`\n                from stlite_server.bootstrap import _fix_matplotlib_crash\n                _fix_matplotlib_crash()\n              `);\n            }\n          })\n          .then(() => {\n            console.debug(\"Successfully installed\");\n            messagePort.postMessage({\n              type: \"reply\",\n            });\n          });\n      }\n    }\n  } catch (error) {\n    console.error(error);\n\n    if (!(error instanceof Error)) {\n      throw error;\n    }\n\n    // The `error` object may contain non-serializable properties such as function (for example Pyodide.FS.ErrnoError which has a `.setErrno` function),\n    // so it must be converted to a plain object before sending it to the main thread.\n    // Otherwise, the following error will be thrown:\n    // `Uncaught (in promise) DOMException: Failed to execute 'postMessage' on 'MessagePort': #<Object> could not be cloned.`\n    // Also, the JSON.stringify() and JSON.parse() approach like https://stackoverflow.com/a/42376465/13103190\n    // does not work for Error objects because the Error object is not enumerable.\n    // So we use the following approach to clone the Error object.\n    const cloneableError = new Error(error.message);\n    cloneableError.name = error.name;\n    cloneableError.stack = error.stack;\n\n    messagePort.postMessage({\n      type: \"reply\",\n      error: cloneableError,\n    });\n  }\n};\n\nctx.postMessage({\n  type: \"event:start\",\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [1561], function() { return __webpack_require__(84581); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"9adf68ec\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t4581: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkstlite\"] = self[\"webpackChunkstlite\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(1561).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["PromiseDelegate","this","promise","Promise","resolve","reject","resolveInternal","rejectInternal","value","reason","ensureParent","pyodide","filePath","normalized","path","dirNames","split","chDirNames","dirName","push","dirPath","join","FS","analyzePath","exists","isDir","Error","mkdir","err","console","error","writeFileWithParents","data","opts","writeFile","renameWithParents","oldPath","newPath","rename","verifyRequirements","requirements","forEach","req","url","URL","protocol","mockPyArrow","runPython","httpServer","ctx","self","initDataPromiseDelegate","postProgressMessage","message","postMessage","type","initPyodide","pyodideUrl","loadPyodideOptions","indexUrl","slice","lastIndexOf","endsWith","import","pyodideModule","loadPyodide","importScripts","indexURL","pyodideReadyPromise","entrypoint","files","archives","wheels","mountedSitePackagesSnapshotFilePath","streamlitConfig","debug","stdout","log","stderr","all","Object","keys","map","__awaiter","file","fetch","then","res","arrayBuffer","buffer","Uint8Array","archive","format","options","unpackArchive","runPythonAsync","loadPackage","micropip","pyimport","install","keep_going","callKwargs","stliteServer","streamlit","logCallback","msg","startsWith","warn","info","__logCallback__","__streamlitFlagOptions__","globals","get","copy","loadPyodideAndPackages","catch","onmessage","event","messagePort","ports","start_websocket","messageProxy","binary","getBuffer","destroy","payload","Uint8ClampedArray","byteOffset","byteLength","receive_websocket_from_js","request","onResponse","statusCode","_headers","_body","headers","toJs","body","reply","response","receive_http_from_js","method","fileData","unlink","includes","cloneableError","name","stack","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","f","e","chunkId","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next"],"sourceRoot":""}