{"version":3,"file":"static/js/5226.e383a656.chunk.js","mappings":"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","sources":["../../../streamlit/frontend/lib/src/components/shared/ElementFullscreen/ElementFullscreenContext.tsx","../../../streamlit/frontend/lib/src/components/shared/FullScreenWrapper/styled-components.tsx","../../../streamlit/frontend/lib/src/components/shared/ElementFullscreen/ElementFullscreenWrapper.tsx","../../../streamlit/frontend/lib/src/components/shared/ElementFullscreen/useFullscreen.tsx","../../../streamlit/frontend/lib/src/components/shared/FullScreenWrapper/withFullScreenWrapper.tsx","../../../streamlit/frontend/lib/src/components/shared/Toolbar/Toolbar.tsx","../../../streamlit/frontend/lib/src/components/shared/Toolbar/styled-components.ts","../../../streamlit/frontend/lib/src/hooks/useRequiredContext.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContext } from \"react\"\n\ntype ElementFullscreenContextShape = {\n  width: number\n  height: number | undefined\n  expanded: boolean\n  expand: () => void\n  collapse: () => void\n}\n\nexport const ElementFullscreenContext =\n  createContext<ElementFullscreenContextShape | null>(null)\nElementFullscreenContext.displayName = \"ElementFullscreenContext\"\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport interface StyledFullScreenFrameProps {\n  isExpanded: boolean\n}\n\nexport const StyledFullScreenFrame = styled.div<StyledFullScreenFrameProps>(\n  ({ theme, isExpanded }) => ({\n    ...(isExpanded\n      ? {\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          background: theme.colors.bgColor,\n          zIndex: theme.zIndices.fullscreenWrapper,\n          padding: theme.spacing.md,\n          paddingTop: theme.sizes.fullScreenHeaderHeight,\n          overflow: [\"auto\", \"overlay\"],\n          display: \"flex\", // To avoid extra spaces that lead to scrollbars.\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }\n      : {}),\n  })\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, PropsWithChildren, useMemo } from \"react\"\n\nimport { useTheme } from \"@emotion/react\"\n\nimport { StyledFullScreenFrame } from \"@streamlit/lib/src/components/shared/FullScreenWrapper/styled-components\"\nimport { ElementFullscreenContext } from \"@streamlit/lib/src/components/shared/ElementFullscreen/ElementFullscreenContext\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nimport { useFullscreen } from \"./useFullscreen\"\n\ntype ElementFullscreenWrapperProps = PropsWithChildren<{\n  height?: number\n  width: number\n}>\n\nconst ElementFullscreenWrapper: FC<ElementFullscreenWrapperProps> = ({\n  children,\n  height,\n  width,\n}) => {\n  const theme: EmotionTheme = useTheme()\n  const { expanded, fullHeight, fullWidth, zoomIn, zoomOut } = useFullscreen()\n\n  const fullscreenContextValue = useMemo(() => {\n    return {\n      width: expanded ? fullWidth : width,\n      height: expanded ? fullHeight : height,\n      expanded,\n      expand: zoomIn,\n      collapse: zoomOut,\n    }\n  }, [expanded, fullHeight, fullWidth, height, width, zoomIn, zoomOut])\n\n  return (\n    <ElementFullscreenContext.Provider value={fullscreenContextValue}>\n      <StyledFullScreenFrame\n        isExpanded={expanded}\n        data-testid=\"stFullScreenFrame\"\n        theme={theme}\n      >\n        {children}\n      </StyledFullScreenFrame>\n    </ElementFullscreenContext.Provider>\n  )\n}\n\nexport default ElementFullscreenWrapper\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\n\nimport { LibContext } from \"@streamlit/lib/src/components/core/LibContext\"\nimport { WindowDimensionsContext } from \"@streamlit/lib/src/components/shared/WindowDimensions\"\nimport { useRequiredContext } from \"@streamlit/lib/src/hooks/useRequiredContext\"\n\nexport type UseEscapeToCollapseArgs = {\n  expanded: boolean\n  zoomOut: () => void\n}\n\nexport type UseFullscreenShape = {\n  expanded: boolean\n  fullHeight: number\n  fullWidth: number\n  zoomIn: () => void\n  zoomOut: () => void\n}\n\nexport const useFullscreen = (): UseFullscreenShape => {\n  const { setFullScreen } = useContext(LibContext)\n  const [expanded, setExpanded] = useState(false)\n  const { fullHeight, fullWidth } = useRequiredContext(WindowDimensionsContext)\n\n  const setExpandedState = useCallback(\n    (isExpanded: boolean) => {\n      // Set the local component-level state\n      setExpanded(isExpanded)\n      // Set the context-level state\n      setFullScreen(isExpanded)\n    },\n    [setFullScreen]\n  )\n\n  const zoomIn = useCallback(() => {\n    document.body.style.overflow = \"hidden\"\n    setExpandedState(true)\n  }, [setExpandedState])\n\n  const zoomOut = useCallback(() => {\n    document.body.style.overflow = \"unset\"\n    setExpandedState(false)\n  }, [setExpandedState])\n\n  const controlKeys = useCallback(\n    (event: KeyboardEvent) => {\n      /**\n       * keyCode 27 is the ESC key\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\n       */\n      if (event.keyCode === 27 && expanded) {\n        // Exit fullscreen\n        zoomOut()\n      }\n    },\n    [zoomOut, expanded]\n  )\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", controlKeys, false)\n\n    return () => {\n      document.removeEventListener(\"keydown\", controlKeys, false)\n    }\n  }, [controlKeys])\n\n  return useMemo(() => {\n    return { expanded, zoomIn, zoomOut, fullHeight, fullWidth }\n  }, [expanded, zoomIn, zoomOut, fullHeight, fullWidth])\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ComponentType, ReactElement } from \"react\"\n\nimport hoistNonReactStatics from \"hoist-non-react-statics\"\n\nimport ElementFullscreenWrapper from \"@streamlit/lib/src/components/shared/ElementFullscreen/ElementFullscreenWrapper\"\n\nfunction withFullScreenWrapper<P extends { width: number }>(\n  WrappedComponent: ComponentType<React.PropsWithChildren<P>>\n): ComponentType<React.PropsWithChildren<P>> {\n  const ComponentWithFullScreenWrapper = (props: P): ReactElement => {\n    return (\n      <ElementFullscreenWrapper width={props.width}>\n        <WrappedComponent {...(props as P)}></WrappedComponent>\n      </ElementFullscreenWrapper>\n    )\n  }\n  ComponentWithFullScreenWrapper.displayName = `withFullScreenWrapper(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`\n\n  // Static methods must be copied over\n  // https://en.reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  return hoistNonReactStatics(ComponentWithFullScreenWrapper, WrappedComponent)\n}\n\nexport default withFullScreenWrapper\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { EmotionIcon } from \"@emotion-icons/emotion-icon\"\nimport { useTheme } from \"@emotion/react\"\nimport { StyledComponent } from \"@emotion/styled\"\nimport { Fullscreen, FullscreenExit } from \"@emotion-icons/material-outlined\"\n\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown\"\nimport Tooltip, {\n  Placement,\n} from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport Button, {\n  BaseButtonKind,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nimport { StyledToolbar, StyledToolbarWrapper } from \"./styled-components\"\n\nexport interface ToolbarActionProps {\n  label: string\n  icon?: EmotionIcon\n  show_label?: boolean\n  onClick: () => void\n}\n\nexport function ToolbarAction({\n  label,\n  show_label,\n  icon,\n  onClick,\n}: ToolbarActionProps): ReactElement {\n  const theme: EmotionTheme = useTheme()\n\n  const displayLabel = show_label ? label : \"\"\n  return (\n    <div data-testid=\"stElementToolbarButton\">\n      <Tooltip\n        content={\n          <StreamlitMarkdown\n            source={label}\n            allowHTML={false}\n            style={{ fontSize: theme.fontSizes.sm }}\n          />\n        }\n        placement={Placement.TOP}\n        // The default tooltip delay (== how fast the tooltip is triggered) of 200ms\n        // is a bit too fast for the toolbar use case. Therefore, we are setting it to 1000ms.\n        onMouseEnterDelay={1000}\n        inline\n      >\n        <Button\n          onClick={event => {\n            if (onClick) {\n              onClick()\n            }\n            event.stopPropagation()\n          }}\n          kind={BaseButtonKind.ELEMENT_TOOLBAR}\n          aria-label={label}\n        >\n          {icon && (\n            <Icon\n              content={icon}\n              size=\"md\"\n              testid=\"stElementToolbarButtonIcon\"\n            />\n          )}\n          {displayLabel && <span>{displayLabel}</span>}\n        </Button>\n      </Tooltip>\n    </div>\n  )\n}\n\nexport interface ToolbarProps {\n  onExpand?: () => void\n  onCollapse?: () => void\n  isFullScreen?: boolean\n  locked?: boolean\n  target?: StyledComponent<any, any, any>\n  disableFullscreenMode?: boolean\n}\n\nconst Toolbar: React.FC<React.PropsWithChildren<ToolbarProps>> = ({\n  onExpand,\n  onCollapse,\n  isFullScreen,\n  locked,\n  children,\n  target,\n  disableFullscreenMode,\n}): ReactElement => {\n  return (\n    <StyledToolbarWrapper\n      className=\"stElementToolbar\"\n      data-testid=\"stElementToolbar\"\n      locked={locked || isFullScreen}\n      target={target}\n    >\n      <StyledToolbar>\n        {children}\n        {onExpand && !disableFullscreenMode && !isFullScreen && (\n          <ToolbarAction\n            label=\"Fullscreen\"\n            icon={Fullscreen}\n            onClick={() => onExpand()}\n          />\n        )}\n        {onCollapse && !disableFullscreenMode && isFullScreen && (\n          <ToolbarAction\n            label=\"Close fullscreen\"\n            icon={FullscreenExit}\n            onClick={() => onCollapse()}\n          />\n        )}\n      </StyledToolbar>\n    </StyledToolbarWrapper>\n  )\n}\n\nexport default Toolbar\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled, { StyledComponent } from \"@emotion/styled\"\n\nimport { hasLightBackgroundColor } from \"@streamlit/lib/src/theme\"\n\nconst TOP_DISTANCE = \"-2.4rem\"\n\nexport interface StyledToolbarWrapperProps {\n  locked?: boolean\n  target?: StyledComponent<any, any, any>\n}\n\nexport const StyledToolbarWrapper = styled.div<StyledToolbarWrapperProps>(\n  ({ theme, locked, target }) => ({\n    padding: `${theme.spacing.sm} 0 ${theme.spacing.sm} ${theme.spacing.sm}`,\n    position: \"absolute\",\n    top: locked ? TOP_DISTANCE : \"-1rem\",\n    right: theme.spacing.none,\n    transition: \"none\",\n    ...(!locked && {\n      opacity: 0,\n      \"&:active, &:focus-visible, &:hover\": {\n        transition: \"opacity 150ms 100ms, top 100ms 100ms\",\n        opacity: 1,\n        top: TOP_DISTANCE,\n      },\n      ...(target && {\n        [`${target}:hover &, ${target}:active &, ${target}:focus-visible &`]: {\n          transition: \"opacity 150ms 100ms, top 100ms 100ms\",\n          opacity: 1,\n          top: TOP_DISTANCE,\n        },\n      }),\n    }),\n  })\n)\n\nexport const StyledToolbar = styled.div(({ theme }) => ({\n  color: hasLightBackgroundColor(theme)\n    ? theme.colors.fadedText60\n    : theme.colors.bodyText,\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  boxShadow: \"1px 2px 8px rgba(0, 0, 0, 0.08)\",\n  borderRadius: theme.radii.default,\n  backgroundColor: theme.colors.lightenedBg05,\n  width: \"fit-content\",\n  zIndex: theme.zIndices.sidebar + 1,\n}))\n\nexport const StyledToolbarElementContainer = styled.div<{\n  width?: number\n  height?: number\n  useContainerWidth: boolean\n}>(({ width, height, useContainerWidth }) => ({\n  position: \"relative\",\n  height: useContainerWidth ? height : \"fit-content\",\n  width: useContainerWidth ? width : \"fit-content\",\n  maxWidth: \"100%\",\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, useContext } from \"react\"\n\nexport const useRequiredContext = <R,>(context: Context<R | null>): R => {\n  const foundContext = useContext(context)\n\n  if (foundContext === null || foundContext === undefined) {\n    throw new Error(\n      `useRequiredContext: ${context.displayName ?? \"context\"} not found`\n    )\n  }\n\n  return foundContext\n}\n"],"names":["ElementFullscreenContext","createContext","displayName","StyledFullScreenFrame","_styled","target","_ref","theme","isExpanded","position","top","left","bottom","right","background","colors","bgColor","zIndex","zIndices","fullscreenWrapper","padding","spacing","md","paddingTop","sizes","fullScreenHeaderHeight","overflow","display","alignItems","justifyContent","children","height","width","useTheme","expanded","fullHeight","fullWidth","zoomIn","zoomOut","useFullscreen","setFullScreen","useContext","LibContext","setExpanded","useState","useRequiredContext","WindowDimensionsContext","setExpandedState","useCallback","document","body","style","controlKeys","event","keyCode","useEffect","addEventListener","removeEventListener","useMemo","fullscreenContextValue","expand","collapse","_jsx","Provider","value","WrappedComponent","ComponentWithFullScreenWrapper","props","ElementFullscreenWrapper","name","hoistNonReactStatics","ToolbarAction","label","show_label","icon","onClick","displayLabel","Tooltip","content","StreamlitMarkdown","source","allowHTML","fontSize","fontSizes","sm","placement","Placement","TOP","onMouseEnterDelay","inline","_jsxs","Button","stopPropagation","kind","BaseButtonKind","ELEMENT_TOOLBAR","Icon","size","testid","_ref2","onExpand","onCollapse","isFullScreen","locked","disableFullscreenMode","StyledToolbarWrapper","className","StyledToolbar","Fullscreen","FullscreenExit","TOP_DISTANCE","none","transition","opacity","color","hasLightBackgroundColor","fadedText60","bodyText","flexDirection","boxShadow","borderRadius","radii","default","backgroundColor","lightenedBg05","sidebar","StyledToolbarElementContainer","_ref3","useContainerWidth","maxWidth","context","foundContext","_context$displayName","undefined","Error"],"sourceRoot":""}