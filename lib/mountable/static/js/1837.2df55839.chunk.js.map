{"version":3,"file":"static/js/1837.2df55839.chunk.js","mappings":"qOAkBO,MAAMA,GAAyBC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,EAAW,MAC/CE,QAAS,OACTC,cAAe,YACf,IASWC,GAAgBJ,EAAAA,EAAAA,GAAA,KAAAC,OAAA,aAAAD,EAC3BK,IAAA,IAAC,SAAEC,EAAQ,cAAEC,EAAa,WAAEC,EAAU,MAAEC,GAAOJ,EAAA,MAAM,CACnDK,eAAgB,OAChBC,MAA4B,iBAAdH,EAA0B,GAAEA,MAAiB,cAC3DN,QAAS,OACTC,cAAe,MACfS,WAAY,SACZC,eAAgB,aAChBC,IAAKL,EAAMM,QAAQC,GACnBC,aAAcR,EAAMS,MAAMC,QAE1BC,YAAaX,EAAMM,QAAQC,GAC3BK,aAAcZ,EAAMM,QAAQC,GAC5BM,UAAWb,EAAMM,QAAQQ,QACzBC,aAAcf,EAAMM,QAAQQ,QAC5BE,WAAYhB,EAAMiB,YAAYC,SAE9BC,gBAAiBrB,EACbE,EAAMoB,OAAOC,gBACb,cAEJ,UAAW,CACTF,gBAAiBrB,EACbE,EAAMoB,OAAOE,gBACbtB,EAAMoB,OAAOC,iBAGnB,6BAA8B,CAC5BpB,eAAgB,QAGlB,UAAW,CACTsB,QAAS,QAGX,kBAAmB,CACjBJ,gBAAiBnB,EAAMoB,OAAOC,iBAGhC,eAAkB,CAChBV,YAAaX,EAAMM,QAAQkB,SAGzB3B,EACA,CACE4B,YAAazB,EAAMoB,OAAOK,YAC1BN,gBAAiBnB,EAAMoB,OAAOM,YAC9BC,MAAO3B,EAAMoB,OAAOQ,YACpBC,OAAQ,cACR,UAAW,CACTF,MAAO3B,EAAMoB,OAAOQ,YACpBT,gBAAiBnB,EAAMoB,OAAOM,cAGlC,CAAC,EACN,GAAC,IAOSI,GAAoBvC,EAAAA,EAAAA,GAAA,QAAAC,OAAA,aAAAD,EAC/BwC,IAAA,IAAC,SAAElC,EAAQ,MAAEG,GAAO+B,EAAA,MAAM,CACxBJ,MAAO3B,EAAMoB,OAAOY,SACpBC,SAAU,SACVC,WAAY,SACZC,aAAc,WACd1C,QAAS,gBAELI,EACA,CACE4B,YAAazB,EAAMoB,OAAOK,YAC1BN,gBAAiBnB,EAAMoB,OAAOM,YAC9BC,MAAO3B,EAAMoB,OAAOQ,YACpBC,OAAQ,eAEV,CAAC,EACN,GAAC,I,eCcJ,QArEA,SAAkBO,GAChB,MAAM,aAAEC,EAAY,sBAAEC,GAA0BC,EAAAA,WAAiBC,EAAAA,GAC3DC,EAAcF,EAAAA,WAAiBG,EAAAA,IAE/B,OAAEtB,IAAyBuB,EAAAA,EAAAA,MAE3B,SAAE9C,EAAQ,QAAE+C,EAAO,MAAE1C,GAAUkC,EAC/BS,EAAQ,CAAE3C,SAEV4C,EArBR,SACEA,EACAL,GAEA,QAA0B,OAAtBK,IAA8BL,MAED,OAAtBK,IAA+BL,KAGb,IAAtBK,CACT,CAW4BC,CACxBH,EAAQE,kBACRL,GAGI3C,EAAgBwC,IAA0BM,EAAQI,eAiBxD,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAa,cAAY,aAAaL,MAAOA,EAAMM,UAChEF,EAAAA,EAAAA,KAACG,EAAAA,EAAiB,CAACC,KAAMT,EAAQS,KAAMC,UAAWC,EAAAA,EAAAA,UAAoBJ,UACpEF,EAAAA,EAAAA,KAAC3D,EAAsB,CAAA6D,UACrBK,EAAAA,EAAAA,MAAC7D,EAAa,CACZ,cAAY,qBACZE,SAAUA,EACVC,cAAeA,EACfC,aAAY+C,GAAoB5C,EAChCuD,KAAMb,EAAQc,KACdlE,OAAQoD,EAAQe,SAAW,SAAW,GACtCC,IAAI,aACJC,QA3BWC,IACflB,EAAQe,SAEN9D,GACFiE,EAAEC,kBAIJD,EAAEC,iBACGlE,GACHwC,EAAaO,EAAQI,gBAEzB,EAe6BG,SAAA,CAEpBP,EAAQoB,OACPf,EAAAA,EAAAA,KAACgB,EAAAA,EAAW,CACVC,KAAK,KACLvC,MAAOP,EAAOY,SACdmC,UAAWvB,EAAQoB,QAGvBf,EAAAA,EAAAA,KAACnB,EAAiB,CAACjC,SAAUA,EAASsD,UACpCF,EAAAA,EAAAA,KAACmB,EAAAA,GAAiB,CAChBC,OAAQzB,EAAQ0B,MAChBC,WAAW,EACXC,SAAO,EACPC,UAAW3E,EACX4E,aAAW,EACXC,cAAY,cAQ5B,C","sources":["../../../streamlit/frontend/lib/src/components/elements/PageLink/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/PageLink/PageLink.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledNavLinkContainer = styled.div(() => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n}))\n\nexport interface StyledNavLinkProps {\n  disabled: boolean\n  isCurrentPage: boolean\n  // If true or number, the button should take up container's full width\n  fluidWidth?: boolean | number\n}\n\nexport const StyledNavLink = styled.a<StyledNavLinkProps>(\n  ({ disabled, isCurrentPage, fluidWidth, theme }) => ({\n    textDecoration: \"none\",\n    width: typeof fluidWidth == \"number\" ? `${fluidWidth}px` : \"fit-content\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    gap: theme.spacing.sm,\n    borderRadius: theme.radii.default,\n\n    paddingLeft: theme.spacing.sm,\n    paddingRight: theme.spacing.sm,\n    marginTop: theme.spacing.threeXS,\n    marginBottom: theme.spacing.threeXS,\n    lineHeight: theme.lineHeights.menuItem,\n\n    backgroundColor: isCurrentPage\n      ? theme.colors.darkenedBgMix15\n      : \"transparent\",\n\n    \"&:hover\": {\n      backgroundColor: isCurrentPage\n        ? theme.colors.darkenedBgMix25\n        : theme.colors.darkenedBgMix15,\n    },\n\n    \"&:active,&:visited,&:hover\": {\n      textDecoration: \"none\",\n    },\n\n    \"&:focus\": {\n      outline: \"none\",\n    },\n\n    \"&:focus-visible\": {\n      backgroundColor: theme.colors.darkenedBgMix15,\n    },\n\n    [`@media print`]: {\n      paddingLeft: theme.spacing.none,\n    },\n\n    ...(disabled\n      ? {\n          borderColor: theme.colors.borderColor,\n          backgroundColor: theme.colors.transparent,\n          color: theme.colors.fadedText40,\n          cursor: \"not-allowed\",\n          \"&:hover\": {\n            color: theme.colors.fadedText40,\n            backgroundColor: theme.colors.transparent,\n          },\n        }\n      : {}),\n  })\n)\n\nexport interface StyledNavLinkTextProps {\n  disabled: boolean\n}\n\nexport const StyledNavLinkText = styled.span<StyledNavLinkTextProps>(\n  ({ disabled, theme }) => ({\n    color: theme.colors.bodyText,\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    display: \"table-cell\",\n\n    ...(disabled\n      ? {\n          borderColor: theme.colors.borderColor,\n          backgroundColor: theme.colors.transparent,\n          color: theme.colors.fadedText40,\n          cursor: \"not-allowed\",\n        }\n      : {}),\n  })\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { useTheme } from \"@emotion/react\"\n\nimport { DynamicIcon } from \"@streamlit/lib/src/components/shared/Icon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport { PageLink as PageLinkProto } from \"@streamlit/lib/src/proto\"\nimport { BaseButtonTooltip } from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\nimport { LibContext } from \"@streamlit/lib/src/components/core/LibContext\"\nimport IsSidebarContext from \"@streamlit/lib/src/components/core/IsSidebarContext\"\n\nimport {\n  StyledNavLink,\n  StyledNavLinkContainer,\n  StyledNavLinkText,\n} from \"./styled-components\"\n\nexport interface Props {\n  disabled: boolean\n  element: PageLinkProto\n  width: number\n}\n\nfunction shouldUseContainerWidth(\n  useContainerWidth: boolean | null | undefined,\n  isInSidebar: boolean\n): boolean {\n  if (useContainerWidth === null && isInSidebar) {\n    return true\n  } else if (useContainerWidth === null && !isInSidebar) {\n    return false\n  }\n  return useContainerWidth === true ? true : false\n}\n\nfunction PageLink(props: Readonly<Props>): ReactElement {\n  const { onPageChange, currentPageScriptHash } = React.useContext(LibContext)\n  const isInSidebar = React.useContext(IsSidebarContext)\n\n  const { colors }: EmotionTheme = useTheme()\n\n  const { disabled, element, width } = props\n  const style = { width }\n\n  const useContainerWidth = shouldUseContainerWidth(\n    element.useContainerWidth,\n    isInSidebar\n  )\n\n  const isCurrentPage = currentPageScriptHash === element.pageScriptHash\n\n  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>): void => {\n    if (element.external) {\n      // External Page Link\n      if (disabled) {\n        e.preventDefault()\n      }\n    } else {\n      // MPA Page Link\n      e.preventDefault()\n      if (!disabled) {\n        onPageChange(element.pageScriptHash)\n      }\n    }\n  }\n\n  return (\n    <div className=\"stPageLink\" data-testid=\"stPageLink\" style={style}>\n      <BaseButtonTooltip help={element.help} placement={Placement.TOP_RIGHT}>\n        <StyledNavLinkContainer>\n          <StyledNavLink\n            data-testid=\"stPageLink-NavLink\"\n            disabled={disabled}\n            isCurrentPage={isCurrentPage}\n            fluidWidth={useContainerWidth ? width : false}\n            href={element.page}\n            target={element.external ? \"_blank\" : \"\"}\n            rel=\"noreferrer\"\n            onClick={handleClick}\n          >\n            {element.icon && (\n              <DynamicIcon\n                size=\"lg\"\n                color={colors.bodyText}\n                iconValue={element.icon}\n              />\n            )}\n            <StyledNavLinkText disabled={disabled}>\n              <StreamlitMarkdown\n                source={element.label}\n                allowHTML={false}\n                isLabel\n                boldLabel={isCurrentPage}\n                largerLabel\n                disableLinks\n              />\n            </StyledNavLinkText>\n          </StyledNavLink>\n        </StyledNavLinkContainer>\n      </BaseButtonTooltip>\n    </div>\n  )\n}\n\nexport default PageLink\n"],"names":["StyledNavLinkContainer","_styled","target","display","flexDirection","StyledNavLink","_ref","disabled","isCurrentPage","fluidWidth","theme","textDecoration","width","alignItems","justifyContent","gap","spacing","sm","borderRadius","radii","default","paddingLeft","paddingRight","marginTop","threeXS","marginBottom","lineHeight","lineHeights","menuItem","backgroundColor","colors","darkenedBgMix15","darkenedBgMix25","outline","none","borderColor","transparent","color","fadedText40","cursor","StyledNavLinkText","_ref2","bodyText","overflow","whiteSpace","textOverflow","props","onPageChange","currentPageScriptHash","React","LibContext","isInSidebar","IsSidebarContext","useTheme","element","style","useContainerWidth","shouldUseContainerWidth","pageScriptHash","_jsx","className","children","BaseButtonTooltip","help","placement","Placement","_jsxs","href","page","external","rel","onClick","e","preventDefault","icon","DynamicIcon","size","iconValue","StreamlitMarkdown","source","label","allowHTML","isLabel","boldLabel","largerLabel","disableLinks"],"sourceRoot":""}