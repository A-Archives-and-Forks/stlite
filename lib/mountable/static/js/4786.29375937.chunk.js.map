{"version":3,"file":"static/js/4786.29375937.chunk.js","mappings":"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","sources":["../../../streamlit/frontend/lib/src/components/shared/Toolbar/Toolbar.tsx","../../../streamlit/frontend/lib/src/components/shared/Toolbar/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/Form/FormClearHelper.ts","../../../streamlit/frontend/lib/src/util/createDownloadLinkElement.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { EmotionIcon } from \"@emotion-icons/emotion-icon\"\nimport { useTheme } from \"@emotion/react\"\nimport { StyledComponent } from \"@emotion/styled\"\nimport { Fullscreen, FullscreenExit } from \"@emotion-icons/material-outlined\"\n\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown\"\nimport Tooltip, {\n  Placement,\n} from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport Button, {\n  BaseButtonKind,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nimport { StyledToolbar, StyledToolbarWrapper } from \"./styled-components\"\n\nexport interface ToolbarActionProps {\n  label: string\n  icon?: EmotionIcon\n  show_label?: boolean\n  onClick: () => void\n}\n\nexport function ToolbarAction({\n  label,\n  show_label,\n  icon,\n  onClick,\n}: ToolbarActionProps): ReactElement {\n  const theme: EmotionTheme = useTheme()\n\n  const displayLabel = show_label ? label : \"\"\n  return (\n    <div data-testid=\"stElementToolbarButton\">\n      <Tooltip\n        content={\n          <StreamlitMarkdown\n            source={label}\n            allowHTML={false}\n            style={{ fontSize: theme.fontSizes.sm }}\n          />\n        }\n        placement={Placement.TOP}\n        // The default tooltip delay (== how fast the tooltip is triggered) of 200ms\n        // is a bit too fast for the toolbar use case. Therefore, we are setting it to 1000ms.\n        onMouseEnterDelay={1000}\n        inline\n      >\n        <Button\n          onClick={event => {\n            if (onClick) {\n              onClick()\n            }\n            event.stopPropagation()\n          }}\n          kind={BaseButtonKind.ELEMENT_TOOLBAR}\n          aria-label={label}\n        >\n          {icon && (\n            <Icon\n              content={icon}\n              size=\"md\"\n              testid=\"stElementToolbarButtonIcon\"\n            />\n          )}\n          {displayLabel && <span>{displayLabel}</span>}\n        </Button>\n      </Tooltip>\n    </div>\n  )\n}\n\nexport interface ToolbarProps {\n  onExpand?: () => void\n  onCollapse?: () => void\n  isFullScreen?: boolean\n  locked?: boolean\n  target?: StyledComponent<any, any, any>\n  disableFullscreenMode?: boolean\n}\n\nconst Toolbar: React.FC<React.PropsWithChildren<ToolbarProps>> = ({\n  onExpand,\n  onCollapse,\n  isFullScreen,\n  locked,\n  children,\n  target,\n  disableFullscreenMode,\n}): ReactElement => {\n  return (\n    <StyledToolbarWrapper\n      className=\"stElementToolbar\"\n      data-testid=\"stElementToolbar\"\n      locked={locked || isFullScreen}\n      target={target}\n    >\n      <StyledToolbar>\n        {children}\n        {onExpand && !disableFullscreenMode && !isFullScreen && (\n          <ToolbarAction\n            label=\"Fullscreen\"\n            icon={Fullscreen}\n            onClick={() => onExpand()}\n          />\n        )}\n        {onCollapse && !disableFullscreenMode && isFullScreen && (\n          <ToolbarAction\n            label=\"Close fullscreen\"\n            icon={FullscreenExit}\n            onClick={() => onCollapse()}\n          />\n        )}\n      </StyledToolbar>\n    </StyledToolbarWrapper>\n  )\n}\n\nexport default Toolbar\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled, { StyledComponent } from \"@emotion/styled\"\n\nimport { hasLightBackgroundColor } from \"@streamlit/lib/src/theme\"\n\nconst TOP_DISTANCE = \"-2.4rem\"\n\nexport interface StyledToolbarWrapperProps {\n  locked?: boolean\n  target?: StyledComponent<any, any, any>\n}\n\nexport const StyledToolbarWrapper = styled.div<StyledToolbarWrapperProps>(\n  ({ theme, locked, target }) => ({\n    padding: `${theme.spacing.sm} 0 ${theme.spacing.sm} ${theme.spacing.sm}`,\n    position: \"absolute\",\n    top: locked ? TOP_DISTANCE : \"-1rem\",\n    right: theme.spacing.none,\n    transition: \"none\",\n    ...(!locked && {\n      opacity: 0,\n      \"&:active, &:focus-visible, &:hover\": {\n        transition: \"opacity 150ms 100ms, top 100ms 100ms\",\n        opacity: 1,\n        top: TOP_DISTANCE,\n      },\n      ...(target && {\n        [`${target}:hover &, ${target}:active &, ${target}:focus-visible &`]: {\n          transition: \"opacity 150ms 100ms, top 100ms 100ms\",\n          opacity: 1,\n          top: TOP_DISTANCE,\n        },\n      }),\n    }),\n  })\n)\n\nexport const StyledToolbar = styled.div(({ theme }) => ({\n  color: hasLightBackgroundColor(theme)\n    ? theme.colors.fadedText60\n    : theme.colors.bodyText,\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  boxShadow: \"1px 2px 8px rgba(0, 0, 0, 0.08)\",\n  borderRadius: theme.radii.default,\n  backgroundColor: theme.colors.lightenedBg05,\n  width: \"fit-content\",\n  zIndex: theme.zIndices.sidebar + 1,\n}))\n\nexport const StyledToolbarElementContainer = styled.div<{\n  width?: number\n  height?: number\n  useContainerWidth: boolean\n}>(({ width, height, useContainerWidth }) => ({\n  position: \"relative\",\n  height: useContainerWidth ? height : \"fit-content\",\n  width: useContainerWidth ? width : \"fit-content\",\n  maxWidth: \"100%\",\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEffect } from \"react\"\n\nimport { SignalConnection } from \"typed-signals\"\n\nimport {\n  isValidFormId,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\n\nexport class FormClearHelper {\n  private formClearListener?: SignalConnection\n\n  private lastWidgetMgr?: WidgetStateManager\n\n  private lastFormId?: string\n\n  /**\n   * Register the listener that will be called when the widget's form is cleared.\n   * This should be called in the `render` function of every class-based widget\n   * element - it mimics the behavior of a `useEffect` hook, and ensures that\n   * subscription and unsubscription happen correctly.\n   *\n   * Hooks-based widgets can just use `useEffect` and call\n   * `widgetMgr.addFormClearedListener` directly. Or just use the convenient\n   * hook `useFormClearHelper`, below.\n   */\n  public manageFormClearListener(\n    widgetMgr: WidgetStateManager,\n    formId: string,\n    listener: () => void\n  ): void {\n    // If we're already subscribed and our params haven't changed, early-out.\n    if (\n      notNullOrUndefined(this.formClearListener) &&\n      this.lastWidgetMgr === widgetMgr &&\n      this.lastFormId === formId\n    ) {\n      return\n    }\n\n    // Close our previous subscription, if we had one.\n    this.disconnect()\n\n    // If we're not part of a form, there's nothing to do.\n    if (!isValidFormId(formId)) {\n      return\n    }\n\n    // Make the new subscription.\n    this.formClearListener = widgetMgr.addFormClearedListener(formId, listener)\n    this.lastWidgetMgr = widgetMgr\n    this.lastFormId = formId\n  }\n\n  /**\n   * Disconnect from the form-clear signal, if we're connected.\n   * This should be called from the `componentWillUnmount` function of every\n   * element that uses it.\n   */\n  public disconnect(): void {\n    this.formClearListener?.disconnect()\n    this.formClearListener = undefined\n    this.lastWidgetMgr = undefined\n    this.lastFormId = undefined\n  }\n}\n\ninterface FormElementProtoInterface {\n  formId: string\n}\n\ninterface FormClearHelperArgs {\n  element: FormElementProtoInterface\n  widgetMgr: WidgetStateManager\n  onFormCleared: () => void\n}\n\nexport function useFormClearHelper({\n  element,\n  widgetMgr,\n  onFormCleared,\n}: FormClearHelperArgs): void {\n  useEffect(() => {\n    if (!isValidFormId(element.formId)) {\n      return\n    }\n\n    const formClearListener = widgetMgr.addFormClearedListener(\n      element.formId,\n      onFormCleared\n    )\n\n    return () => {\n      formClearListener.disconnect()\n    }\n  }, [element, widgetMgr, onFormCleared])\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface DownloadLinkElementParameters {\n  enforceDownloadInNewTab: boolean\n  url: string\n  filename: string\n}\n\nconst createDownloadLinkElement = ({\n  enforceDownloadInNewTab,\n  url,\n  filename,\n}: DownloadLinkElementParameters): HTMLAnchorElement => {\n  const link = document.createElement(\"a\")\n  link.setAttribute(\"href\", url)\n  if (enforceDownloadInNewTab) {\n    link.setAttribute(\"target\", \"_blank\")\n  } else {\n    link.setAttribute(\"target\", \"_self\")\n  }\n  link.setAttribute(\"download\", filename)\n\n  return link\n}\n\nexport default createDownloadLinkElement\n"],"names":["ToolbarAction","_ref","label","show_label","icon","onClick","theme","useTheme","displayLabel","_jsx","children","Tooltip","content","StreamlitMarkdown","source","allowHTML","style","fontSize","fontSizes","sm","placement","Placement","TOP","onMouseEnterDelay","inline","_jsxs","Button","event","stopPropagation","kind","BaseButtonKind","ELEMENT_TOOLBAR","Icon","size","testid","_ref2","onExpand","onCollapse","isFullScreen","locked","target","disableFullscreenMode","StyledToolbarWrapper","className","StyledToolbar","Fullscreen","FullscreenExit","TOP_DISTANCE","_styled","padding","spacing","position","top","right","none","transition","opacity","color","hasLightBackgroundColor","colors","fadedText60","bodyText","display","flexDirection","alignItems","justifyContent","boxShadow","borderRadius","radii","default","backgroundColor","lightenedBg05","width","zIndex","zIndices","sidebar","StyledToolbarElementContainer","_ref3","height","useContainerWidth","maxWidth","FormClearHelper","constructor","formClearListener","lastWidgetMgr","lastFormId","manageFormClearListener","widgetMgr","formId","listener","notNullOrUndefined","this","disconnect","isValidFormId","addFormClearedListener","_this$formClearListen","undefined","useFormClearHelper","element","onFormCleared","useEffect","enforceDownloadInNewTab","url","filename","link","document","createElement","setAttribute"],"sourceRoot":""}