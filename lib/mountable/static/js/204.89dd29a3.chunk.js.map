{"version":3,"file":"static/js/204.89dd29a3.chunk.js","mappings":"iKAsBO,MAAMA,EAAgDC,IAEtD,IAADC,EAAA,IAFwD,SAC5DC,GACDF,EACC,MAAMG,EAAyC,QAA5BF,GAAGG,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAAJ,OAAA,EAAzBA,IAEtB,OAAOE,GACLG,EAAAA,EAAAA,cAAaJ,EAAUC,IAEvBI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAN,SAAGA,GACJ,C,qECbI,MAAMO,GAAkBC,E,OAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,gC,eCgB/B,MAAMC,EAAgDd,IAAA,IAAC,UACrDe,EAAS,YACTC,EAAW,aACXC,EAAY,iBACZC,EAAgB,kBAChBC,GACMnB,EAAA,OAGNO,EAAAA,EAAAA,KAACE,EAAe,CAACM,UAAWA,EAAW,cAAaA,EAAUb,SAC3DkB,IAAMH,GAAcI,KAAIC,IACvB,MAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWR,GAE3C,OAAOX,EAAAA,EAAAA,KAACY,EAAiB,CAAuBQ,aAAcJ,GAA/BP,EAAcM,EAA4B,KAE3D,EAGpB,GAAeM,EAAAA,EAAAA,MAAKd,E,qSCjCpB,MAMMe,EAAO,SAACC,GAAW,IAAEC,EAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAC,OAChCR,KAAKE,UAAYI,EAAMC,GAAOA,CAAG,EAoBtBI,GAAczB,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,EAAWV,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CACpDqC,SAAU,QACVC,IAAM,SACNC,WAAa,QACbC,OAAQJ,EAAMK,SAASC,SACvBC,KAAO,GAAEd,EA7BQ,GADA,QA+BjBe,eAAiB,GAAEf,EA7BA,SA8BnBgB,OAAS,QACTC,MAAQ,QACRC,cAAe,OAEfC,kBAAmB,SACnBC,cA9BgCC,EAAAA,EAAU;;;;gBAI5BrB,EAAK;gBACLA,EAAK;gBACLA,EAAK;;;;;gCAfA;;;;;EAwCnBsB,wBAAyB,UACzBC,mBAAoB,SACpBC,wBAAyB,EACzBC,QAAS,EACV,GAAC,I,eChCK,MAAMC,EAAa,IAEpBC,EAAyB,CAACC,EAAQC,EAAQC,GAE1CC,EAAkBJ,EAAavB,OAM/B4B,EAAoD7D,IAAA,IAAC,aACzD2B,GACD3B,EAAA,OAAKO,EAAAA,EAAAA,KAAC4B,EAAW,CAAC2B,IAAKN,EAAa7B,IAAiB,EAEhDoC,EAA2C,SAAaC,GAE1D,IAF2D,YAC7DhD,GACDgD,EAGC,OACEzD,EAAAA,EAAAA,KAACR,EAAAA,EAAsB,CAAAG,UACrBK,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACRC,UAAU,SACV,cAAY,SACZC,YAAaA,EACbE,iBAAkB0C,EAClB3C,aAAcsC,EACdpC,kBAAmB0C,KAI3B,EAEA,GAAejC,EAAAA,EAAAA,MAAKmC,E","sources":["../../../streamlit/frontend/lib/src/components/core/Portal/RenderInPortalIfExists.tsx","../../../streamlit/frontend/lib/src/components/elements/Particles/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/Particles/Particles.tsx","../../../streamlit/frontend/lib/src/components/elements/Snow/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/Snow/Snow.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, PropsWithChildren, useContext } from \"react\"\n\nimport { createPortal } from \"react-dom\"\n\nimport { PortalContext } from \"./PortalContext\"\n\nexport const RenderInPortalIfExists: FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const portalElement = useContext(PortalContext)?.()\n\n  return portalElement ? (\n    createPortal(children, portalElement)\n  ) : (\n    <>{children}</>\n  )\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledParticles = styled.div({\n  \"@media print\": {\n    display: \"none\",\n  },\n})\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo } from \"react\"\n\nimport range from \"lodash/range\"\n\nimport { StyledParticles } from \"./styled-components\"\n\nexport interface ParticleProps {\n  particleType: number\n}\n\nexport interface Props {\n  className: string\n  scriptRunId: string\n  numParticles: number\n  numParticleTypes: number\n  ParticleComponent: FC<React.PropsWithChildren<ParticleProps>>\n}\n\nconst Particles: FC<React.PropsWithChildren<Props>> = ({\n  className,\n  scriptRunId,\n  numParticles,\n  numParticleTypes,\n  ParticleComponent,\n}: Props) => (\n  // Keys should be unique each time, so React replaces the images in the DOM and their animations\n  // actually rerun.\n  <StyledParticles className={className} data-testid={className}>\n    {range(numParticles).map(i => {\n      const randNum = Math.floor(Math.random() * numParticleTypes)\n\n      return <ParticleComponent key={scriptRunId + i} particleType={randNum} />\n    })}\n  </StyledParticles>\n)\n\nexport default memo(Particles)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { keyframes, Keyframes } from \"@emotion/react\"\nimport styled from \"@emotion/styled\"\n\nconst IMAGE_HEIGHT = 150\nconst IMAGE_WIDTH = 150\nconst POS_MIN_VW = 10\nconst POS_MAX_VW = 90\nconst DELAY_MAX_MS = 4000\n\nconst rand = (max: number, min = 0): number =>\n  Math.random() * (max - min) + min\n\nconst moveDown = (): Keyframes => keyframes`\n  from {\n    transform:\n      translateY(0)\n      rotateX(${rand(360)}deg)\n      rotateY(${rand(360)}deg)\n      rotateZ(${rand(360)}deg);\n  }\n\n  to {\n    transform:\n      translateY(calc(100vh + ${IMAGE_HEIGHT}px))\n      rotateX(0)\n      rotateY(0)\n      rotateZ(0);\n  }\n`\n\nexport const StyledFlake = styled.img(({ theme }) => ({\n  position: \"fixed\",\n  top: `${-IMAGE_HEIGHT}px`,\n  marginLeft: `${-IMAGE_WIDTH / 2}px`,\n  zIndex: theme.zIndices.balloons,\n  left: `${rand(POS_MAX_VW, POS_MIN_VW)}vw`,\n  animationDelay: `${rand(DELAY_MAX_MS)}ms`,\n  height: `${IMAGE_HEIGHT}px`,\n  width: `${IMAGE_WIDTH}px`,\n  pointerEvents: \"none\",\n\n  animationDuration: \"3000ms\",\n  animationName: moveDown(),\n  animationTimingFunction: \"ease-in\",\n  animationDirection: \"normal\",\n  animationIterationCount: 1,\n  opacity: 1,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo } from \"react\"\n\n/*\n * IMPORTANT: If you change the asset imports below, make sure they still work if Streamlit is\n * served from a subpath.\n */\nimport Flake0 from \"@streamlit/lib/src/assets/img/snow/flake-0.png\"\nimport Flake1 from \"@streamlit/lib/src/assets/img/snow/flake-1.png\"\nimport Flake2 from \"@streamlit/lib/src/assets/img/snow/flake-2.png\"\nimport Particles from \"@streamlit/lib/src/components/elements/Particles\"\nimport { ParticleProps } from \"@streamlit/lib/src/components/elements/Particles/Particles\"\nimport { RenderInPortalIfExists } from \"@streamlit/lib/src/components/core/Portal/RenderInPortalIfExists\"\n\nimport { StyledFlake } from \"./styled-components\"\n\nexport const NUM_FLAKES = 100\n\nconst FLAKE_IMAGES: string[] = [Flake0, Flake1, Flake2]\n\nconst NUM_FLAKE_TYPES = FLAKE_IMAGES.length\n\nexport interface Props {\n  scriptRunId: string\n}\n\nconst Flake: FC<React.PropsWithChildren<ParticleProps>> = ({\n  particleType,\n}) => <StyledFlake src={FLAKE_IMAGES[particleType]} />\n\nconst Snow: FC<React.PropsWithChildren<Props>> = function Snow({\n  scriptRunId,\n}) {\n  // Keys should be unique each time, so React replaces the images in the DOM and their animations\n  // actually rerun.\n  return (\n    <RenderInPortalIfExists>\n      <Particles\n        className=\"stSnow\"\n        data-testid=\"stSnow\"\n        scriptRunId={scriptRunId}\n        numParticleTypes={NUM_FLAKE_TYPES}\n        numParticles={NUM_FLAKES}\n        ParticleComponent={Flake}\n      />\n    </RenderInPortalIfExists>\n  )\n}\n\nexport default memo(Snow)\n"],"names":["RenderInPortalIfExists","_ref","_useContext","children","portalElement","useContext","PortalContext","createPortal","_jsx","_Fragment","StyledParticles","_styled","target","name","styles","Particles","className","scriptRunId","numParticles","numParticleTypes","ParticleComponent","range","map","i","randNum","Math","floor","random","particleType","memo","rand","max","min","arguments","length","undefined","StyledFlake","theme","position","top","marginLeft","zIndex","zIndices","balloons","left","animationDelay","height","width","pointerEvents","animationDuration","animationName","keyframes","animationTimingFunction","animationDirection","animationIterationCount","opacity","NUM_FLAKES","FLAKE_IMAGES","Flake0","Flake1","Flake2","NUM_FLAKE_TYPES","Flake","src","Snow","_ref2"],"sourceRoot":""}