{"version":3,"file":"static/js/3651.afb9ad48.chunk.js","mappings":"0NAoBO,MAAMA,GAAsBC,EAAAA,EAAAA,GAAOC,EAAAA,EAAO,CAC/CC,kBAAmBC,EAAAA,EAAWC,OAAA,aADGJ,EAEhCK,IAAmC,IAAlC,MAAEC,EAAK,kBAAEC,GAAmBF,EAC9B,MAAO,CACLG,UAAWF,EAAMG,QAAQC,KACzBC,aAAcL,EAAMG,QAAQC,KAC5BE,YAAaN,EAAMG,QAAQC,KAC3BG,WAAYP,EAAMG,QAAQC,KAC1BI,YAAaR,EAAMS,OAAOC,YAC1BC,eAAgBV,EACZD,EAAMS,OAAOG,QACbZ,EAAMS,OAAOI,OACjBC,SAAU,EACVC,WAAY,EACb,GACF,IAEYC,GAAyBtB,EAAAA,EAAAA,GAAA,OAAAI,OAAA,aAAAJ,EAAWuB,IAAA,IAAC,MAAEjB,GAAOiB,EAAA,MAAM,CAC/DC,QAAS,OACTC,IAAKnB,EAAMG,QAAQiB,GACnBC,WAAY,SACZC,MAAO,OACR,GAAC,I,eCSF,QAnBA,SAAgBvB,GAAkD,IAAjD,MAAEuB,EAAK,QAAEC,GAAuBxB,EAC/C,MAAMC,GAAsBwB,EAAAA,EAAAA,MACtB,YAAEC,GAAgBC,EAAAA,WAAiBC,EAAAA,GACnCC,IAAoBC,EAAAA,EAAAA,IAAcJ,GAClCK,EAAY,CAAER,SAEpB,OACES,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAY,cAAY,YAAYC,MAAOH,EAAUI,UAClEC,EAAAA,EAAAA,MAACnB,EAAsB,CAAAkB,SAAA,EACrBH,EAAAA,EAAAA,KAACtC,EAAmB,CAClB2C,MAAOpC,EAAMqC,UAAUC,MACvBrC,kBAAmB2B,KAErBG,EAAAA,EAAAA,KAACQ,EAAAA,GAAiB,CAACC,OAAQjB,EAAQkB,KAAMC,WAAW,QAI5D,C","sources":["../../../streamlit/frontend/lib/src/components/elements/Spinner/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/Spinner/Spinner.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\nimport { Spinner } from \"baseui/spinner\"\nimport isPropValid from \"@emotion/is-prop-valid\"\n\nexport const ThemedStyledSpinner = styled(Spinner, {\n  shouldForwardProp: isPropValid,\n})(({ theme, $usingCustomTheme }) => {\n  return {\n    marginTop: theme.spacing.none,\n    marginBottom: theme.spacing.none,\n    marginRight: theme.spacing.none,\n    marginLeft: theme.spacing.none,\n    borderColor: theme.colors.fadedText10,\n    borderTopColor: $usingCustomTheme\n      ? theme.colors.primary\n      : theme.colors.blue70,\n    flexGrow: 0,\n    flexShrink: 0,\n  }\n})\n\nexport const StyledSpinnerContainer = styled.div(({ theme }) => ({\n  display: \"flex\",\n  gap: theme.spacing.lg,\n  alignItems: \"center\",\n  width: \"100%\",\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { useTheme } from \"@emotion/react\"\nimport { EmotionTheme, isPresetTheme } from \"@streamlit/lib/src/theme\"\nimport { Spinner as SpinnerProto } from \"@streamlit/lib/src/proto\"\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown\"\nimport { LibContext } from \"@streamlit/lib/src/components/core/LibContext\"\nimport {\n  StyledSpinnerContainer,\n  ThemedStyledSpinner,\n} from \"./styled-components\"\n\nexport interface SpinnerProps {\n  width: number\n  element: SpinnerProto\n}\n\nfunction Spinner({ width, element }: SpinnerProps): ReactElement {\n  const theme: EmotionTheme = useTheme()\n  const { activeTheme } = React.useContext(LibContext)\n  const usingCustomTheme = !isPresetTheme(activeTheme)\n  const styleProp = { width }\n\n  return (\n    <div className=\"stSpinner\" data-testid=\"stSpinner\" style={styleProp}>\n      <StyledSpinnerContainer>\n        <ThemedStyledSpinner\n          $size={theme.iconSizes.twoXL}\n          $usingCustomTheme={usingCustomTheme}\n        />\n        <StreamlitMarkdown source={element.text} allowHTML={false} />\n      </StyledSpinnerContainer>\n    </div>\n  )\n}\n\nexport default Spinner\n"],"names":["ThemedStyledSpinner","_styled","Spinner","shouldForwardProp","isPropValid","target","_ref","theme","$usingCustomTheme","marginTop","spacing","none","marginBottom","marginRight","marginLeft","borderColor","colors","fadedText10","borderTopColor","primary","blue70","flexGrow","flexShrink","StyledSpinnerContainer","_ref2","display","gap","lg","alignItems","width","element","useTheme","activeTheme","React","LibContext","usingCustomTheme","isPresetTheme","styleProp","_jsx","className","style","children","_jsxs","$size","iconSizes","twoXL","StreamlitMarkdown","source","text","allowHTML"],"sourceRoot":""}