{"version":3,"file":"static/js/7863.feaa4161.chunk.js","mappings":"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","sources":["../../../streamlit/frontend/lib/src/components/shared/Toolbar/styled-components.ts","../../../streamlit/frontend/lib/src/components/shared/Toolbar/Toolbar.tsx","../../../streamlit/frontend/lib/src/hooks/useWidgetManagerElementState.tsx","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/NoMicPermissions.tsx","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/Placeholder.tsx","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/constants.ts","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/formatTime.ts","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/AudioInputActionButtons.tsx","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/convertAudioToWav.ts","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/AudioInputErrorState.tsx","../../../streamlit/frontend/lib/src/components/widgets/AudioInput/AudioInput.tsx","../../../streamlit/frontend/lib/src/util/uploadFiles.ts","../../../streamlit/frontend/lib/src/components/widgets/Form/FormClearHelper.ts","../../../streamlit/frontend/lib/src/util/Hooks.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled, { StyledComponent } from \"@emotion/styled\"\n\nimport { hasLightBackgroundColor } from \"@streamlit/lib/src/theme\"\n\nconst TOP_DISTANCE = \"-2.4rem\"\n\nexport interface StyledToolbarWrapperProps {\n  locked?: boolean\n  target?: StyledComponent<any, any, any>\n}\n\nexport const StyledToolbarWrapper = styled.div<StyledToolbarWrapperProps>(\n  ({ theme, locked, target }) => ({\n    padding: `${theme.spacing.sm} 0 ${theme.spacing.sm} ${theme.spacing.sm}`,\n    position: \"absolute\",\n    top: locked ? TOP_DISTANCE : \"-1rem\",\n    right: theme.spacing.none,\n    transition: \"none\",\n    ...(!locked && {\n      opacity: 0,\n      \"&:active, &:focus-visible, &:hover\": {\n        transition: \"opacity 150ms 100ms, top 100ms 100ms\",\n        opacity: 1,\n        top: TOP_DISTANCE,\n      },\n      ...(target && {\n        [`${target}:hover &, ${target}:active &, ${target}:focus-visible &`]: {\n          transition: \"opacity 150ms 100ms, top 100ms 100ms\",\n          opacity: 1,\n          top: TOP_DISTANCE,\n        },\n      }),\n    }),\n  })\n)\n\nexport const StyledToolbar = styled.div(({ theme }) => ({\n  color: hasLightBackgroundColor(theme)\n    ? theme.colors.fadedText60\n    : theme.colors.bodyText,\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  boxShadow: \"1px 2px 8px rgba(0, 0, 0, 0.08)\",\n  borderRadius: theme.radii.default,\n  backgroundColor: theme.colors.lightenedBg05,\n  width: \"fit-content\",\n  zIndex: theme.zIndices.sidebar + 1,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { EmotionIcon } from \"@emotion-icons/emotion-icon\"\nimport { useTheme } from \"@emotion/react\"\nimport { StyledComponent } from \"@emotion/styled\"\nimport { Fullscreen, FullscreenExit } from \"@emotion-icons/material-outlined\"\n\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown\"\nimport Tooltip, {\n  Placement,\n} from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport Button, {\n  BaseButtonKind,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nimport { StyledToolbar, StyledToolbarWrapper } from \"./styled-components\"\n\nexport interface ToolbarActionProps {\n  label: string\n  icon?: EmotionIcon\n  show_label?: boolean\n  onClick: () => void\n}\n\nexport function ToolbarAction({\n  label,\n  show_label,\n  icon,\n  onClick,\n}: ToolbarActionProps): ReactElement {\n  const theme: EmotionTheme = useTheme()\n\n  const displayLabel = show_label ? label : \"\"\n  return (\n    <div data-testid=\"stElementToolbarButton\">\n      <Tooltip\n        content={\n          <StreamlitMarkdown\n            source={label}\n            allowHTML={false}\n            style={{ fontSize: theme.fontSizes.sm }}\n          />\n        }\n        placement={Placement.TOP}\n        // The default tooltip delay (== how fast the tooltip is triggered) of 200ms\n        // is a bit too fast for the toolbar use case. Therefore, we are setting it to 1000ms.\n        onMouseEnterDelay={1000}\n        inline\n      >\n        <Button\n          onClick={event => {\n            if (onClick) {\n              onClick()\n            }\n            event.stopPropagation()\n          }}\n          kind={BaseButtonKind.ELEMENT_TOOLBAR}\n          aria-label={label}\n        >\n          {icon && (\n            <Icon\n              content={icon}\n              size=\"md\"\n              testid=\"stElementToolbarButtonIcon\"\n            />\n          )}\n          {displayLabel && <span>{displayLabel}</span>}\n        </Button>\n      </Tooltip>\n    </div>\n  )\n}\n\nexport interface ToolbarProps {\n  onExpand?: () => void\n  onCollapse?: () => void\n  isFullScreen?: boolean\n  locked?: boolean\n  target?: StyledComponent<any, any, any>\n  disableFullscreenMode?: boolean\n}\n\nconst Toolbar: React.FC<React.PropsWithChildren<ToolbarProps>> = ({\n  onExpand,\n  onCollapse,\n  isFullScreen,\n  locked,\n  children,\n  target,\n  disableFullscreenMode,\n}): ReactElement => {\n  return (\n    <StyledToolbarWrapper\n      className=\"stElementToolbar\"\n      data-testid=\"stElementToolbar\"\n      locked={locked || isFullScreen}\n      target={target}\n    >\n      <StyledToolbar>\n        {children}\n        {onExpand && !disableFullscreenMode && !isFullScreen && (\n          <ToolbarAction\n            label=\"Fullscreen\"\n            icon={Fullscreen}\n            onClick={() => onExpand()}\n          />\n        )}\n        {onCollapse && !disableFullscreenMode && isFullScreen && (\n          <ToolbarAction\n            label=\"Close fullscreen\"\n            icon={FullscreenExit}\n            onClick={() => onCollapse()}\n          />\n        )}\n      </StyledToolbar>\n    </StyledToolbarWrapper>\n  )\n}\n\nexport default Toolbar\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useCallback, useEffect, useState } from \"react\"\n\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport {\n  isNullOrUndefined,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\n\n/**\n * Think of useState, but the state is also persisted in the widget manager.\n * This allows you to have the state be persisted between mounting and unmounting of the component.\n * @param widgetMgr - The widget manager instance to use\n * @param id - The id of the widget to store the state for\n * @param key - The key of the state to store\n * @param defaultValue - The default value to use if the state is not set in the widget manager\n * @returns A tuple containing the current state and a function to set the state\n */\nconst useWidgetManagerElementState = <T,>({\n  widgetMgr,\n  id,\n  key,\n  defaultValue,\n}: {\n  widgetMgr: WidgetStateManager\n  id: string\n  key: string\n  defaultValue?: T\n}): [T, (value: T) => void] => {\n  useEffect(() => {\n    const existingValue = widgetMgr.getElementState(id, key)\n    if (isNullOrUndefined(existingValue) && notNullOrUndefined(defaultValue)) {\n      widgetMgr.setElementState(id, key, defaultValue)\n    }\n  }, [widgetMgr, id, key, defaultValue])\n\n  const [state, setStateInternal] = useState<T>(\n    widgetMgr.getElementState(id, key) ?? defaultValue\n  )\n\n  const setState = useCallback(\n    (value: T) => {\n      widgetMgr.setElementState(id, key, value)\n      setStateInternal(value)\n    },\n    [widgetMgr, id, key]\n  )\n\n  return [state, setState]\n}\n\nexport default useWidgetManagerElementState\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\nimport { Spinner } from \"baseui/spinner\"\n\nexport const StyledAudioInputContainerDiv = styled.div()\n\nexport const StyledWaveformContainerDiv = styled.div(({ theme }) => ({\n  height: theme.sizes.largestElementHeight,\n  width: \"100%\",\n  background: theme.genericColors.secondaryBg,\n  borderRadius: theme.radii.default,\n  marginBottom: theme.spacing.twoXS,\n  display: \"flex\",\n  alignItems: \"center\",\n  position: \"relative\",\n  paddingLeft: theme.spacing.xs,\n  paddingRight: theme.spacing.sm,\n}))\n\nexport const StyledWaveformInnerDiv = styled.div({\n  flex: 1,\n})\n\nexport const StyledWaveSurferDiv = styled.div<{ show: boolean }>(\n  ({ show }) => ({\n    display: show ? \"block\" : \"none\",\n  })\n)\n\nexport const StyledWaveformTimeCode = styled.span<{\n  isPlayingOrRecording: boolean\n}>(({ theme, isPlayingOrRecording }) => ({\n  margin: theme.spacing.sm,\n  fontFamily: theme.fonts.monospace,\n  color: isPlayingOrRecording\n    ? theme.genericColors.bodyText\n    : theme.colors.fadedText60,\n  backgroundColor: theme.genericColors.secondaryBg,\n  fontSize: theme.fontSizes.sm,\n}))\n\nexport const StyledErrorContainerDiv = styled.div(() => ({\n  width: \"100%\",\n  textAlign: \"center\",\n  overflow: \"hidden\",\n}))\n\nexport const StyledErrorTextSpan = styled.span(({ theme }) => ({\n  color: theme.colors.bodyText,\n}))\n\nexport const StyledNoMicInputLearnMoreLink = styled.a()\n\n// Placeholder\nexport const StyledPlaceholderContainerDiv = styled.div(({ theme }) => ({\n  height: theme.sizes.largestElementHeight,\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}))\n\nexport const StyledPlaceholderDotsDiv = styled.div(({ theme }) => ({\n  height: 10,\n  opacity: 0.2,\n  width: \"100%\",\n  backgroundImage: `radial-gradient(${theme.colors.fadedText10} 40%, transparent 40%)`,\n  backgroundSize: \"10px 10px\",\n  backgroundRepeat: \"repeat\",\n}))\n\nexport const StyledActionButtonStopRecordingDiv = styled.span(({ theme }) => ({\n  \"& > button\": {\n    color: theme.colors.primary,\n    padding: theme.spacing.threeXS,\n  },\n  \"& > button:hover, & > button:focus\": {\n    color: theme.colors.red,\n  },\n}))\n\nexport const StyledActionButtonStartRecordingDiv = styled.span(\n  ({ theme }) => ({\n    \"& > button\": {\n      padding: theme.spacing.threeXS,\n      color: theme.colors.fadedText40,\n    },\n    \"& > button:hover, & > button:focus\": {\n      color: theme.colors.primary,\n    },\n  })\n)\n\nexport const StyledActionButtonPlayPauseDiv = styled.span(({ theme }) => ({\n  \"& > button\": {\n    padding: theme.spacing.threeXS,\n    color: theme.colors.fadedText60,\n  },\n  \"& > button:hover, & > button:focus\": {\n    color: theme.colors.bodyText,\n  },\n}))\n\nexport const StyledActionButtonContainerDiv = styled.div(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexGrow: 0,\n  flexShrink: 1,\n  padding: theme.spacing.xs,\n  gap: theme.spacing.twoXS,\n  marginRight: theme.spacing.twoXS,\n}))\n\nexport const StyledWidgetLabelHelp = styled.div(({ theme }) => ({\n  marginLeft: theme.spacing.sm,\n}))\n\nexport const StyledSpinner = styled(Spinner)(({ theme }) => {\n  return {\n    fontSize: theme.fontSizes.sm,\n    width: \"1.375rem\",\n    height: \"1.375rem\",\n    borderWidth: \"3px\",\n    radius: theme.radii.md,\n    justifyContents: \"center\",\n    padding: theme.spacing.none,\n    margin: theme.spacing.none,\n    borderColor: theme.colors.borderColor,\n    borderTopColor: theme.colors.primary,\n    flexGrow: 0,\n    flexShrink: 0,\n  }\n})\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { ENABLE_PERIPHERALS_DOCS_URL } from \"@streamlit/lib/src/urls\"\n\nimport {\n  StyledErrorContainerDiv,\n  StyledErrorTextSpan,\n  StyledNoMicInputLearnMoreLink,\n} from \"./styled-components\"\n\nconst NoMicPermissions = (): ReactElement => {\n  return (\n    <StyledErrorContainerDiv>\n      <StyledErrorTextSpan>\n        This app would like to use your microphone.\n      </StyledErrorTextSpan>{\" \"}\n      <StyledNoMicInputLearnMoreLink href={ENABLE_PERIPHERALS_DOCS_URL}>\n        Learn how to allow access.\n      </StyledNoMicInputLearnMoreLink>\n    </StyledErrorContainerDiv>\n  )\n}\n\nexport default NoMicPermissions\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport {\n  StyledPlaceholderContainerDiv,\n  StyledPlaceholderDotsDiv,\n} from \"./styled-components\"\n\nconst Placeholder = (): ReactElement => {\n  return (\n    <StyledPlaceholderContainerDiv>\n      <StyledPlaceholderDotsDiv />\n    </StyledPlaceholderContainerDiv>\n  )\n}\n\nexport default Placeholder\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const WAVEFORM_PADDING = 4\nexport const BAR_WIDTH = 4\nexport const BAR_GAP = 4\nexport const BAR_RADIUS = 8\nexport const CURSOR_WIDTH = 0\n\nexport const STARTING_TIME_STRING = \"00:00\"\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst formatTime = (timeMs: number): string => {\n  const date = new Date(timeMs)\n\n  return date.toLocaleTimeString(undefined, {\n    minute: \"2-digit\",\n    second: \"2-digit\",\n  })\n}\n\nexport default formatTime\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport { Mic } from \"@emotion-icons/material-outlined\"\nimport {\n  Pause,\n  PlayArrow,\n  Refresh,\n  StopCircle,\n} from \"@emotion-icons/material-rounded\"\nimport { EmotionIcon } from \"@emotion-icons/emotion-icon\"\n\nimport BaseButton, {\n  BaseButtonKind,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\n\nimport {\n  StyledActionButtonContainerDiv,\n  StyledActionButtonPlayPauseDiv,\n  StyledActionButtonStartRecordingDiv,\n  StyledActionButtonStopRecordingDiv,\n  StyledSpinner,\n} from \"./styled-components\"\n\ninterface BaseActionButtonProps {\n  onClick: () => void\n  disabled: boolean\n  ariaLabel: string\n  iconContent: EmotionIcon\n}\n\nconst ActionButton: React.FC<BaseActionButtonProps> = ({\n  onClick,\n  disabled,\n  ariaLabel,\n  iconContent,\n}) => (\n  <BaseButton\n    kind={BaseButtonKind.BORDERLESS_ICON}\n    onClick={onClick}\n    disabled={disabled}\n    aria-label={ariaLabel}\n    fluidWidth\n    data-testid=\"stAudioInputActionButton\"\n  >\n    <Icon content={iconContent} size=\"lg\" color=\"inherit\" />\n  </BaseButton>\n)\n\nexport interface AudioInputActionButtonProps {\n  disabled: boolean\n  isRecording: boolean\n  isPlaying: boolean\n  isUploading: boolean\n  isError: boolean\n  recordingUrlExists: boolean\n  startRecording(): void\n  stopRecording(): void\n  onClickPlayPause(): void\n  onClear(): void\n}\n\ninterface AudioInputStopRecordingButtonProps {\n  disabled: boolean\n  stopRecording(): void\n}\n\ninterface AudioInputPlayPauseButtonProps {\n  disabled: boolean\n  isPlaying: boolean\n  onClickPlayPause(): void\n}\n\ninterface AudioInputStartRecordingButtonProps {\n  disabled: boolean\n  startRecording(): void\n}\n\ninterface AudioInputResetButtonProps {\n  onClick(): void\n}\n\nexport const AudioInputStopRecordingButton: React.FC<\n  AudioInputStopRecordingButtonProps\n> = ({ disabled, stopRecording }) => (\n  <StyledActionButtonStopRecordingDiv>\n    <ActionButton\n      onClick={stopRecording}\n      disabled={disabled}\n      ariaLabel=\"Stop recording\"\n      iconContent={StopCircle}\n    />\n  </StyledActionButtonStopRecordingDiv>\n)\n\nexport const AudioInputPlayPauseButton: React.FC<\n  AudioInputPlayPauseButtonProps\n> = ({ disabled, isPlaying, onClickPlayPause }) => {\n  return (\n    <StyledActionButtonPlayPauseDiv>\n      {isPlaying ? (\n        <ActionButton\n          onClick={onClickPlayPause}\n          disabled={disabled}\n          ariaLabel=\"Pause\"\n          iconContent={Pause}\n        />\n      ) : (\n        <ActionButton\n          onClick={onClickPlayPause}\n          disabled={disabled}\n          ariaLabel=\"Play\"\n          iconContent={PlayArrow}\n        />\n      )}\n    </StyledActionButtonPlayPauseDiv>\n  )\n}\n\nexport const AudioInputStartRecordingButton: React.FC<\n  AudioInputStartRecordingButtonProps\n> = ({ disabled, startRecording }) => (\n  <StyledActionButtonStartRecordingDiv>\n    <ActionButton\n      onClick={startRecording}\n      disabled={disabled}\n      ariaLabel=\"Record\"\n      iconContent={Mic}\n    />\n  </StyledActionButtonStartRecordingDiv>\n)\n\nexport const AudioInputResetButton: React.FC<AudioInputResetButtonProps> = ({\n  onClick,\n}) => (\n  <StyledActionButtonPlayPauseDiv>\n    <ActionButton\n      disabled={false}\n      onClick={onClick}\n      ariaLabel=\"Reset\"\n      iconContent={Refresh}\n    />\n  </StyledActionButtonPlayPauseDiv>\n)\n\nconst AudioInputActionButtons: React.FC<AudioInputActionButtonProps> = ({\n  disabled,\n  isRecording,\n  isPlaying,\n  isUploading,\n  isError,\n  recordingUrlExists,\n  startRecording,\n  stopRecording,\n  onClickPlayPause,\n  onClear,\n}) => {\n  if (isError) {\n    return (\n      <StyledActionButtonContainerDiv>\n        <AudioInputResetButton onClick={onClear} />\n      </StyledActionButtonContainerDiv>\n    )\n  }\n\n  if (isUploading) {\n    return (\n      <StyledActionButtonContainerDiv>\n        <StyledSpinner aria-label=\"Uploading\" />\n      </StyledActionButtonContainerDiv>\n    )\n  }\n\n  return (\n    <StyledActionButtonContainerDiv>\n      {isRecording ? (\n        <AudioInputStopRecordingButton\n          disabled={disabled}\n          stopRecording={stopRecording}\n        />\n      ) : (\n        <AudioInputStartRecordingButton\n          disabled={disabled}\n          startRecording={startRecording}\n        />\n      )}\n      {recordingUrlExists && (\n        <AudioInputPlayPauseButton\n          disabled={disabled}\n          isPlaying={isPlaying}\n          onClickPlayPause={onClickPlayPause}\n        />\n      )}\n    </StyledActionButtonContainerDiv>\n  )\n}\n\nexport default memo(AudioInputActionButtons)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// code in this file was adapted from recorder.js library\n\nimport { logError } from \"@streamlit/lib/src/util/log\"\n\n/**\n * Converts a file Blob (audio/video) to a WAV Blob.\n * @param fileBlob - The input file as a Blob.\n * @returns - A Promise resolving with the WAV file as a Blob.\n */\nasync function convertFileToWav(fileBlob: Blob): Promise<Blob | undefined> {\n  const audioContext = new window.AudioContext()\n  const arrayBuffer = await fileBlob.arrayBuffer()\n\n  let audioBuffer: AudioBuffer\n  try {\n    audioBuffer = await audioContext.decodeAudioData(arrayBuffer)\n  } catch (error) {\n    logError(error)\n    return undefined // Return undefined if decoding fails\n  }\n\n  const numOfChan = audioBuffer.numberOfChannels\n  const sampleRate = audioBuffer.sampleRate\n  const length = audioBuffer.length * numOfChan * 2 + 44\n  const buffer = new ArrayBuffer(length)\n  const view = new DataView(buffer)\n\n  // WAV header metadata\n  const wavHeader = {\n    0: { type: \"string\", value: \"RIFF\" },\n    4: { type: \"uint32\", value: 36 + audioBuffer.length * 2 * numOfChan },\n    8: { type: \"string\", value: \"WAVE\" },\n    12: { type: \"string\", value: \"fmt \" },\n    16: { type: \"uint32\", value: 16 }, // PCM format\n    20: { type: \"uint16\", value: 1 }, // PCM format code\n    22: { type: \"uint16\", value: numOfChan }, // Number of channels\n    24: { type: \"uint32\", value: sampleRate }, // Sample rate\n    28: { type: \"uint32\", value: sampleRate * numOfChan * 2 }, // Byte rate\n    32: { type: \"uint16\", value: numOfChan * 2 }, // Block align\n    34: { type: \"uint16\", value: 16 }, // Bits per sample (16-bit)\n    36: { type: \"string\", value: \"data\" },\n    40: { type: \"uint32\", value: audioBuffer.length * numOfChan * 2 }, // Data chunk length\n  }\n\n  // Write WAV header from the dictionary using Object.entries\n  Object.entries(wavHeader).forEach(([offset, { type, value }]) => {\n    const intOffset = parseInt(offset, 10)\n    if (type === \"string\") {\n      writeString(view, intOffset, value as string)\n    } else if (type === \"uint32\") {\n      view.setUint32(intOffset, value as number, true)\n    } else if (type === \"uint16\") {\n      view.setUint16(intOffset, value as number, true)\n    }\n  })\n\n  // Write PCM data\n  for (let channel = 0; channel < numOfChan; channel++) {\n    floatTo16BitPCM(\n      view,\n      44 + channel * audioBuffer.length * 2,\n      audioBuffer.getChannelData(channel)\n    )\n  }\n\n  const wavArray = new Uint8Array(buffer)\n  return new Blob([wavArray], { type: \"audio/wav\" })\n}\n\n/**\n * Converts a floating-point sample array into 16-bit PCM format.\n * @param output - The DataView to write to.\n * @param offset - The starting offset in the DataView.\n * @param input - The Float32Array with the input samples.\n */\nfunction floatTo16BitPCM(\n  output: DataView,\n  offset: number,\n  input: Float32Array\n): void {\n  for (let i = 0; i < input.length; i++, offset += 2) {\n    const s = Math.max(-1, Math.min(1, input[i]))\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true)\n  }\n}\n\n/**\n * Writes a string to a DataView at the specified offset.\n * @param view - The DataView to write to.\n * @param offset - The starting offset in the DataView.\n * @param string - The string to write.\n */\nfunction writeString(view: DataView, offset: number, string: string): void {\n  for (let i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i))\n  }\n}\n\nexport default convertFileToWav\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport {\n  StyledErrorContainerDiv,\n  StyledErrorTextSpan,\n} from \"./styled-components\"\n\nconst AudioInputErrorState = (): ReactElement => {\n  return (\n    <StyledErrorContainerDiv>\n      <StyledErrorTextSpan>\n        An error has occurred, please try again.\n      </StyledErrorTextSpan>\n    </StyledErrorContainerDiv>\n  )\n}\n\nexport default AudioInputErrorState\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  memo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\"\n\nimport { useTheme } from \"@emotion/react\"\nimport WaveSurfer from \"wavesurfer.js\"\nimport RecordPlugin from \"wavesurfer.js/dist/plugins/record\"\nimport { Delete } from \"@emotion-icons/material-outlined\"\nimport isEqual from \"lodash/isEqual\"\n\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport { FileUploadClient } from \"@streamlit/lib/src/FileUploadClient\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport { AudioInput as AudioInputProto } from \"@streamlit/lib/src/proto\"\nimport Toolbar, {\n  ToolbarAction,\n} from \"@streamlit/lib/src/components/shared/Toolbar\"\nimport {\n  isNullOrUndefined,\n  labelVisibilityProtoValueToEnum,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\nimport { blend } from \"@streamlit/lib/src/theme/utils\"\nimport { uploadFiles } from \"@streamlit/lib/src/util/uploadFiles\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport { WidgetLabel } from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport { usePrevious } from \"@streamlit/lib/src/util/Hooks\"\nimport useWidgetManagerElementState from \"@streamlit/lib/src/hooks/useWidgetManagerElementState\"\n\nimport {\n  StyledAudioInputContainerDiv,\n  StyledWaveformContainerDiv,\n  StyledWaveformInnerDiv,\n  StyledWaveformTimeCode,\n  StyledWaveSurferDiv,\n  StyledWidgetLabelHelp,\n} from \"./styled-components\"\nimport NoMicPermissions from \"./NoMicPermissions\"\nimport Placeholder from \"./Placeholder\"\nimport {\n  BAR_GAP,\n  BAR_RADIUS,\n  BAR_WIDTH,\n  CURSOR_WIDTH,\n  STARTING_TIME_STRING,\n  WAVEFORM_PADDING,\n} from \"./constants\"\nimport formatTime from \"./formatTime\"\nimport AudioInputActionButtons from \"./AudioInputActionButtons\"\nimport convertAudioToWav from \"./convertAudioToWav\"\nimport AudioInputErrorState from \"./AudioInputErrorState\"\n\nexport interface Props {\n  element: AudioInputProto\n  uploadClient: FileUploadClient\n  widgetMgr: WidgetStateManager\n  fragmentId?: string\n  disabled: boolean\n}\n\nconst AudioInput: React.FC<Props> = ({\n  element,\n  uploadClient,\n  widgetMgr,\n  fragmentId,\n  disabled,\n}): ReactElement => {\n  const theme = useTheme()\n  const previousTheme = usePrevious(theme)\n  const [wavesurfer, setWavesurfer] = useState<WaveSurfer | null>(null)\n  const waveSurferRef = React.useRef<HTMLDivElement | null>(null)\n  const [deleteFileUrl, setDeleteFileUrl] = useWidgetManagerElementState<\n    string | null\n  >({\n    widgetMgr,\n    id: element.id,\n    key: \"deleteFileUrl\",\n  })\n  const [recordPlugin, setRecordPlugin] = useState<RecordPlugin | null>(null)\n  // to eventually show the user the available audio devices\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [availableAudioDevices, setAvailableAudioDevices] = useState<\n    MediaDeviceInfo[]\n  >([])\n  const [activeAudioDeviceId, setActiveAudioDeviceId] = useState<\n    string | null\n  >(null)\n\n  const [recordingUrl, setRecordingUrl] = useWidgetManagerElementState<\n    string | null\n  >({\n    widgetMgr,\n    id: element.id,\n    key: \"recordingUrl\",\n  })\n  const [, setRerender] = useState(0)\n  const forceRerender = (): void => {\n    setRerender(prev => prev + 1)\n  }\n  const [progressTime, setProgressTime] = useState(STARTING_TIME_STRING)\n\n  const [recordingTime, setRecordingTime] =\n    useWidgetManagerElementState<string>({\n      widgetMgr,\n      id: element.id,\n      key: \"recordingTime\",\n      defaultValue: STARTING_TIME_STRING,\n    })\n\n  const [shouldUpdatePlaybackTime, setShouldUpdatePlaybackTime] =\n    useState(false)\n  const [hasNoMicPermissions, setHasNoMicPermissions] = useState(false)\n  const [hasRequestedMicPermissions, setHasRequestedMicPermissions] =\n    useState(false)\n  const [isUploading, setIsUploading] = useState(false)\n  const [isError, setIsError] = useState(false)\n\n  const widgetId = element.id\n  const widgetFormId = element.formId\n\n  const transcodeAndUploadFile = useCallback(\n    async (blob: Blob) => {\n      setIsUploading(true)\n      if (notNullOrUndefined(widgetFormId))\n        widgetMgr.setFormsWithUploadsInProgress(new Set([widgetFormId]))\n\n      let wavBlob: Blob | undefined = undefined\n\n      if (blob.type === \"audio/wav\") {\n        wavBlob = blob\n      } else {\n        wavBlob = await convertAudioToWav(blob)\n      }\n\n      if (!wavBlob) {\n        setIsError(true)\n        return\n      }\n\n      const url = URL.createObjectURL(wavBlob)\n      const file = new File([wavBlob], \"audio.wav\", { type: wavBlob.type })\n\n      setRecordingUrl(url)\n\n      uploadFiles({\n        files: [file],\n        uploadClient,\n        widgetMgr,\n        widgetInfo: { id: widgetId, formId: widgetFormId },\n        fragmentId,\n      })\n        .then(({ successfulUploads, failedUploads }) => {\n          if (failedUploads.length > 0) {\n            setIsError(true)\n            return\n          }\n          const upload = successfulUploads[0]\n          if (upload && upload.fileUrl.deleteUrl) {\n            setDeleteFileUrl(upload.fileUrl.deleteUrl)\n          }\n        })\n        .finally(() => {\n          if (notNullOrUndefined(widgetFormId))\n            widgetMgr.setFormsWithUploadsInProgress(new Set())\n\n          setIsUploading(false)\n        })\n    },\n    [\n      setRecordingUrl,\n      uploadClient,\n      widgetMgr,\n      widgetId,\n      widgetFormId,\n      fragmentId,\n      setDeleteFileUrl,\n    ]\n  )\n\n  const handleClear = useCallback(\n    ({ updateWidgetManager }: { updateWidgetManager?: boolean }) => {\n      if (isNullOrUndefined(wavesurfer) || isNullOrUndefined(deleteFileUrl)) {\n        return\n      }\n      setRecordingUrl(null)\n      wavesurfer.empty()\n      uploadClient.deleteFile(deleteFileUrl)\n      setProgressTime(STARTING_TIME_STRING)\n      setRecordingTime(STARTING_TIME_STRING)\n      setDeleteFileUrl(null)\n      if (updateWidgetManager) {\n        widgetMgr.setFileUploaderStateValue(\n          element,\n          {},\n          { fromUi: true },\n          fragmentId\n        )\n      }\n      setShouldUpdatePlaybackTime(false)\n      if (notNullOrUndefined(recordingUrl)) {\n        URL.revokeObjectURL(recordingUrl)\n      }\n    },\n    [\n      deleteFileUrl,\n      recordingUrl,\n      uploadClient,\n      wavesurfer,\n      element,\n      widgetMgr,\n      fragmentId,\n      setRecordingTime,\n      setRecordingUrl,\n      setDeleteFileUrl,\n    ]\n  )\n\n  useEffect(() => {\n    if (isNullOrUndefined(widgetFormId)) return\n\n    const formClearHelper = new FormClearHelper()\n    formClearHelper.manageFormClearListener(widgetMgr, widgetFormId, () => {\n      handleClear({ updateWidgetManager: true })\n    })\n\n    return () => formClearHelper.disconnect()\n  }, [widgetFormId, handleClear, widgetMgr])\n\n  const initializeWaveSurfer = useCallback(() => {\n    if (waveSurferRef.current === null) return\n\n    const ws = WaveSurfer.create({\n      container: waveSurferRef.current,\n      waveColor: recordingUrl\n        ? blend(theme.colors.fadedText40, theme.genericColors.secondaryBg)\n        : theme.colors.primary,\n      progressColor: theme.colors.bodyText,\n      height:\n        parseFloat(getComputedStyle(document.documentElement).fontSize) *\n          parseFloat(theme.sizes.largestElementHeight.replace(\"rem\", \"\")) -\n        2 * WAVEFORM_PADDING,\n      barWidth: BAR_WIDTH,\n      barGap: BAR_GAP,\n      barRadius: BAR_RADIUS,\n      cursorWidth: CURSOR_WIDTH,\n      url: recordingUrl ?? undefined,\n    })\n\n    ws.on(\"timeupdate\", time => {\n      setProgressTime(formatTime(time * 1000)) // get from seconds to milliseconds\n    })\n\n    ws.on(\"pause\", () => {\n      forceRerender()\n    })\n\n    const rp = ws.registerPlugin(\n      RecordPlugin.create({\n        scrollingWaveform: false,\n        renderRecordedAudio: true,\n      })\n    )\n\n    rp.on(\"record-end\", async blob => {\n      transcodeAndUploadFile(blob)\n    })\n\n    rp.on(\"record-progress\", time => {\n      setRecordingTime(formatTime(time))\n    })\n\n    setWavesurfer(ws)\n    setRecordPlugin(rp)\n\n    return () => {\n      if (ws) ws.destroy()\n      if (rp) rp.destroy()\n    }\n    // note: intentionally excluding theme so that we don't have to recreate the wavesurfer instance\n    // and colors will be updated separately\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [transcodeAndUploadFile])\n\n  useEffect(() => initializeWaveSurfer(), [initializeWaveSurfer])\n\n  useEffect(() => {\n    if (!isEqual(previousTheme, theme)) {\n      wavesurfer?.setOptions({\n        waveColor: recordingUrl\n          ? blend(theme.colors.fadedText40, theme.genericColors.secondaryBg)\n          : theme.colors.primary,\n        progressColor: theme.colors.bodyText,\n      })\n    }\n  }, [theme, previousTheme, recordingUrl, wavesurfer])\n\n  const onClickPlayPause = useCallback(() => {\n    if (wavesurfer) {\n      wavesurfer.playPause()\n      // This is because we want the time to be the duration of the audio when they stop recording,\n      // but once they start playing it, we want it to be the current time. So, once they start playing it\n      // we'll start keeping track of the playback time from that point onwards (until re-recording).\n      setShouldUpdatePlaybackTime(true)\n      // despite the state change above, this is still needed to force a rerender and make the time styling work\n      forceRerender()\n    }\n  }, [wavesurfer])\n\n  const startRecording = useCallback(async () => {\n    let audioDeviceId = activeAudioDeviceId\n\n    if (!hasRequestedMicPermissions) {\n      // this first part is to ensure we prompt for getting the user's media devices\n      await navigator.mediaDevices\n        .getUserMedia({ audio: true })\n        .then(() =>\n          RecordPlugin.getAvailableAudioDevices().then(devices => {\n            setAvailableAudioDevices(devices)\n            if (devices.length > 0) {\n              const { deviceId } = devices[0]\n              setActiveAudioDeviceId(deviceId)\n              audioDeviceId = deviceId\n            }\n          })\n        )\n        .catch(_err => {\n          setHasNoMicPermissions(true)\n        })\n      setHasRequestedMicPermissions(true)\n    }\n\n    if (!recordPlugin || !audioDeviceId || !wavesurfer) {\n      return\n    }\n\n    wavesurfer.setOptions({\n      waveColor: theme.colors.primary,\n    })\n\n    if (recordingUrl) {\n      handleClear({ updateWidgetManager: false })\n    }\n\n    recordPlugin.startRecording({ deviceId: audioDeviceId }).then(() => {\n      // Update the record button to show the user that they can stop recording\n      forceRerender()\n    })\n  }, [\n    activeAudioDeviceId,\n    recordPlugin,\n    theme,\n    wavesurfer,\n    recordingUrl,\n    handleClear,\n    hasRequestedMicPermissions,\n  ])\n\n  const stopRecording = useCallback(() => {\n    if (!recordPlugin) return\n\n    recordPlugin.stopRecording()\n\n    wavesurfer?.setOptions({\n      // We are blending this color instead of directly using the theme color (fadedText40)\n      // because the \"faded\" part of fadedText40 means introducing some transparency, which\n      // causes problems with the progress waveform color because wavesurfer is choosing to\n      // tint the waveColor with the progressColor instead of directly setting the progressColor.\n      // This means that the low opacity of fadedText40 causes the progress waveform to\n      // have the same opacity which makes it impossible to darken it enough to match designs.\n      // We fix this by blending the colors to figure out what the resulting color should be at\n      // full opacity, and we usee that color to set the waveColor.\n      waveColor: blend(\n        theme.colors.fadedText40,\n        theme.genericColors.secondaryBg\n      ),\n    })\n  }, [recordPlugin, wavesurfer, theme])\n\n  const isRecording = Boolean(recordPlugin?.isRecording())\n  const isPlaying = Boolean(wavesurfer?.isPlaying())\n\n  const isPlayingOrRecording = isRecording || isPlaying\n  const showPlaceholder = !isRecording && !recordingUrl && !hasNoMicPermissions\n\n  const showNoMicPermissionsOrPlaceholderOrError =\n    hasNoMicPermissions || showPlaceholder || isError\n\n  const isDisabled = disabled || hasNoMicPermissions\n\n  return (\n    <StyledAudioInputContainerDiv\n      className=\"stAudioInput\"\n      data-testid=\"stAudioInput\"\n    >\n      <WidgetLabel\n        label={element.label}\n        disabled={isDisabled}\n        labelVisibility={labelVisibilityProtoValueToEnum(\n          element.labelVisibility?.value\n        )}\n      >\n        {element.help && (\n          <StyledWidgetLabelHelp>\n            <TooltipIcon content={element.help} placement={Placement.TOP} />\n          </StyledWidgetLabelHelp>\n        )}\n      </WidgetLabel>\n      <StyledWaveformContainerDiv>\n        <Toolbar\n          isFullScreen={false}\n          disableFullscreenMode={true}\n          target={StyledWaveformContainerDiv}\n        >\n          {deleteFileUrl && (\n            <ToolbarAction\n              label=\"Clear recording\"\n              icon={Delete}\n              onClick={() => handleClear({ updateWidgetManager: true })}\n              data-testid=\"stAudioInputClearRecordingButton\"\n            />\n          )}\n        </Toolbar>\n        <AudioInputActionButtons\n          isRecording={isRecording}\n          isPlaying={isPlaying}\n          isUploading={isUploading}\n          isError={isError}\n          recordingUrlExists={Boolean(recordingUrl)}\n          startRecording={startRecording}\n          stopRecording={stopRecording}\n          onClickPlayPause={onClickPlayPause}\n          onClear={() => {\n            handleClear({ updateWidgetManager: false })\n            setIsError(false)\n          }}\n          disabled={isDisabled}\n        />\n        <StyledWaveformInnerDiv>\n          {isError && <AudioInputErrorState />}\n          {showPlaceholder && <Placeholder />}\n          {hasNoMicPermissions && <NoMicPermissions />}\n          <StyledWaveSurferDiv\n            data-testid=\"stAudioInputWaveSurfer\"\n            ref={waveSurferRef}\n            show={!showNoMicPermissionsOrPlaceholderOrError}\n          />\n        </StyledWaveformInnerDiv>\n        <StyledWaveformTimeCode\n          isPlayingOrRecording={isPlayingOrRecording}\n          data-testid=\"stAudioInputWaveformTimeCode\"\n        >\n          {shouldUpdatePlaybackTime ? progressTime : recordingTime}\n        </StyledWaveformTimeCode>\n      </StyledWaveformContainerDiv>\n    </StyledAudioInputContainerDiv>\n  )\n}\n\nexport default memo(AudioInput)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport zip from \"lodash/zip\"\n\nimport { FileUploadClient } from \"@streamlit/lib/src/FileUploadClient\"\nimport {\n  WidgetInfo,\n  WidgetStateManager,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport {\n  FileUploaderState as FileUploaderStateProto,\n  IFileURLs,\n  UploadedFileInfo as UploadedFileInfoProto,\n} from \"@streamlit/lib/src/proto\"\nimport { ensureError } from \"@streamlit/lib/src/util/ErrorHandling\"\n\ntype SuccessfulUpload = {\n  fileUrl: IFileURLs\n  file: File\n}\n\ntype FailedUpload = {\n  file: File\n  error: Error\n}\n\nexport const uploadFiles = async ({\n  files,\n  uploadClient,\n  widgetMgr,\n  widgetInfo,\n  fragmentId,\n}: {\n  files: File[]\n  uploadClient: FileUploadClient\n  widgetMgr: WidgetStateManager\n  widgetInfo: WidgetInfo\n  fragmentId?: string\n}): Promise<{\n  successfulUploads: SuccessfulUpload[]\n  failedUploads: FailedUpload[]\n}> => {\n  let fileUrls: IFileURLs[] = []\n\n  try {\n    fileUrls = await uploadClient.fetchFileURLs(files)\n  } catch (e) {\n    return {\n      successfulUploads: [],\n      failedUploads: files.map(file => ({ file, error: ensureError(e) })),\n    }\n  }\n\n  const filesWithUrls = zip(files, fileUrls)\n\n  const successfulUploads: SuccessfulUpload[] = []\n  const failedUploads: FailedUpload[] = []\n\n  await Promise.all(\n    filesWithUrls.map(async ([file, fileUrl]) => {\n      if (!file || !fileUrl || !fileUrl.uploadUrl || !fileUrl.fileId) {\n        return { file, fileUrl, error: new Error(\"No upload URL found\") }\n      }\n\n      try {\n        await uploadClient.uploadFile(\n          { id: fileUrl.fileId, formId: widgetInfo.formId || \"\" }, // TODO SEE IF DOWNSTREAM LOGIC CAN BE SIMPLIFIED\n          fileUrl.uploadUrl,\n          file\n        )\n        successfulUploads.push({ fileUrl, file })\n      } catch (e) {\n        const error = ensureError(e)\n        failedUploads.push({ file, error })\n      }\n    })\n  )\n\n  widgetMgr.setFileUploaderStateValue(\n    widgetInfo,\n    new FileUploaderStateProto({\n      uploadedFileInfo: successfulUploads.map(\n        ({ file, fileUrl }) =>\n          new UploadedFileInfoProto({\n            fileId: fileUrl.fileId,\n            fileUrls: fileUrl,\n            name: file.name,\n            size: file.size,\n          })\n      ),\n    }),\n    {\n      fromUi: true,\n    },\n    fragmentId\n  )\n\n  return { successfulUploads, failedUploads }\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEffect } from \"react\"\n\nimport { SignalConnection } from \"typed-signals\"\n\nimport {\n  isValidFormId,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\n\nexport class FormClearHelper {\n  private formClearListener?: SignalConnection\n\n  private lastWidgetMgr?: WidgetStateManager\n\n  private lastFormId?: string\n\n  /**\n   * Register the listener that will be called when the widget's form is cleared.\n   * This should be called in the `render` function of every class-based widget\n   * element - it mimics the behavior of a `useEffect` hook, and ensures that\n   * subscription and unsubscription happen correctly.\n   *\n   * Hooks-based widgets can just use `useEffect` and call\n   * `widgetMgr.addFormClearedListener` directly. Or just use the convenient\n   * hook `useFormClearHelper`, below.\n   */\n  public manageFormClearListener(\n    widgetMgr: WidgetStateManager,\n    formId: string,\n    listener: () => void\n  ): void {\n    // If we're already subscribed and our params haven't changed, early-out.\n    if (\n      notNullOrUndefined(this.formClearListener) &&\n      this.lastWidgetMgr === widgetMgr &&\n      this.lastFormId === formId\n    ) {\n      return\n    }\n\n    // Close our previous subscription, if we had one.\n    this.disconnect()\n\n    // If we're not part of a form, there's nothing to do.\n    if (!isValidFormId(formId)) {\n      return\n    }\n\n    // Make the new subscription.\n    this.formClearListener = widgetMgr.addFormClearedListener(formId, listener)\n    this.lastWidgetMgr = widgetMgr\n    this.lastFormId = formId\n  }\n\n  /**\n   * Disconnect from the form-clear signal, if we're connected.\n   * This should be called from the `componentWillUnmount` function of every\n   * element that uses it.\n   */\n  public disconnect(): void {\n    this.formClearListener?.disconnect()\n    this.formClearListener = undefined\n    this.lastWidgetMgr = undefined\n    this.lastFormId = undefined\n  }\n}\n\ninterface FormElementProtoInterface {\n  formId: string\n}\n\ninterface FormClearHelperArgs {\n  element: FormElementProtoInterface\n  widgetMgr: WidgetStateManager\n  onFormCleared: () => void\n}\n\nexport function useFormClearHelper({\n  element,\n  widgetMgr,\n  onFormCleared,\n}: FormClearHelperArgs): void {\n  useEffect(() => {\n    if (!isValidFormId(element.formId)) {\n      return\n    }\n\n    const formClearListener = widgetMgr.addFormClearedListener(\n      element.formId,\n      onFormCleared\n    )\n\n    return () => {\n      formClearListener.disconnect()\n    }\n  }, [element, widgetMgr, onFormCleared])\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\n\nexport const usePrevious = (value: any): any => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport const useIsOverflowing = (\n  ref: MutableRefObject<HTMLElement | null>,\n  expanded?: boolean\n): boolean => {\n  const { current } = ref\n  const [isOverflowing, setIsOverflowing] = useState(false)\n  const checkOverflowing = useCallback(() => {\n    if (current) {\n      const { scrollHeight, clientHeight } = current\n\n      setIsOverflowing(scrollHeight > clientHeight)\n    }\n  }, [current])\n\n  // We want to double check if the element is overflowing\n  // when the expanded state changes or the height of the\n  // element changes\n  useEffect(() => {\n    checkOverflowing()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expanded, current?.clientHeight])\n\n  // Window resizing can also affect the overflow state\n  // so we need to check it as well\n  useEffect(() => {\n    window.addEventListener(\"resize\", checkOverflowing)\n\n    return () => {\n      window.removeEventListener(\"resize\", checkOverflowing)\n    }\n  }, [checkOverflowing])\n\n  return isOverflowing\n}\n"],"names":["TOP_DISTANCE","StyledToolbarWrapper","_styled","target","_ref","theme","locked","padding","spacing","sm","position","top","right","none","transition","opacity","StyledToolbar","_ref2","color","hasLightBackgroundColor","colors","fadedText60","bodyText","display","flexDirection","alignItems","justifyContent","boxShadow","borderRadius","radii","default","backgroundColor","lightenedBg05","width","zIndex","zIndices","sidebar","ToolbarAction","label","show_label","icon","onClick","useTheme","displayLabel","_jsx","children","Tooltip","content","StreamlitMarkdown","source","allowHTML","style","fontSize","fontSizes","placement","Placement","TOP","onMouseEnterDelay","inline","_jsxs","Button","event","stopPropagation","kind","BaseButtonKind","ELEMENT_TOOLBAR","Icon","size","testid","onExpand","onCollapse","isFullScreen","disableFullscreenMode","className","Fullscreen","FullscreenExit","_widgetMgr$getElement","widgetMgr","id","key","defaultValue","useEffect","existingValue","getElementState","isNullOrUndefined","notNullOrUndefined","setElementState","state","setStateInternal","useState","useCallback","value","StyledAudioInputContainerDiv","StyledWaveformContainerDiv","height","sizes","largestElementHeight","background","genericColors","secondaryBg","marginBottom","twoXS","paddingLeft","xs","paddingRight","StyledWaveformInnerDiv","name","styles","StyledWaveSurferDiv","show","StyledWaveformTimeCode","_ref3","isPlayingOrRecording","margin","fontFamily","fonts","monospace","StyledErrorContainerDiv","textAlign","overflow","StyledErrorTextSpan","_ref4","StyledNoMicInputLearnMoreLink","StyledPlaceholderContainerDiv","_ref5","StyledPlaceholderDotsDiv","_ref6","backgroundImage","fadedText10","backgroundSize","backgroundRepeat","StyledActionButtonStopRecordingDiv","_ref7","primary","threeXS","red","StyledActionButtonStartRecordingDiv","_ref8","fadedText40","StyledActionButtonPlayPauseDiv","_ref9","StyledActionButtonContainerDiv","_ref10","flexGrow","flexShrink","gap","marginRight","StyledWidgetLabelHelp","_ref11","marginLeft","StyledSpinner","Spinner","_ref12","borderWidth","radius","md","justifyContents","borderColor","borderTopColor","NoMicPermissions","href","ENABLE_PERIPHERALS_DOCS_URL","Placeholder","STARTING_TIME_STRING","timeMs","Date","toLocaleTimeString","undefined","minute","second","ActionButton","disabled","ariaLabel","iconContent","BaseButton","BORDERLESS_ICON","fluidWidth","AudioInputStopRecordingButton","stopRecording","StopCircle","AudioInputPlayPauseButton","isPlaying","onClickPlayPause","Pause","PlayArrow","AudioInputStartRecordingButton","startRecording","Mic","AudioInputResetButton","Refresh","AudioInputActionButtons","isRecording","isUploading","isError","recordingUrlExists","onClear","memo","floatTo16BitPCM","output","offset","input","i","length","s","Math","max","min","setInt16","async","fileBlob","audioContext","window","AudioContext","arrayBuffer","audioBuffer","decodeAudioData","error","logError","numOfChan","numberOfChannels","sampleRate","buffer","ArrayBuffer","view","DataView","wavHeader","type","Object","entries","forEach","intOffset","parseInt","string","setUint8","charCodeAt","writeString","setUint32","setUint16","channel","getChannelData","wavArray","Uint8Array","Blob","AudioInputErrorState","AudioInput","_element$labelVisibil","element","uploadClient","fragmentId","previousTheme","usePrevious","wavesurfer","setWavesurfer","waveSurferRef","React","deleteFileUrl","setDeleteFileUrl","useWidgetManagerElementState","recordPlugin","setRecordPlugin","availableAudioDevices","setAvailableAudioDevices","activeAudioDeviceId","setActiveAudioDeviceId","recordingUrl","setRecordingUrl","setRerender","forceRerender","prev","progressTime","setProgressTime","recordingTime","setRecordingTime","shouldUpdatePlaybackTime","setShouldUpdatePlaybackTime","hasNoMicPermissions","setHasNoMicPermissions","hasRequestedMicPermissions","setHasRequestedMicPermissions","setIsUploading","setIsError","widgetId","widgetFormId","formId","transcodeAndUploadFile","wavBlob","setFormsWithUploadsInProgress","Set","blob","convertAudioToWav","url","URL","createObjectURL","file","File","files","widgetInfo","fileUrls","fetchFileURLs","e","successfulUploads","failedUploads","map","ensureError","filesWithUrls","zip","Promise","all","fileUrl","uploadUrl","fileId","Error","uploadFile","push","setFileUploaderStateValue","FileUploaderStateProto","uploadedFileInfo","UploadedFileInfoProto","fromUi","uploadFiles","then","upload","deleteUrl","finally","handleClear","updateWidgetManager","empty","deleteFile","revokeObjectURL","formClearHelper","FormClearHelper","manageFormClearListener","disconnect","initializeWaveSurfer","current","ws","WaveSurfer","create","container","waveColor","blend","progressColor","parseFloat","getComputedStyle","document","documentElement","replace","barWidth","barGap","barRadius","cursorWidth","on","time","formatTime","rp","registerPlugin","RecordPlugin","scrollingWaveform","renderRecordedAudio","destroy","isEqual","setOptions","playPause","audioDeviceId","navigator","mediaDevices","getUserMedia","audio","getAvailableAudioDevices","devices","deviceId","catch","_err","Boolean","showPlaceholder","showNoMicPermissionsOrPlaceholderOrError","isDisabled","WidgetLabel","labelVisibility","labelVisibilityProtoValueToEnum","help","TooltipIcon","Toolbar","Delete","ref","constructor","formClearListener","lastWidgetMgr","lastFormId","listener","this","isValidFormId","addFormClearedListener","_this$formClearListen","useFormClearHelper","onFormCleared","useRef"],"sourceRoot":""}